//*******************************************
// This code was generated by proto2datalog.
// Do not check into version control.
//*******************************************

block (`credentials) {
  export ( `{
/*
* message CredentialRequest
*/
CredentialRequest(_) -> .CredentialRequestConstructor[i]=x ->int(i), CredentialRequest(x).
CredentialRequest_get[x, i] = y -> CredentialRequest(x), int(i), lb:web:credentials:GetCredentialRequest(y).
CredentialRequest_set[x, i] = y -> CredentialRequest(x), int(i), lb:web:credentials:SetCredentialRequest(y).
CredentialRequest_list[x] = y -> CredentialRequest(x), lb:web:credentials:ListUsersRequest(y).
/*
* message CredentialResponse
*/
CredentialResponse(_) -> .CredentialResponseConstructor[i]=x ->int(i), CredentialResponse(x).
CredentialResponse_get[x, i] = y -> CredentialResponse(x), int(i), lb:web:credentials:GetCredentialResponse(y).
CredentialResponse_set[x, i] = y -> CredentialResponse(x), int(i), lb:web:credentials:SetCredentialResponse(y).
CredentialResponse_list[x] = y -> CredentialResponse(x), lb:web:credentials:ListUsersResponse(y).
CredentialResponse_error[x] = y -> CredentialResponse(x), string(y).
CredentialResponse_error_code[x] = y -> CredentialResponse(x), string(y).
/*
* message GetCredentialRequest
*/
GetCredentialRequest(_) -> .GetCredentialRequestConstructor[i]=x ->int(i), GetCredentialRequest(x).
GetCredentialRequest_user_name[x] = y -> GetCredentialRequest(x), string(y).
GetCredentialRequest_email[x] = y -> GetCredentialRequest(x), string(y).
GetCredentialRequest_change_token[x] = y -> GetCredentialRequest(x), string(y).
GetCredentialRequest_include_password_hash[x] = y -> GetCredentialRequest(x), boolean(y).
GetCredentialRequest_include_public_key[x] = y -> GetCredentialRequest(x), boolean(y).
/*
* message GetCredentialResponse
*/
GetCredentialResponse(_) -> .GetCredentialResponseConstructor[i]=x ->int(i), GetCredentialResponse(x).
GetCredentialResponse_user_name[x] = y -> GetCredentialResponse(x), string(y).
GetCredentialResponse_password_hash[x] = y -> GetCredentialResponse(x), string(y).
GetCredentialResponse_public_key[x] = y -> GetCredentialResponse(x), string(y).
GetCredentialResponse_email[x] = y -> GetCredentialResponse(x), string(y).
GetCredentialResponse_active[x] = y -> GetCredentialResponse(x), boolean(y).
GetCredentialResponse_roles(x, y) -> GetCredentialResponse(x), string(y).
/*
* message SetCredentialRequest
*/
SetCredentialRequest(_) -> .SetCredentialRequestConstructor[i]=x ->int(i), SetCredentialRequest(x).
SetCredentialRequest_user_name[x] = y -> SetCredentialRequest(x), string(y).
SetCredentialRequest_password_clear[x] = y -> SetCredentialRequest(x), string(y).
SetCredentialRequest_password_hash[x] = y -> SetCredentialRequest(x), string(y).
SetCredentialRequest_delete_password_hash[x] = y -> SetCredentialRequest(x), boolean(y).
SetCredentialRequest_public_key[x] = y -> SetCredentialRequest(x), string(y).
SetCredentialRequest_active[x] = y -> SetCredentialRequest(x), boolean(y).
SetCredentialRequest_create[x] = y -> SetCredentialRequest(x), boolean(y).
SetCredentialRequest_change_token[x] = y -> SetCredentialRequest(x), string(y).
SetCredentialRequest_change_token_valid[x] = y -> SetCredentialRequest(x), string(y).
SetCredentialRequest_delete_change_tokens[x] = y -> SetCredentialRequest(x), boolean(y).
/*
* message SetCredentialResponse
*/
SetCredentialResponse(_) -> .SetCredentialResponseConstructor[i]=x ->int(i), SetCredentialResponse(x).
SetCredentialResponse_error[x] = y -> SetCredentialResponse(x), string(y).
SetCredentialResponse_error_code[x] = y -> SetCredentialResponse(x), string(y).
/*
* message ListUsersRequest
*/
ListUsersRequest(_) -> .ListUsersRequestConstructor[i]=x ->int(i), ListUsersRequest(x).
/*
* message ListUsersResponse
*/
ListUsersResponse(_) -> .ListUsersResponseConstructor[i]=x ->int(i), ListUsersResponse(x).
ListUsersResponse_user[x, i] = y -> ListUsersResponse(x), int(i), string(y).
/*
* message Role
*/
Role(_) -> .RoleConstructor[i]=x ->int(i), Role(x).
Role_name[x] = y -> Role(x), string(y).
Role_description[x] = y -> Role(x), string(y).
Role_permissions(x, y) -> Role(x), string(y).
/*
* message Permission
*/
Permission(_) -> .PermissionConstructor[i]=x ->int(i), Permission(x).
Permission_name[x] = y -> Permission(x), string(y).
Permission_description[x] = y -> Permission(x), string(y).
Permission_operations(x, y) -> Permission(x), string(y).
/*
* message Operation
*/
Operation(_) -> .OperationConstructor[i]=x ->int(i), Operation(x).
Operation_name[x] = y -> Operation(x), string(y).
Operation_description[x] = y -> Operation(x), string(y).
/*
* message GetRolesRequest
*/
GetRolesRequest(_) -> .GetRolesRequestConstructor[i]=x ->int(i), GetRolesRequest(x).
GetRolesRequest_roles(x, y) -> GetRolesRequest(x), string(y).
/*
* message GetPermissionsRequest
*/
GetPermissionsRequest(_) -> .GetPermissionsRequestConstructor[i]=x ->int(i), GetPermissionsRequest(x).
GetPermissionsRequest_permissions(x, y) -> GetPermissionsRequest(x), string(y).
/*
* message GetOperationsRequest
*/
GetOperationsRequest(_) -> .GetOperationsRequestConstructor[i]=x ->int(i), GetOperationsRequest(x).
GetOperationsRequest_operations(x, y) -> GetOperationsRequest(x), string(y).
/*
* message GetAuthorizationResponse
*/
GetAuthorizationResponse(_) -> .GetAuthorizationResponseConstructor[i]=x ->int(i), GetAuthorizationResponse(x).
GetAuthorizationResponse_roles(x, y) -> GetAuthorizationResponse(x), lb:web:credentials:Role(y).
GetAuthorizationResponse_permissions(x, y) -> GetAuthorizationResponse(x), lb:web:credentials:Permission(y).
GetAuthorizationResponse_operations(x, y) -> GetAuthorizationResponse(x), lb:web:credentials:Operation(y).
 } ),
  clauses ( `{
lang:constructor(`CredentialRequestConstructor).
lang:pulse(`CredentialRequestConstructor).
lang:pulse(`CredentialRequest).
lang:pulse(`CredentialRequest_get).
lang:pulse(`CredentialRequest_set).
lang:pulse(`CredentialRequest_list).
lang:constructor(`CredentialResponseConstructor).
lang:pulse(`CredentialResponseConstructor).
lang:pulse(`CredentialResponse).
lang:pulse(`CredentialResponse_get).
lang:pulse(`CredentialResponse_set).
lang:pulse(`CredentialResponse_list).
lang:pulse(`CredentialResponse_error).
lang:pulse(`CredentialResponse_error_code).
lang:constructor(`GetCredentialRequestConstructor).
lang:pulse(`GetCredentialRequestConstructor).
lang:pulse(`GetCredentialRequest).
lang:pulse(`GetCredentialRequest_user_name).
lang:pulse(`GetCredentialRequest_email).
lang:pulse(`GetCredentialRequest_change_token).
lang:pulse(`GetCredentialRequest_include_password_hash).
lang:pulse(`GetCredentialRequest_include_public_key).
lang:constructor(`GetCredentialResponseConstructor).
lang:pulse(`GetCredentialResponseConstructor).
lang:pulse(`GetCredentialResponse).
lang:pulse(`GetCredentialResponse_user_name).
lang:pulse(`GetCredentialResponse_password_hash).
lang:pulse(`GetCredentialResponse_public_key).
lang:pulse(`GetCredentialResponse_email).
lang:pulse(`GetCredentialResponse_active).
lang:pulse(`GetCredentialResponse_roles).
lang:constructor(`SetCredentialRequestConstructor).
lang:pulse(`SetCredentialRequestConstructor).
lang:pulse(`SetCredentialRequest).
lang:pulse(`SetCredentialRequest_user_name).
lang:pulse(`SetCredentialRequest_password_clear).
lang:pulse(`SetCredentialRequest_password_hash).
lang:pulse(`SetCredentialRequest_delete_password_hash).
lang:pulse(`SetCredentialRequest_public_key).
lang:pulse(`SetCredentialRequest_active).
lang:pulse(`SetCredentialRequest_create).
lang:pulse(`SetCredentialRequest_change_token).
lang:pulse(`SetCredentialRequest_change_token_valid).
lang:pulse(`SetCredentialRequest_delete_change_tokens).
lang:constructor(`SetCredentialResponseConstructor).
lang:pulse(`SetCredentialResponseConstructor).
lang:pulse(`SetCredentialResponse).
lang:pulse(`SetCredentialResponse_error).
lang:pulse(`SetCredentialResponse_error_code).
lang:constructor(`ListUsersRequestConstructor).
lang:pulse(`ListUsersRequestConstructor).
lang:pulse(`ListUsersRequest).
lang:constructor(`ListUsersResponseConstructor).
lang:pulse(`ListUsersResponseConstructor).
lang:pulse(`ListUsersResponse).
lang:pulse(`ListUsersResponse_user).
lang:constructor(`RoleConstructor).
lang:pulse(`RoleConstructor).
lang:pulse(`Role).
lang:pulse(`Role_name).
lang:pulse(`Role_description).
lang:pulse(`Role_permissions).
lang:constructor(`PermissionConstructor).
lang:pulse(`PermissionConstructor).
lang:pulse(`Permission).
lang:pulse(`Permission_name).
lang:pulse(`Permission_description).
lang:pulse(`Permission_operations).
lang:constructor(`OperationConstructor).
lang:pulse(`OperationConstructor).
lang:pulse(`Operation).
lang:pulse(`Operation_name).
lang:pulse(`Operation_description).
lang:constructor(`GetRolesRequestConstructor).
lang:pulse(`GetRolesRequestConstructor).
lang:pulse(`GetRolesRequest).
lang:pulse(`GetRolesRequest_roles).
lang:constructor(`GetPermissionsRequestConstructor).
lang:pulse(`GetPermissionsRequestConstructor).
lang:pulse(`GetPermissionsRequest).
lang:pulse(`GetPermissionsRequest_permissions).
lang:constructor(`GetOperationsRequestConstructor).
lang:pulse(`GetOperationsRequestConstructor).
lang:pulse(`GetOperationsRequest).
lang:pulse(`GetOperationsRequest_operations).
lang:constructor(`GetAuthorizationResponseConstructor).
lang:pulse(`GetAuthorizationResponseConstructor).
lang:pulse(`GetAuthorizationResponse).
lang:pulse(`GetAuthorizationResponse_roles).
lang:pulse(`GetAuthorizationResponse_permissions).
lang:pulse(`GetAuthorizationResponse_operations).
 } )
} <-- .