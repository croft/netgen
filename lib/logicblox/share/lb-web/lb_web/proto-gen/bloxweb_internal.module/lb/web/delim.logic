//*******************************************
// This code was generated by proto2datalog.
// Do not check into version control.
//*******************************************

block (`delim) {
  export ( `{

/**
 * enum EntityCreation
 */
EntityCreation(x) -> .
EntityCreation_enum[s]=x -> string(s), EntityCreation(x).
EntityCreation_value[x]=s -> EntityCreation(x), string(s).
/*
* message FileBinding
*/
FileBinding(_) -> .FileBindingConstructor[i]=x ->int(i), FileBinding(x).
FileBinding_name[x] = y -> FileBinding(x), string(y).
FileBinding_file[x] = y -> FileBinding(x), lb:web:delim:FileDefinition(y).
FileBinding_predicate(x, y) -> FileBinding(x), lb:web:delim:PredicateBinding(y).
FileBinding_default_value(x, y) -> FileBinding(x), lb:web:delim:DefaultValue(y).
FileBinding_ignore_idb_on_import[x] = y -> FileBinding(x), boolean(y).
/*
* message FileDefinition
*/
FileDefinition(_) -> .FileDefinitionConstructor[i]=x ->int(i), FileDefinition(x).
FileDefinition_name[x] = y -> FileDefinition(x), string(y).
FileDefinition_delimiter[x] = y -> FileDefinition(x), string(y).
FileDefinition_column[x, i] = y -> FileDefinition(x), int(i), lb:web:delim:FileColumn(y).
FileDefinition_mode[x] = y -> FileDefinition(x), string(y).
/*
* message FileColumn
*/
FileColumn(_) -> .FileColumnConstructor[i]=x ->int(i), FileColumn(x).
FileColumn_header[x] = y -> FileColumn(x), string(y).
FileColumn_format[x] = y -> FileColumn(x), lb:web:delim:Format(y).
FileColumn_required[x] = y -> FileColumn(x), boolean(y).
FileColumn_can_be_absent[x] = y -> FileColumn(x), boolean(y).
FileColumn_description[x] = y -> FileColumn(x), string(y).
/*
* message PredicateBinding
*/
PredicateBinding(_) -> .PredicateBindingConstructor[i]=x ->int(i), PredicateBinding(x).
PredicateBinding_predicate_name[x] = y -> PredicateBinding(x), string(y).
PredicateBinding_column[x, i] = y -> PredicateBinding(x), int(i), lb:web:delim:ColumnBinding(y).
PredicateBinding_export[x] = y -> PredicateBinding(x), boolean(y).
PredicateBinding_import[x] = y -> PredicateBinding(x), boolean(y).
PredicateBinding_no_retraction_on_post[x] = y -> PredicateBinding(x), boolean(y).
PredicateBinding_filter(x, y) -> PredicateBinding(x), lb:web:delim:Filter(y).
/*
* message ColumnBinding
*/
ColumnBinding(_) -> .ColumnBindingConstructor[i]=x ->int(i), ColumnBinding(x).
ColumnBinding_header[x, i] = y -> ColumnBinding(x), int(i), string(y).
ColumnBinding_entity_creation[x] = y -> ColumnBinding(x), lb:web:delim:EntityCreation(y).
ColumnBinding_import_function[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_import_function_inverse[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_export_function[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_export_function_inverse[x] = y -> ColumnBinding(x), string(y).
/*
* message Filter
*/
Filter(_) -> .FilterConstructor[i]=x ->int(i), Filter(x).
Filter_predicate_name[x] = y -> Filter(x), string(y).
Filter_header[x, i] = y -> Filter(x), int(i), string(y).
Filter_negated[x] = y -> Filter(x), boolean(y).
/*
* message DefaultValue
*/
DefaultValue(_) -> .DefaultValueConstructor[i]=x ->int(i), DefaultValue(x).
DefaultValue_header[x] = y -> DefaultValue(x), string(y).
DefaultValue_import_default_value[x] = y -> DefaultValue(x), string(y).
DefaultValue_export_default_value[x] = y -> DefaultValue(x), string(y).
/*
* message Format
*/
Format(_) -> .FormatConstructor[i]=x ->int(i), Format(x).
Format_id[x] = y -> Format(x), string(y).
Format_param[x, i] = y -> Format(x), int(i), string(y).
 } ),
  clauses ( `{
lang:constructor(`EntityCreation_enum).
EntityCreation_enum[s]=_ -> s = "NONE"; s = "ACCUMULATE"; s = "RETRACT"; s = "TOTAL".
EntityCreation(x), EntityCreation_enum["NONE"]=x <- .
EntityCreation(x), EntityCreation_enum["ACCUMULATE"]=x <- .
EntityCreation(x), EntityCreation_enum["RETRACT"]=x <- .
EntityCreation(x), EntityCreation_enum["TOTAL"]=x <- .
EntityCreation_value[x]=s <- EntityCreation_enum[s]=x.
EntityCreation_value[x]=s -> EntityCreation_enum[s]=x.
lang:constructor(`FileBindingConstructor).
lang:pulse(`FileBindingConstructor).
lang:pulse(`FileBinding).
lang:pulse(`FileBinding_name).
lang:pulse(`FileBinding_file).
lang:pulse(`FileBinding_predicate).
lang:pulse(`FileBinding_default_value).
lang:pulse(`FileBinding_ignore_idb_on_import).
lang:constructor(`FileDefinitionConstructor).
lang:pulse(`FileDefinitionConstructor).
lang:pulse(`FileDefinition).
lang:pulse(`FileDefinition_name).
lang:pulse(`FileDefinition_delimiter).
lang:pulse(`FileDefinition_column).
lang:pulse(`FileDefinition_mode).
lang:constructor(`FileColumnConstructor).
lang:pulse(`FileColumnConstructor).
lang:pulse(`FileColumn).
lang:pulse(`FileColumn_header).
lang:pulse(`FileColumn_format).
lang:pulse(`FileColumn_required).
lang:pulse(`FileColumn_can_be_absent).
lang:pulse(`FileColumn_description).
lang:constructor(`PredicateBindingConstructor).
lang:pulse(`PredicateBindingConstructor).
lang:pulse(`PredicateBinding).
lang:pulse(`PredicateBinding_predicate_name).
lang:pulse(`PredicateBinding_column).
lang:pulse(`PredicateBinding_export).
lang:pulse(`PredicateBinding_import).
lang:pulse(`PredicateBinding_no_retraction_on_post).
lang:pulse(`PredicateBinding_filter).
lang:constructor(`ColumnBindingConstructor).
lang:pulse(`ColumnBindingConstructor).
lang:pulse(`ColumnBinding).
lang:pulse(`ColumnBinding_header).
lang:pulse(`ColumnBinding_entity_creation).
lang:pulse(`ColumnBinding_import_function).
lang:pulse(`ColumnBinding_import_function_inverse).
lang:pulse(`ColumnBinding_export_function).
lang:pulse(`ColumnBinding_export_function_inverse).
lang:constructor(`FilterConstructor).
lang:pulse(`FilterConstructor).
lang:pulse(`Filter).
lang:pulse(`Filter_predicate_name).
lang:pulse(`Filter_header).
lang:pulse(`Filter_negated).
lang:constructor(`DefaultValueConstructor).
lang:pulse(`DefaultValueConstructor).
lang:pulse(`DefaultValue).
lang:pulse(`DefaultValue_header).
lang:pulse(`DefaultValue_import_default_value).
lang:pulse(`DefaultValue_export_default_value).
lang:constructor(`FormatConstructor).
lang:pulse(`FormatConstructor).
lang:pulse(`Format).
lang:pulse(`Format_id).
lang:pulse(`Format_param).
 } )
} <-- .