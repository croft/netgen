//*******************************************
// This code was generated by proto2datalog.
// Do not check into version control.
//*******************************************

block (`output) {
  export ( `{

/**
 * enum PositionAccessCalcMode
 */
PositionAccessCalcMode(x) -> .
PositionAccessCalcMode_enum[s]=x -> string(s), PositionAccessCalcMode(x).
PositionAccessCalcMode_value[x]=s -> PositionAccessCalcMode(x), string(s).

/**
 * enum NewPositionMode
 */
NewPositionMode(x) -> .
NewPositionMode_enum[s]=x -> string(s), NewPositionMode(x).
NewPositionMode_value[x]=s -> NewPositionMode(x), string(s).

/**
 * enum Role
 */
Role(x) -> .
Role_enum[s]=x -> string(s), Role(x).
Role_value[x]=s -> Role(x), string(s).

/**
 * enum Access
 */
Access(x) -> .
Access_enum[s]=x -> string(s), Access(x).
Access_value[x]=s -> Access(x), string(s).

/**
 * enum MergeMethod
 */
MergeMethod(x) -> .
MergeMethod_enum[s]=x -> string(s), MergeMethod(x).
MergeMethod_value[x]=s -> MergeMethod(x), string(s).
/*
* message Workbook
*/
Workbook(_) -> .WorkbookConstructor[i]=x ->int(i), Workbook(x).
Workbook_error[x] = y -> Workbook(x), string(y).
Workbook_error_code[x] = y -> Workbook(x), string(y).
Workbook_id[x] = y -> Workbook(x), string(y).
Workbook_name[x] = y -> Workbook(x), string(y).
Workbook_workspace[x] = y -> Workbook(x), lb:web:workbooks:output:Workspace(y).
Workbook_parent_workbook[x] = y -> Workbook(x), lb:web:workbooks:output:Workspace(y).
Workbook_checkout_method[x] = y -> Workbook(x), lb:web:workbooks:output:Workbook:CheckoutMethod(y).
Workbook_data_access[x] = y -> Workbook(x), lb:web:workbooks:output:DataAccessSpecification(y).
Workbook_refresh_requests(x, y) -> Workbook(x), lb:web:workbooks:output:CommitRefreshRequest(y).
Workbook_commit_requests(x, y) -> Workbook(x), lb:web:workbooks:output:CommitRefreshRequest(y).
Workbook_users(x, y) -> Workbook(x), lb:web:workbooks:output:User(y).
Workbook_start_build_time[x] = y -> Workbook(x), string(y).
Workbook_end_build_time[x] = y -> Workbook(x), string(y).
Workbook_olap_model[x] = y -> Workbook(x), lb:web:workbooks:output:OLAPModel(y).
Workbook_deleted_on[x] = y -> Workbook(x), string(y).
Workbook_template_id[x] = y -> Workbook(x), string(y).
Workbook_template_name[x] = y -> Workbook(x), string(y).
Workbook_filter_seeds(x, y) -> Workbook(x), lb:web:workbooks:output:FilterSeed(y).
Workbook_skip_not_derived[x] = y -> Workbook(x), boolean(y).
Workbook_merge_method[x] = y -> Workbook(x), lb:web:workbooks:output:MergeMethod(y).
/*
* message FilterSeed
*/
FilterSeed(_) -> .FilterSeedConstructor[i]=x ->int(i), FilterSeed(x).
FilterSeed_filter[x] = y -> FilterSeed(x), string(y).
FilterSeed_seed[x] = y -> FilterSeed(x), string(y).
FilterSeed_predicate[x] = y -> FilterSeed(x), string(y).
/*
* message WorkbookList
*/
WorkbookList(_) -> .WorkbookListConstructor[i]=x ->int(i), WorkbookList(x).
WorkbookList_workbooks(x, y) -> WorkbookList(x), lb:web:workbooks:output:Workbook(y).
WorkbookList_id(x, y) -> WorkbookList(x), string(y).
/*
* message WorkbookSummary
*/
WorkbookSummary(_) -> .WorkbookSummaryConstructor[i]=x ->int(i), WorkbookSummary(x).
WorkbookSummary_id[x] = y -> WorkbookSummary(x), string(y).
WorkbookSummary_workspace[x] = y -> WorkbookSummary(x), lb:web:workbooks:output:Workspace(y).
WorkbookSummary_name[x] = y -> WorkbookSummary(x), string(y).
WorkbookSummary_last_access[x] = y -> WorkbookSummary(x), int(y).
WorkbookSummary_created[x] = y -> WorkbookSummary(x), int(y).
WorkbookSummary_deleted[x] = y -> WorkbookSummary(x), int(y).
/*
* message OLAPModel
*/
OLAPModel(_) -> .OLAPModelConstructor[i]=x ->int(i), OLAPModel(x).
OLAPModel_position_access[x] = y -> OLAPModel(x), lb:web:workbooks:output:PositionAccessSpec(y).
OLAPModel_olap_refresh_groups(x, y) -> OLAPModel(x), lb:web:workbooks:output:OLAPCommitRefreshGroup(y).
OLAPModel_olap_commit_groups(x, y) -> OLAPModel(x), lb:web:workbooks:output:OLAPCommitRefreshGroup(y).
OLAPModel_measure_access[x] = y -> OLAPModel(x), lb:web:workbooks:output:MeasureAccess(y).
/*
* message MeasureAccess
*/
MeasureAccess(_) -> .MeasureAccessConstructor[i]=x ->int(i), MeasureAccess(x).
MeasureAccess_measures[x, i] = y -> MeasureAccess(x), int(i), string(y).
MeasureAccess_exclude[x] = y -> MeasureAccess(x), boolean(y).
/*
* message Workspace
*/
Workspace(_) -> .WorkspaceConstructor[i]=x ->int(i), Workspace(x).
Workspace_host[x] = y -> Workspace(x), string(y).
Workspace_workspace_name[x] = y -> Workspace(x), string(y).
Workspace_branch_name[x] = y -> Workspace(x), string(y).
Workspace_clone_branch_name[x] = y -> Workspace(x), string(y).
/*
* message DataAccessSpecification
*/
DataAccessSpecification(_) -> .DataAccessSpecificationConstructor[i]=x ->int(i), DataAccessSpecification(x).
DataAccessSpecification_filtered_predicates(x, y) -> DataAccessSpecification(x), lb:web:workbooks:output:FilteredPredicate(y).
DataAccessSpecification_filters(x, y) -> DataAccessSpecification(x), lb:web:workbooks:output:Filter(y).
/*
* message FilteredPredicate
*/
FilteredPredicate(_) -> .FilteredPredicateConstructor[i]=x ->int(i), FilteredPredicate(x).
FilteredPredicate_predicate_name[x] = y -> FilteredPredicate(x), string(y).
FilteredPredicate_filter_name[x] = y -> FilteredPredicate(x), string(y).
FilteredPredicate_new_value_access[x] = y -> FilteredPredicate(x), lb:web:workbooks:output:Access(y).
/*
* message Filter
*/
Filter(_) -> .FilterConstructor[i]=x ->int(i), Filter(x).
Filter_filter_name[x] = y -> Filter(x), string(y).
Filter_filter_type[x] = y -> Filter(x), lb:web:workbooks:output:Filter:FilterType(y).
Filter_enum_filter[x] = y -> Filter(x), lb:web:workbooks:output:EnumerationFilter(y).
Filter_composed_filter[x] = y -> Filter(x), lb:web:workbooks:output:ComposedFilter(y).
Filter_all_filter[x] = y -> Filter(x), lb:web:workbooks:output:AllFilter(y).
Filter_projection[x] = y -> Filter(x), lb:web:workbooks:output:ProjectionFilter(y).
Filter_union[x] = y -> Filter(x), lb:web:workbooks:output:UnionFilter(y).
Filter_back_projection[x] = y -> Filter(x), lb:web:workbooks:output:BackProjectionFilter(y).
/*
* message EnumerationFilter
*/
EnumerationFilter(_) -> .EnumerationFilterConstructor[i]=x ->int(i), EnumerationFilter(x).
EnumerationFilter_tuples[x, i] = y -> EnumerationFilter(x), int(i), lb:web:workbooks:output:AnnotatedTuple(y).
/*
* message ComposedFilter
*/
ComposedFilter(_) -> .ComposedFilterConstructor[i]=x ->int(i), ComposedFilter(x).
ComposedFilter_operator[x] = y -> ComposedFilter(x), lb:web:workbooks:output:ComposedFilter:Operator(y).
ComposedFilter_components[x, i] = y -> ComposedFilter(x), int(i), string(y).
/*
* message AllFilter
*/
AllFilter(_) -> .AllFilterConstructor[i]=x ->int(i), AllFilter(x).
AllFilter_access[x] = y -> AllFilter(x), lb:web:workbooks:output:Access(y).
/*
* message UnionFilter
*/
UnionFilter(_) -> .UnionFilterConstructor[i]=x ->int(i), UnionFilter(x).
UnionFilter_filters(x, y) -> UnionFilter(x), string(y).
/*
* message AnnotatedTuple
*/
AnnotatedTuple(_) -> .AnnotatedTupleConstructor[i]=x ->int(i), AnnotatedTuple(x).
AnnotatedTuple_value[x] = y -> AnnotatedTuple(x), string(y).
AnnotatedTuple_access[x] = y -> AnnotatedTuple(x), lb:web:workbooks:output:Access(y).
/*
* message ProjectionFilter
*/
ProjectionFilter(_) -> .ProjectionFilterConstructor[i]=x ->int(i), ProjectionFilter(x).
ProjectionFilter_function[x] = y -> ProjectionFilter(x), string(y).
ProjectionFilter_value_filter[x] = y -> ProjectionFilter(x), string(y).
/*
* message BackProjectionFilter
*/
BackProjectionFilter(_) -> .BackProjectionFilterConstructor[i]=x ->int(i), BackProjectionFilter(x).
BackProjectionFilter_function[x] = y -> BackProjectionFilter(x), string(y).
BackProjectionFilter_key_filter[x] = y -> BackProjectionFilter(x), string(y).
/*
* message User
*/
User(_) -> .UserConstructor[i]=x ->int(i), User(x).
User_user_id[x] = y -> User(x), string(y).
User_role[x] = y -> User(x), lb:web:workbooks:output:Role(y).
User_access[x] = y -> User(x), lb:web:workbooks:output:Access(y).
/*
* message CommitRefreshRequest
*/
CommitRefreshRequest(_) -> .CommitRefreshRequestConstructor[i]=x ->int(i), CommitRefreshRequest(x).
CommitRefreshRequest_predicates(x, y) -> CommitRefreshRequest(x), string(y).
CommitRefreshRequest_include_all_predicates[x] = y -> CommitRefreshRequest(x), boolean(y).
CommitRefreshRequest_policies(x, y) -> CommitRefreshRequest(x), lb:web:workbooks:output:CommitRefreshPolicy(y).
CommitRefreshRequest_name[x] = y -> CommitRefreshRequest(x), string(y).
CommitRefreshRequest_workbook_id[x] = y -> CommitRefreshRequest(x), string(y).
CommitRefreshRequest_post_refresh_inactive_block[x] = y -> CommitRefreshRequest(x), string(y).
/*
* message CommitRefreshPolicy
*/
CommitRefreshPolicy(_) -> .CommitRefreshPolicyConstructor[i]=x ->int(i), CommitRefreshPolicy(x).
CommitRefreshPolicy_predicate[x] = y -> CommitRefreshPolicy(x), string(y).
CommitRefreshPolicy_index[x] = y -> CommitRefreshPolicy(x), int(y).
CommitRefreshPolicy_add_new_entities[x] = y -> CommitRefreshPolicy(x), boolean(y).
CommitRefreshPolicy_delete_removed_entities[x] = y -> CommitRefreshPolicy(x), boolean(y).
CommitRefreshPolicy_conflict_policy[x] = y -> CommitRefreshPolicy(x), lb:web:workbooks:output:CommitRefreshPolicy:ConflictPolicy(y).
/*
* message ConflictResolutionPolicy
*/
ConflictResolutionPolicy(_) -> .ConflictResolutionPolicyConstructor[i]=x ->int(i), ConflictResolutionPolicy(x).
ConflictResolutionPolicy_policy_name[x] = y -> ConflictResolutionPolicy(x), string(y).
ConflictResolutionPolicy_add_new_entities[x] = y -> ConflictResolutionPolicy(x), boolean(y).
ConflictResolutionPolicy_delete_removed_entities[x] = y -> ConflictResolutionPolicy(x), boolean(y).
ConflictResolutionPolicy_conflict_policy[x] = y -> ConflictResolutionPolicy(x), lb:web:workbooks:output:ConflictResolutionPolicy:ConflictPolicy(y).
ConflictResolutionPolicy_index[x] = y -> ConflictResolutionPolicy(x), int(y).
/*
* message CommitRefreshResponse
*/
CommitRefreshResponse(_) -> .CommitRefreshResponseConstructor[i]=x ->int(i), CommitRefreshResponse(x).
CommitRefreshResponse_status[x] = y -> CommitRefreshResponse(x), lb:web:workbooks:output:CommitRefreshResponse:Status(y).
CommitRefreshResponse_entity_added[x, i] = y -> CommitRefreshResponse(x), int(i), string(y).
CommitRefreshResponse_entity_deleted[x, i] = y -> CommitRefreshResponse(x), int(i), string(y).
CommitRefreshResponse_entity_overlap[x, i] = y -> CommitRefreshResponse(x), int(i), string(y).
CommitRefreshResponse_errors(x, y) -> CommitRefreshResponse(x), string(y).
/*
* message ConflictResolution
*/
ConflictResolution(_) -> .ConflictResolutionConstructor[i]=x ->int(i), ConflictResolution(x).
ConflictResolution_entity[x] = y -> ConflictResolution(x), string(y).
ConflictResolution_action[x] = y -> ConflictResolution(x), lb:web:workbooks:output:ConflictResolution:Action(y).
/*
* message PositionAccessSpec
*/
PositionAccessSpec(_) -> .PositionAccessSpecConstructor[i]=x ->int(i), PositionAccessSpec(x).
PositionAccessSpec_position_access[x, i] = y -> PositionAccessSpec(x), int(i), lb:web:workbooks:output:PositionAccess(y).
PositionAccessSpec_calcmode[x] = y -> PositionAccessSpec(x), lb:web:workbooks:output:PositionAccessCalcMode(y).
/*
* message PositionAccess
*/
PositionAccess(_) -> .PositionAccessConstructor[i]=x ->int(i), PositionAccess(x).
PositionAccess_position[x] = y -> PositionAccess(x), lb:web:workbooks:output:PositionIdentifier(y).
PositionAccess_access[x] = y -> PositionAccess(x), lb:web:workbooks:output:Access(y).
PositionAccess_new_position_mode[x] = y -> PositionAccess(x), lb:web:workbooks:output:NewPositionMode(y).
/*
* message PositionIdentifier
*/
PositionIdentifier(_) -> .PositionIdentifierConstructor[i]=x ->int(i), PositionIdentifier(x).
PositionIdentifier_level[x] = y -> PositionIdentifier(x), lb:web:workbooks:output:Level(y).
PositionIdentifier_value[x] = y -> PositionIdentifier(x), string(y).
PositionIdentifier_unfiltered_hierarchies[x, i] = y -> PositionIdentifier(x), int(i), string(y).
PositionIdentifier_label_value[x] = y -> PositionIdentifier(x), string(y).
/*
* message Level
*/
Level(_) -> .LevelConstructor[i]=x ->int(i), Level(x).
Level_hierarchy[x] = y -> Level(x), lb:web:workbooks:output:Hierarchy(y).
Level_level[x] = y -> Level(x), string(y).
Level_label_predicate[x] = y -> Level(x), string(y).
Level_predicate[x] = y -> Level(x), string(y).
/*
* message Hierarchy
*/
Hierarchy(_) -> .HierarchyConstructor[i]=x ->int(i), Hierarchy(x).
Hierarchy_dimension[x] = y -> Hierarchy(x), string(y).
Hierarchy_hierarchy[x] = y -> Hierarchy(x), string(y).
/*
* message OLAPCommitRefreshGroup
*/
OLAPCommitRefreshGroup(_) -> .OLAPCommitRefreshGroupConstructor[i]=x ->int(i), OLAPCommitRefreshGroup(x).
OLAPCommitRefreshGroup_name[x] = y -> OLAPCommitRefreshGroup(x), string(y).
OLAPCommitRefreshGroup_include_all_levels[x] = y -> OLAPCommitRefreshGroup(x), boolean(y).
OLAPCommitRefreshGroup_levels[x, i] = y -> OLAPCommitRefreshGroup(x), int(i), lb:web:workbooks:output:Level(y).
OLAPCommitRefreshGroup_include_all_level_maps[x] = y -> OLAPCommitRefreshGroup(x), boolean(y).
OLAPCommitRefreshGroup_level_maps[x, i] = y -> OLAPCommitRefreshGroup(x), int(i), string(y).
OLAPCommitRefreshGroup_measures[x, i] = y -> OLAPCommitRefreshGroup(x), int(i), string(y).
OLAPCommitRefreshGroup_level_policy[x, i] = y -> OLAPCommitRefreshGroup(x), int(i), lb:web:workbooks:output:LevelPolicy(y).
OLAPCommitRefreshGroup_dimension_policy[x, i] = y -> OLAPCommitRefreshGroup(x), int(i), lb:web:workbooks:output:DimensionPolicy(y).
OLAPCommitRefreshGroup_policy[x] = y -> OLAPCommitRefreshGroup(x), lb:web:workbooks:output:EntityPolicy(y).
OLAPCommitRefreshGroup_post_refresh_inactive_block[x] = y -> OLAPCommitRefreshGroup(x), string(y).
OLAPCommitRefreshGroup_omitted_predicates(x, y) -> OLAPCommitRefreshGroup(x), string(y).
OLAPCommitRefreshGroup_exclude_measures[x] = y -> OLAPCommitRefreshGroup(x), boolean(y).
/*
* message EntityPolicy
*/
EntityPolicy(_) -> .EntityPolicyConstructor[i]=x ->int(i), EntityPolicy(x).
EntityPolicy_name[x] = y -> EntityPolicy(x), string(y).
EntityPolicy_add_new_entity[x] = y -> EntityPolicy(x), boolean(y).
EntityPolicy_delete_entity[x] = y -> EntityPolicy(x), boolean(y).
/*
* message LevelPolicy
*/
LevelPolicy(_) -> .LevelPolicyConstructor[i]=x ->int(i), LevelPolicy(x).
LevelPolicy_level[x] = y -> LevelPolicy(x), lb:web:workbooks:output:Level(y).
LevelPolicy_policy_name[x] = y -> LevelPolicy(x), string(y).
LevelPolicy_policy[x] = y -> LevelPolicy(x), lb:web:workbooks:output:EntityPolicy(y).
/*
* message DimensionPolicy
*/
DimensionPolicy(_) -> .DimensionPolicyConstructor[i]=x ->int(i), DimensionPolicy(x).
DimensionPolicy_dimension_name[x] = y -> DimensionPolicy(x), string(y).
DimensionPolicy_policy_name[x] = y -> DimensionPolicy(x), string(y).
DimensionPolicy_policy[x] = y -> DimensionPolicy(x), lb:web:workbooks:output:EntityPolicy(y).
/*
* message UserDataAccess
*/
UserDataAccess(_) -> .UserDataAccessConstructor[i]=x ->int(i), UserDataAccess(x).
UserDataAccess_user_id[x] = y -> UserDataAccess(x), string(y).
UserDataAccess_data_access[x] = y -> UserDataAccess(x), lb:web:workbooks:output:DataAccessSpecification(y).
/*
* message WorkbookTemplateList
*/
WorkbookTemplateList(_) -> .WorkbookTemplateListConstructor[i]=x ->int(i), WorkbookTemplateList(x).
WorkbookTemplateList_templates(x, y) -> WorkbookTemplateList(x), lb:web:workbooks:output:WorkbookTemplate(y).
/*
* message WorkbookTemplate
*/
WorkbookTemplate(_) -> .WorkbookTemplateConstructor[i]=x ->int(i), WorkbookTemplate(x).
WorkbookTemplate_id[x] = y -> WorkbookTemplate(x), string(y).
WorkbookTemplate_name[x] = y -> WorkbookTemplate(x), string(y).
WorkbookTemplate_position_access_templates[x] = y -> WorkbookTemplate(x), lb:web:workbooks:output:PositionAccessSpecTemplate(y).
WorkbookTemplate_refresh_groups[x, i] = y -> WorkbookTemplate(x), int(i), lb:web:workbooks:output:OLAPCommitRefreshGroup(y).
WorkbookTemplate_commit_groups[x, i] = y -> WorkbookTemplate(x), int(i), lb:web:workbooks:output:OLAPCommitRefreshGroup(y).
WorkbookTemplate_workspace[x] = y -> WorkbookTemplate(x), lb:web:workbooks:output:Workspace(y).
WorkbookTemplate_parent_workbook[x] = y -> WorkbookTemplate(x), lb:web:workbooks:output:Workspace(y).
WorkbookTemplate_checkout_method[x] = y -> WorkbookTemplate(x), lb:web:workbooks:output:Workbook:CheckoutMethod(y).
WorkbookTemplate_skip_not_derived[x] = y -> WorkbookTemplate(x), boolean(y).
WorkbookTemplate_measure_access[x] = y -> WorkbookTemplate(x), lb:web:workbooks:output:MeasureAccess(y).
WorkbookTemplate_merge_method[x] = y -> WorkbookTemplate(x), lb:web:workbooks:output:MergeMethod(y).
/*
* message PositionAccessSpecTemplate
*/
PositionAccessSpecTemplate(_) -> .PositionAccessSpecTemplateConstructor[i]=x ->int(i), PositionAccessSpecTemplate(x).
PositionAccessSpecTemplate_position_access[x, i] = y -> PositionAccessSpecTemplate(x), int(i), lb:web:workbooks:output:PositionAccessTemplate(y).
PositionAccessSpecTemplate_calcmode[x] = y -> PositionAccessSpecTemplate(x), lb:web:workbooks:output:PositionAccessCalcMode(y).
/*
* message PositionAccessTemplate
*/
PositionAccessTemplate(_) -> .PositionAccessTemplateConstructor[i]=x ->int(i), PositionAccessTemplate(x).
PositionAccessTemplate_level[x] = y -> PositionAccessTemplate(x), lb:web:workbooks:output:Level(y).
PositionAccessTemplate_access[x] = y -> PositionAccessTemplate(x), lb:web:workbooks:output:Access(y).
PositionAccessTemplate_new_position_mode[x] = y -> PositionAccessTemplate(x), lb:web:workbooks:output:NewPositionMode(y).
PositionAccessTemplate_unfiltered_hierarchies[x, i] = y -> PositionAccessTemplate(x), int(i), string(y).
/*
* message TemplateInstantiation
*/
TemplateInstantiation(_) -> .TemplateInstantiationConstructor[i]=x ->int(i), TemplateInstantiation(x).
TemplateInstantiation_template_name[x] = y -> TemplateInstantiation(x), string(y).
TemplateInstantiation_template_id[x] = y -> TemplateInstantiation(x), string(y).
TemplateInstantiation_values[x, i] = y -> TemplateInstantiation(x), int(i), lb:web:workbooks:output:PositionIdentifier(y).
TemplateInstantiation_id[x] = y -> TemplateInstantiation(x), string(y).
TemplateInstantiation_workbook_name[x] = y -> TemplateInstantiation(x), string(y).
/*
* message BatchRequest
*/
BatchRequest(_) -> .BatchRequestConstructor[i]=x ->int(i), BatchRequest(x).
BatchRequest_template_id[x] = y -> BatchRequest(x), string(y).
BatchRequest_execute[x] = y -> BatchRequest(x), boolean(y).
/*
* message BatchResponse
*/
BatchResponse(_) -> .BatchResponseConstructor[i]=x ->int(i), BatchResponse(x).
BatchResponse_workbooks[x, i] = y -> BatchResponse(x), int(i), lb:web:workbooks:output:Workbook(y).
/*
* message TemplateEntitiesQuery
*/
TemplateEntitiesQuery(_) -> .TemplateEntitiesQueryConstructor[i]=x ->int(i), TemplateEntitiesQuery(x).
TemplateEntitiesQuery_template_id[x] = y -> TemplateEntitiesQuery(x), string(y).
/*
* message TemplateEntitiesList
*/
TemplateEntitiesList(_) -> .TemplateEntitiesListConstructor[i]=x ->int(i), TemplateEntitiesList(x).
TemplateEntitiesList_entity_names[x, i] = y -> TemplateEntitiesList(x), int(i), string(y).
/*
* message AddUsersRequest
*/
AddUsersRequest(_) -> .AddUsersRequestConstructor[i]=x ->int(i), AddUsersRequest(x).
AddUsersRequest_workbook_id[x] = y -> AddUsersRequest(x), string(y).
AddUsersRequest_workbook_name[x] = y -> AddUsersRequest(x), string(y).
AddUsersRequest_user_id[x, i] = y -> AddUsersRequest(x), int(i), string(y).
/*
* message UsersManagementResponse
*/
UsersManagementResponse(_) -> .UsersManagementResponseConstructor[i]=x ->int(i), UsersManagementResponse(x).
UsersManagementResponse_unknown_workbooks(x, y) -> UsersManagementResponse(x), string(y).
UsersManagementResponse_unknown_users(x, y) -> UsersManagementResponse(x), string(y).
UsersManagementResponse_already_authorized_users(x, y) -> UsersManagementResponse(x), string(y).
UsersManagementResponse_already_unauthorized_users(x, y) -> UsersManagementResponse(x), string(y).
/*
* message SetUsersRequest
*/
SetUsersRequest(_) -> .SetUsersRequestConstructor[i]=x ->int(i), SetUsersRequest(x).
SetUsersRequest_workbook_id[x] = y -> SetUsersRequest(x), string(y).
SetUsersRequest_user_id[x, i] = y -> SetUsersRequest(x), int(i), string(y).
/*
* message DeleteUsersRequest
*/
DeleteUsersRequest(_) -> .DeleteUsersRequestConstructor[i]=x ->int(i), DeleteUsersRequest(x).
DeleteUsersRequest_workbook_id[x] = y -> DeleteUsersRequest(x), string(y).
DeleteUsersRequest_user_id(x, y) -> DeleteUsersRequest(x), string(y).
/*
* message BulkUsersRequest
*/
BulkUsersRequest(_) -> .BulkUsersRequestConstructor[i]=x ->int(i), BulkUsersRequest(x).
BulkUsersRequest_add[x, i] = y -> BulkUsersRequest(x), int(i), lb:web:workbooks:output:AddUsersRequest(y).
BulkUsersRequest_delete[x, i] = y -> BulkUsersRequest(x), int(i), lb:web:workbooks:output:DeleteUsersRequest(y).
BulkUsersRequest_set[x, i] = y -> BulkUsersRequest(x), int(i), lb:web:workbooks:output:SetUsersRequest(y).
/*
* message BulkUsersResponse
*/
BulkUsersResponse(_) -> .BulkUsersResponseConstructor[i]=x ->int(i), BulkUsersResponse(x).
BulkUsersResponse_add[x, i] = y -> BulkUsersResponse(x), int(i), lb:web:workbooks:output:UsersManagementResponse(y).
BulkUsersResponse_delete[x, i] = y -> BulkUsersResponse(x), int(i), lb:web:workbooks:output:UsersManagementResponse(y).
BulkUsersResponse_set[x, i] = y -> BulkUsersResponse(x), int(i), lb:web:workbooks:output:UsersManagementResponse(y).
/*
* message DeleteWorkbooksResponse
*/
DeleteWorkbooksResponse(_) -> .DeleteWorkbooksResponseConstructor[i]=x ->int(i), DeleteWorkbooksResponse(x).
DeleteWorkbooksResponse_deleted(x, y) -> DeleteWorkbooksResponse(x), string(y).
DeleteWorkbooksResponse_not_found(x, y) -> DeleteWorkbooksResponse(x), string(y).
DeleteWorkbooksResponse_already_deleted(x, y) -> DeleteWorkbooksResponse(x), string(y).
/*
* message Response
*/
Response(_) -> .ResponseConstructor[i]=x ->int(i), Response(x).
Response_message(x, y) -> Response(x), string(y).
/*
* message Query
*/
Query(_) -> .QueryConstructor[i]=x ->int(i), Query(x).
Query_content[x] = y -> Query(x), string(y).
/*
* message CommitRefreshSignal
*/
CommitRefreshSignal(_) -> .CommitRefreshSignalConstructor[i]=x ->int(i), CommitRefreshSignal(x).
CommitRefreshSignal_id[x] = y -> CommitRefreshSignal(x), string(y).
/*
* message CRImplementationList
*/
CRImplementationList(_) -> .CRImplementationListConstructor[i]=x ->int(i), CRImplementationList(x).
CRImplementationList_cri(x, y) -> CRImplementationList(x), lb:web:workbooks:output:CRImplementation(y).
/*
* message CRImplementation
*/
CRImplementation(_) -> .CRImplementationConstructor[i]=x ->int(i), CRImplementation(x).
CRImplementation_name[x] = y -> CRImplementation(x), string(y).
CRImplementation_bundles[x, i] = y -> CRImplementation(x), int(i), lb:web:workbooks:output:BundleImplementation(y).
CRImplementation_id[x] = y -> CRImplementation(x), string(y).
CRImplementation_parentId[x] = y -> CRImplementation(x), string(y).
CRImplementation_logic[x, i] = y -> CRImplementation(x), int(i), string(y).
CRImplementation_commit[x] = y -> CRImplementation(x), boolean(y).
CRImplementation_template_id[x] = y -> CRImplementation(x), string(y).
CRImplementation_post_refresh_inactive_block[x] = y -> CRImplementation(x), string(y).
CRImplementation_skip_not_derived[x] = y -> CRImplementation(x), boolean(y).
/*
* message BundleImplementation
*/
BundleImplementation(_) -> .BundleImplementationConstructor[i]=x ->int(i), BundleImplementation(x).
BundleImplementation_name[x] = y -> BundleImplementation(x), string(y).
BundleImplementation_disjunction[x] = y -> BundleImplementation(x), string(y).
BundleImplementation_block[x] = y -> BundleImplementation(x), string(y).
BundleImplementation_export_binding[x] = y -> BundleImplementation(x), lb:web:workbooks:output:FileBinding(y).
BundleImplementation_import_binding[x] = y -> BundleImplementation(x), lb:web:workbooks:output:FileBinding(y).
BundleImplementation_logic[x, i] = y -> BundleImplementation(x), int(i), string(y).
/*
* message FileBinding
*/
FileBinding(_) -> .FileBindingConstructor[i]=x ->int(i), FileBinding(x).
FileBinding_file[x] = y -> FileBinding(x), lb:web:workbooks:output:FileDefinition(y).
FileBinding_binding[x, i] = y -> FileBinding(x), int(i), lb:web:workbooks:output:PredicateBinding(y).
FileBinding_entity_creation[x] = y -> FileBinding(x), string(y).
FileBinding_default_value[x, i] = y -> FileBinding(x), int(i), lb:web:workbooks:output:DefaultValue(y).
FileBinding_ignore_idb_on_import[x] = y -> FileBinding(x), boolean(y).
/*
* message DefaultValue
*/
DefaultValue(_) -> .DefaultValueConstructor[i]=x ->int(i), DefaultValue(x).
DefaultValue_header[x] = y -> DefaultValue(x), string(y).
DefaultValue_import_default_value[x] = y -> DefaultValue(x), string(y).
DefaultValue_export_default_value[x] = y -> DefaultValue(x), string(y).
/*
* message FileDefinition
*/
FileDefinition(_) -> .FileDefinitionConstructor[i]=x ->int(i), FileDefinition(x).
FileDefinition_delimiter[x] = y -> FileDefinition(x), string(y).
FileDefinition_column_headers[x] = y -> FileDefinition(x), string(y).
FileDefinition_column_formats[x] = y -> FileDefinition(x), string(y).
FileDefinition_file_columns_required[x] = y -> FileDefinition(x), string(y).
FileDefinition_file_columns_optional[x] = y -> FileDefinition(x), string(y).
FileDefinition_file_columns_can_be_absent[x] = y -> FileDefinition(x), string(y).
/*
* message PredicateBinding
*/
PredicateBinding(_) -> .PredicateBindingConstructor[i]=x ->int(i), PredicateBinding(x).
PredicateBinding_predicate_name[x] = y -> PredicateBinding(x), string(y).
PredicateBinding_predicate_binding_columns[x] = y -> PredicateBinding(x), string(y).
PredicateBinding_column[x, i] = y -> PredicateBinding(x), int(i), lb:web:workbooks:output:ColumnBinding(y).
PredicateBinding_export[x] = y -> PredicateBinding(x), boolean(y).
PredicateBinding_filter[x] = y -> PredicateBinding(x), boolean(y).
PredicateBinding_negated[x] = y -> PredicateBinding(x), boolean(y).
PredicateBinding_plugin_logic[x] = y -> PredicateBinding(x), lb:web:workbooks:output:PluginLogic(y).
PredicateBinding_entity_creation[x] = y -> PredicateBinding(x), string(y).
PredicateBinding_no_retraction_on_post[x] = y -> PredicateBinding(x), boolean(y).
/*
* message ColumnBinding
*/
ColumnBinding(_) -> .ColumnBindingConstructor[i]=x ->int(i), ColumnBinding(x).
ColumnBinding_index[x] = y -> ColumnBinding(x), int(y).
ColumnBinding_entity_creation[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_import_function[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_import_function_inverse[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_export_function[x] = y -> ColumnBinding(x), string(y).
ColumnBinding_export_function_inverse[x] = y -> ColumnBinding(x), string(y).
/*
* message PluginLogic
*/
PluginLogic(_) -> .PluginLogicConstructor[i]=x ->int(i), PluginLogic(x).
PluginLogic_name[x] = y -> PluginLogic(x), string(y).
PluginLogic_plugin_name[x] = y -> PluginLogic(x), string(y).
PluginLogic_param(x, y) -> PluginLogic(x), lb:web:workbooks:output:Param(y).
PluginLogic_rename_param(x, y) -> PluginLogic(x), lb:web:workbooks:output:ParamRename(y).
PluginLogic_allow_override(x, y) -> PluginLogic(x), string(y).
PluginLogic_allow_accumulate(x, y) -> PluginLogic(x), string(y).
/*
* message Param
*/
Param(_) -> .ParamConstructor[i]=x ->int(i), Param(x).
Param_key[x] = y -> Param(x), string(y).
Param_value[x] = y -> Param(x), string(y).
/*
* message ParamRename
*/
ParamRename(_) -> .ParamRenameConstructor[i]=x ->int(i), ParamRename(x).
ParamRename_original_name[x] = y -> ParamRename(x), string(y).
ParamRename_renamed_name[x] = y -> ParamRename(x), string(y).
/*
* message AbortMessage
*/
AbortMessage(_) -> .AbortMessageConstructor[i]=x ->int(i), AbortMessage(x).
AbortMessage_http_status_code[x] = y -> AbortMessage(x), string(y).
AbortMessage_message[x] = y -> AbortMessage(x), string(y).
/*
* message TemplateInstantiationRequest
*/
TemplateInstantiationRequest(_) -> .TemplateInstantiationRequestConstructor[i]=x ->int(i), TemplateInstantiationRequest(x).
TemplateInstantiationRequest_template_name[x] = y -> TemplateInstantiationRequest(x), string(y).
TemplateInstantiationRequest_with_positions(x, y) -> TemplateInstantiationRequest(x), lb:web:workbooks:output:PositionIdentifier(y).
TemplateInstantiationRequest_tag[x] = y -> TemplateInstantiationRequest(x), string(y).
/*
* message TemplateInstantiationResponse
*/
TemplateInstantiationResponse(_) -> .TemplateInstantiationResponseConstructor[i]=x ->int(i), TemplateInstantiationResponse(x).
TemplateInstantiationResponse_template_instantiation(x, y) -> TemplateInstantiationResponse(x), lb:web:workbooks:output:TemplateInstantiationRef(y).
/*
* message TemplateInstantiationPositionRequest
*/
TemplateInstantiationPositionRequest(_) -> .TemplateInstantiationPositionRequestConstructor[i]=x ->int(i), TemplateInstantiationPositionRequest(x).
TemplateInstantiationPositionRequest_template_instantiation_id[x] = y -> TemplateInstantiationPositionRequest(x), string(y).
/*
* message TemplateInstantiationPositionResponse
*/
TemplateInstantiationPositionResponse(_) -> .TemplateInstantiationPositionResponseConstructor[i]=x ->int(i), TemplateInstantiationPositionResponse(x).
TemplateInstantiationPositionResponse_position(x, y) -> TemplateInstantiationPositionResponse(x), lb:web:workbooks:output:PositionIdentifier(y).
/*
* message TemplateInstantiationPermissionRequest
*/
TemplateInstantiationPermissionRequest(_) -> .TemplateInstantiationPermissionRequestConstructor[i]=x ->int(i), TemplateInstantiationPermissionRequest(x).
TemplateInstantiationPermissionRequest_template_instantiation_id[x] = y -> TemplateInstantiationPermissionRequest(x), string(y).
/*
* message TemplateInstantiationPermissionResponse
*/
TemplateInstantiationPermissionResponse(_) -> .TemplateInstantiationPermissionResponseConstructor[i]=x ->int(i), TemplateInstantiationPermissionResponse(x).
TemplateInstantiationPermissionResponse_user_id(x, y) -> TemplateInstantiationPermissionResponse(x), string(y).
/*
* message TemplateInstantiationRef
*/
TemplateInstantiationRef(_) -> .TemplateInstantiationRefConstructor[i]=x ->int(i), TemplateInstantiationRef(x).
TemplateInstantiationRef_id[x] = y -> TemplateInstantiationRef(x), string(y).
TemplateInstantiationRef_workbook_name[x] = y -> TemplateInstantiationRef(x), string(y).
TemplateInstantiationRef_template_name[x] = y -> TemplateInstantiationRef(x), string(y).
TemplateInstantiationRef_workbook_id(x, y) -> TemplateInstantiationRef(x), string(y).
TemplateInstantiationRef_tag(x, y) -> TemplateInstantiationRef(x), string(y).
 } ),
  clauses ( `{
lang:constructor(`PositionAccessCalcMode_enum).
PositionAccessCalcMode_enum[s]=_ -> s = "LEAST_RESTRICTIVE"; s = "MOST_RESTRICTIVE".
PositionAccessCalcMode(x), PositionAccessCalcMode_enum["LEAST_RESTRICTIVE"]=x <- .
PositionAccessCalcMode(x), PositionAccessCalcMode_enum["MOST_RESTRICTIVE"]=x <- .
PositionAccessCalcMode_value[x]=s <- PositionAccessCalcMode_enum[s]=x.
PositionAccessCalcMode_value[x]=s -> PositionAccessCalcMode_enum[s]=x.
lang:constructor(`NewPositionMode_enum).
NewPositionMode_enum[s]=_ -> s = "INHERIT"; s = "DENY".
NewPositionMode(x), NewPositionMode_enum["INHERIT"]=x <- .
NewPositionMode(x), NewPositionMode_enum["DENY"]=x <- .
NewPositionMode_value[x]=s <- NewPositionMode_enum[s]=x.
NewPositionMode_value[x]=s -> NewPositionMode_enum[s]=x.
lang:constructor(`Role_enum).
Role_enum[s]=_ -> s = "USER"; s = "OWNER".
Role(x), Role_enum["USER"]=x <- .
Role(x), Role_enum["OWNER"]=x <- .
Role_value[x]=s <- Role_enum[s]=x.
Role_value[x]=s -> Role_enum[s]=x.
lang:constructor(`Access_enum).
Access_enum[s]=_ -> s = "READ"; s = "WRITE"; s = "NONE".
Access(x), Access_enum["READ"]=x <- .
Access(x), Access_enum["WRITE"]=x <- .
Access(x), Access_enum["NONE"]=x <- .
Access_value[x]=s <- Access_enum[s]=x.
Access_value[x]=s -> Access_enum[s]=x.
lang:constructor(`MergeMethod_enum).
MergeMethod_enum[s]=_ -> s = "FULL"; s = "DELTA"; s = "FULL_TDX".
MergeMethod(x), MergeMethod_enum["FULL"]=x <- .
MergeMethod(x), MergeMethod_enum["DELTA"]=x <- .
MergeMethod(x), MergeMethod_enum["FULL_TDX"]=x <- .
MergeMethod_value[x]=s <- MergeMethod_enum[s]=x.
MergeMethod_value[x]=s -> MergeMethod_enum[s]=x.
lang:constructor(`WorkbookConstructor).
lang:pulse(`WorkbookConstructor).
lang:pulse(`Workbook).
lang:pulse(`Workbook_error).
lang:pulse(`Workbook_error_code).
lang:pulse(`Workbook_id).
lang:pulse(`Workbook_name).
lang:pulse(`Workbook_workspace).
lang:pulse(`Workbook_parent_workbook).
lang:pulse(`Workbook_checkout_method).
lang:pulse(`Workbook_data_access).
lang:pulse(`Workbook_refresh_requests).
lang:pulse(`Workbook_commit_requests).
lang:pulse(`Workbook_users).
lang:pulse(`Workbook_start_build_time).
lang:pulse(`Workbook_end_build_time).
lang:pulse(`Workbook_olap_model).
lang:pulse(`Workbook_deleted_on).
lang:pulse(`Workbook_template_id).
lang:pulse(`Workbook_template_name).
lang:pulse(`Workbook_filter_seeds).
lang:pulse(`Workbook_skip_not_derived).
lang:pulse(`Workbook_merge_method).
lang:constructor(`FilterSeedConstructor).
lang:pulse(`FilterSeedConstructor).
lang:pulse(`FilterSeed).
lang:pulse(`FilterSeed_filter).
lang:pulse(`FilterSeed_seed).
lang:pulse(`FilterSeed_predicate).
lang:constructor(`WorkbookListConstructor).
lang:pulse(`WorkbookListConstructor).
lang:pulse(`WorkbookList).
lang:pulse(`WorkbookList_workbooks).
lang:pulse(`WorkbookList_id).
lang:constructor(`WorkbookSummaryConstructor).
lang:pulse(`WorkbookSummaryConstructor).
lang:pulse(`WorkbookSummary).
lang:pulse(`WorkbookSummary_id).
lang:pulse(`WorkbookSummary_workspace).
lang:pulse(`WorkbookSummary_name).
lang:pulse(`WorkbookSummary_last_access).
lang:pulse(`WorkbookSummary_created).
lang:pulse(`WorkbookSummary_deleted).
lang:constructor(`OLAPModelConstructor).
lang:pulse(`OLAPModelConstructor).
lang:pulse(`OLAPModel).
lang:pulse(`OLAPModel_position_access).
lang:pulse(`OLAPModel_olap_refresh_groups).
lang:pulse(`OLAPModel_olap_commit_groups).
lang:pulse(`OLAPModel_measure_access).
lang:constructor(`MeasureAccessConstructor).
lang:pulse(`MeasureAccessConstructor).
lang:pulse(`MeasureAccess).
lang:pulse(`MeasureAccess_measures).
lang:pulse(`MeasureAccess_exclude).
lang:constructor(`WorkspaceConstructor).
lang:pulse(`WorkspaceConstructor).
lang:pulse(`Workspace).
lang:pulse(`Workspace_host).
lang:pulse(`Workspace_workspace_name).
lang:pulse(`Workspace_branch_name).
lang:pulse(`Workspace_clone_branch_name).
lang:constructor(`DataAccessSpecificationConstructor).
lang:pulse(`DataAccessSpecificationConstructor).
lang:pulse(`DataAccessSpecification).
lang:pulse(`DataAccessSpecification_filtered_predicates).
lang:pulse(`DataAccessSpecification_filters).
lang:constructor(`FilteredPredicateConstructor).
lang:pulse(`FilteredPredicateConstructor).
lang:pulse(`FilteredPredicate).
lang:pulse(`FilteredPredicate_predicate_name).
lang:pulse(`FilteredPredicate_filter_name).
lang:pulse(`FilteredPredicate_new_value_access).
lang:constructor(`FilterConstructor).
lang:pulse(`FilterConstructor).
lang:pulse(`Filter).
lang:pulse(`Filter_filter_name).
lang:pulse(`Filter_filter_type).
lang:pulse(`Filter_enum_filter).
lang:pulse(`Filter_composed_filter).
lang:pulse(`Filter_all_filter).
lang:pulse(`Filter_projection).
lang:pulse(`Filter_union).
lang:pulse(`Filter_back_projection).
lang:constructor(`EnumerationFilterConstructor).
lang:pulse(`EnumerationFilterConstructor).
lang:pulse(`EnumerationFilter).
lang:pulse(`EnumerationFilter_tuples).
lang:constructor(`ComposedFilterConstructor).
lang:pulse(`ComposedFilterConstructor).
lang:pulse(`ComposedFilter).
lang:pulse(`ComposedFilter_operator).
lang:pulse(`ComposedFilter_components).
lang:constructor(`AllFilterConstructor).
lang:pulse(`AllFilterConstructor).
lang:pulse(`AllFilter).
lang:pulse(`AllFilter_access).
lang:constructor(`UnionFilterConstructor).
lang:pulse(`UnionFilterConstructor).
lang:pulse(`UnionFilter).
lang:pulse(`UnionFilter_filters).
lang:constructor(`AnnotatedTupleConstructor).
lang:pulse(`AnnotatedTupleConstructor).
lang:pulse(`AnnotatedTuple).
lang:pulse(`AnnotatedTuple_value).
lang:pulse(`AnnotatedTuple_access).
lang:constructor(`ProjectionFilterConstructor).
lang:pulse(`ProjectionFilterConstructor).
lang:pulse(`ProjectionFilter).
lang:pulse(`ProjectionFilter_function).
lang:pulse(`ProjectionFilter_value_filter).
lang:constructor(`BackProjectionFilterConstructor).
lang:pulse(`BackProjectionFilterConstructor).
lang:pulse(`BackProjectionFilter).
lang:pulse(`BackProjectionFilter_function).
lang:pulse(`BackProjectionFilter_key_filter).
lang:constructor(`UserConstructor).
lang:pulse(`UserConstructor).
lang:pulse(`User).
lang:pulse(`User_user_id).
lang:pulse(`User_role).
lang:pulse(`User_access).
lang:constructor(`CommitRefreshRequestConstructor).
lang:pulse(`CommitRefreshRequestConstructor).
lang:pulse(`CommitRefreshRequest).
lang:pulse(`CommitRefreshRequest_predicates).
lang:pulse(`CommitRefreshRequest_include_all_predicates).
lang:pulse(`CommitRefreshRequest_policies).
lang:pulse(`CommitRefreshRequest_name).
lang:pulse(`CommitRefreshRequest_workbook_id).
lang:pulse(`CommitRefreshRequest_post_refresh_inactive_block).
lang:constructor(`CommitRefreshPolicyConstructor).
lang:pulse(`CommitRefreshPolicyConstructor).
lang:pulse(`CommitRefreshPolicy).
lang:pulse(`CommitRefreshPolicy_predicate).
lang:pulse(`CommitRefreshPolicy_index).
lang:pulse(`CommitRefreshPolicy_add_new_entities).
lang:pulse(`CommitRefreshPolicy_delete_removed_entities).
lang:pulse(`CommitRefreshPolicy_conflict_policy).
lang:constructor(`ConflictResolutionPolicyConstructor).
lang:pulse(`ConflictResolutionPolicyConstructor).
lang:pulse(`ConflictResolutionPolicy).
lang:pulse(`ConflictResolutionPolicy_policy_name).
lang:pulse(`ConflictResolutionPolicy_add_new_entities).
lang:pulse(`ConflictResolutionPolicy_delete_removed_entities).
lang:pulse(`ConflictResolutionPolicy_conflict_policy).
lang:pulse(`ConflictResolutionPolicy_index).
lang:constructor(`CommitRefreshResponseConstructor).
lang:pulse(`CommitRefreshResponseConstructor).
lang:pulse(`CommitRefreshResponse).
lang:pulse(`CommitRefreshResponse_status).
lang:pulse(`CommitRefreshResponse_entity_added).
lang:pulse(`CommitRefreshResponse_entity_deleted).
lang:pulse(`CommitRefreshResponse_entity_overlap).
lang:pulse(`CommitRefreshResponse_errors).
lang:constructor(`ConflictResolutionConstructor).
lang:pulse(`ConflictResolutionConstructor).
lang:pulse(`ConflictResolution).
lang:pulse(`ConflictResolution_entity).
lang:pulse(`ConflictResolution_action).
lang:constructor(`PositionAccessSpecConstructor).
lang:pulse(`PositionAccessSpecConstructor).
lang:pulse(`PositionAccessSpec).
lang:pulse(`PositionAccessSpec_position_access).
lang:pulse(`PositionAccessSpec_calcmode).
lang:constructor(`PositionAccessConstructor).
lang:pulse(`PositionAccessConstructor).
lang:pulse(`PositionAccess).
lang:pulse(`PositionAccess_position).
lang:pulse(`PositionAccess_access).
lang:pulse(`PositionAccess_new_position_mode).
lang:constructor(`PositionIdentifierConstructor).
lang:pulse(`PositionIdentifierConstructor).
lang:pulse(`PositionIdentifier).
lang:pulse(`PositionIdentifier_level).
lang:pulse(`PositionIdentifier_value).
lang:pulse(`PositionIdentifier_unfiltered_hierarchies).
lang:pulse(`PositionIdentifier_label_value).
lang:constructor(`LevelConstructor).
lang:pulse(`LevelConstructor).
lang:pulse(`Level).
lang:pulse(`Level_hierarchy).
lang:pulse(`Level_level).
lang:pulse(`Level_label_predicate).
lang:pulse(`Level_predicate).
lang:constructor(`HierarchyConstructor).
lang:pulse(`HierarchyConstructor).
lang:pulse(`Hierarchy).
lang:pulse(`Hierarchy_dimension).
lang:pulse(`Hierarchy_hierarchy).
lang:constructor(`OLAPCommitRefreshGroupConstructor).
lang:pulse(`OLAPCommitRefreshGroupConstructor).
lang:pulse(`OLAPCommitRefreshGroup).
lang:pulse(`OLAPCommitRefreshGroup_name).
lang:pulse(`OLAPCommitRefreshGroup_include_all_levels).
lang:pulse(`OLAPCommitRefreshGroup_levels).
lang:pulse(`OLAPCommitRefreshGroup_include_all_level_maps).
lang:pulse(`OLAPCommitRefreshGroup_level_maps).
lang:pulse(`OLAPCommitRefreshGroup_measures).
lang:pulse(`OLAPCommitRefreshGroup_level_policy).
lang:pulse(`OLAPCommitRefreshGroup_dimension_policy).
lang:pulse(`OLAPCommitRefreshGroup_policy).
lang:pulse(`OLAPCommitRefreshGroup_post_refresh_inactive_block).
lang:pulse(`OLAPCommitRefreshGroup_omitted_predicates).
lang:pulse(`OLAPCommitRefreshGroup_exclude_measures).
lang:constructor(`EntityPolicyConstructor).
lang:pulse(`EntityPolicyConstructor).
lang:pulse(`EntityPolicy).
lang:pulse(`EntityPolicy_name).
lang:pulse(`EntityPolicy_add_new_entity).
lang:pulse(`EntityPolicy_delete_entity).
lang:constructor(`LevelPolicyConstructor).
lang:pulse(`LevelPolicyConstructor).
lang:pulse(`LevelPolicy).
lang:pulse(`LevelPolicy_level).
lang:pulse(`LevelPolicy_policy_name).
lang:pulse(`LevelPolicy_policy).
lang:constructor(`DimensionPolicyConstructor).
lang:pulse(`DimensionPolicyConstructor).
lang:pulse(`DimensionPolicy).
lang:pulse(`DimensionPolicy_dimension_name).
lang:pulse(`DimensionPolicy_policy_name).
lang:pulse(`DimensionPolicy_policy).
lang:constructor(`UserDataAccessConstructor).
lang:pulse(`UserDataAccessConstructor).
lang:pulse(`UserDataAccess).
lang:pulse(`UserDataAccess_user_id).
lang:pulse(`UserDataAccess_data_access).
lang:constructor(`WorkbookTemplateListConstructor).
lang:pulse(`WorkbookTemplateListConstructor).
lang:pulse(`WorkbookTemplateList).
lang:pulse(`WorkbookTemplateList_templates).
lang:constructor(`WorkbookTemplateConstructor).
lang:pulse(`WorkbookTemplateConstructor).
lang:pulse(`WorkbookTemplate).
lang:pulse(`WorkbookTemplate_id).
lang:pulse(`WorkbookTemplate_name).
lang:pulse(`WorkbookTemplate_position_access_templates).
lang:pulse(`WorkbookTemplate_refresh_groups).
lang:pulse(`WorkbookTemplate_commit_groups).
lang:pulse(`WorkbookTemplate_workspace).
lang:pulse(`WorkbookTemplate_parent_workbook).
lang:pulse(`WorkbookTemplate_checkout_method).
lang:pulse(`WorkbookTemplate_skip_not_derived).
lang:pulse(`WorkbookTemplate_measure_access).
lang:pulse(`WorkbookTemplate_merge_method).
lang:constructor(`PositionAccessSpecTemplateConstructor).
lang:pulse(`PositionAccessSpecTemplateConstructor).
lang:pulse(`PositionAccessSpecTemplate).
lang:pulse(`PositionAccessSpecTemplate_position_access).
lang:pulse(`PositionAccessSpecTemplate_calcmode).
lang:constructor(`PositionAccessTemplateConstructor).
lang:pulse(`PositionAccessTemplateConstructor).
lang:pulse(`PositionAccessTemplate).
lang:pulse(`PositionAccessTemplate_level).
lang:pulse(`PositionAccessTemplate_access).
lang:pulse(`PositionAccessTemplate_new_position_mode).
lang:pulse(`PositionAccessTemplate_unfiltered_hierarchies).
lang:constructor(`TemplateInstantiationConstructor).
lang:pulse(`TemplateInstantiationConstructor).
lang:pulse(`TemplateInstantiation).
lang:pulse(`TemplateInstantiation_template_name).
lang:pulse(`TemplateInstantiation_template_id).
lang:pulse(`TemplateInstantiation_values).
lang:pulse(`TemplateInstantiation_id).
lang:pulse(`TemplateInstantiation_workbook_name).
lang:constructor(`BatchRequestConstructor).
lang:pulse(`BatchRequestConstructor).
lang:pulse(`BatchRequest).
lang:pulse(`BatchRequest_template_id).
lang:pulse(`BatchRequest_execute).
lang:constructor(`BatchResponseConstructor).
lang:pulse(`BatchResponseConstructor).
lang:pulse(`BatchResponse).
lang:pulse(`BatchResponse_workbooks).
lang:constructor(`TemplateEntitiesQueryConstructor).
lang:pulse(`TemplateEntitiesQueryConstructor).
lang:pulse(`TemplateEntitiesQuery).
lang:pulse(`TemplateEntitiesQuery_template_id).
lang:constructor(`TemplateEntitiesListConstructor).
lang:pulse(`TemplateEntitiesListConstructor).
lang:pulse(`TemplateEntitiesList).
lang:pulse(`TemplateEntitiesList_entity_names).
lang:constructor(`AddUsersRequestConstructor).
lang:pulse(`AddUsersRequestConstructor).
lang:pulse(`AddUsersRequest).
lang:pulse(`AddUsersRequest_workbook_id).
lang:pulse(`AddUsersRequest_workbook_name).
lang:pulse(`AddUsersRequest_user_id).
lang:constructor(`UsersManagementResponseConstructor).
lang:pulse(`UsersManagementResponseConstructor).
lang:pulse(`UsersManagementResponse).
lang:pulse(`UsersManagementResponse_unknown_workbooks).
lang:pulse(`UsersManagementResponse_unknown_users).
lang:pulse(`UsersManagementResponse_already_authorized_users).
lang:pulse(`UsersManagementResponse_already_unauthorized_users).
lang:constructor(`SetUsersRequestConstructor).
lang:pulse(`SetUsersRequestConstructor).
lang:pulse(`SetUsersRequest).
lang:pulse(`SetUsersRequest_workbook_id).
lang:pulse(`SetUsersRequest_user_id).
lang:constructor(`DeleteUsersRequestConstructor).
lang:pulse(`DeleteUsersRequestConstructor).
lang:pulse(`DeleteUsersRequest).
lang:pulse(`DeleteUsersRequest_workbook_id).
lang:pulse(`DeleteUsersRequest_user_id).
lang:constructor(`BulkUsersRequestConstructor).
lang:pulse(`BulkUsersRequestConstructor).
lang:pulse(`BulkUsersRequest).
lang:pulse(`BulkUsersRequest_add).
lang:pulse(`BulkUsersRequest_delete).
lang:pulse(`BulkUsersRequest_set).
lang:constructor(`BulkUsersResponseConstructor).
lang:pulse(`BulkUsersResponseConstructor).
lang:pulse(`BulkUsersResponse).
lang:pulse(`BulkUsersResponse_add).
lang:pulse(`BulkUsersResponse_delete).
lang:pulse(`BulkUsersResponse_set).
lang:constructor(`DeleteWorkbooksResponseConstructor).
lang:pulse(`DeleteWorkbooksResponseConstructor).
lang:pulse(`DeleteWorkbooksResponse).
lang:pulse(`DeleteWorkbooksResponse_deleted).
lang:pulse(`DeleteWorkbooksResponse_not_found).
lang:pulse(`DeleteWorkbooksResponse_already_deleted).
lang:constructor(`ResponseConstructor).
lang:pulse(`ResponseConstructor).
lang:pulse(`Response).
lang:pulse(`Response_message).
lang:constructor(`QueryConstructor).
lang:pulse(`QueryConstructor).
lang:pulse(`Query).
lang:pulse(`Query_content).
lang:constructor(`CommitRefreshSignalConstructor).
lang:pulse(`CommitRefreshSignalConstructor).
lang:pulse(`CommitRefreshSignal).
lang:pulse(`CommitRefreshSignal_id).
lang:constructor(`CRImplementationListConstructor).
lang:pulse(`CRImplementationListConstructor).
lang:pulse(`CRImplementationList).
lang:pulse(`CRImplementationList_cri).
lang:constructor(`CRImplementationConstructor).
lang:pulse(`CRImplementationConstructor).
lang:pulse(`CRImplementation).
lang:pulse(`CRImplementation_name).
lang:pulse(`CRImplementation_bundles).
lang:pulse(`CRImplementation_id).
lang:pulse(`CRImplementation_parentId).
lang:pulse(`CRImplementation_logic).
lang:pulse(`CRImplementation_commit).
lang:pulse(`CRImplementation_template_id).
lang:pulse(`CRImplementation_post_refresh_inactive_block).
lang:pulse(`CRImplementation_skip_not_derived).
lang:constructor(`BundleImplementationConstructor).
lang:pulse(`BundleImplementationConstructor).
lang:pulse(`BundleImplementation).
lang:pulse(`BundleImplementation_name).
lang:pulse(`BundleImplementation_disjunction).
lang:pulse(`BundleImplementation_block).
lang:pulse(`BundleImplementation_export_binding).
lang:pulse(`BundleImplementation_import_binding).
lang:pulse(`BundleImplementation_logic).
lang:constructor(`FileBindingConstructor).
lang:pulse(`FileBindingConstructor).
lang:pulse(`FileBinding).
lang:pulse(`FileBinding_file).
lang:pulse(`FileBinding_binding).
lang:pulse(`FileBinding_entity_creation).
lang:pulse(`FileBinding_default_value).
lang:pulse(`FileBinding_ignore_idb_on_import).
lang:constructor(`DefaultValueConstructor).
lang:pulse(`DefaultValueConstructor).
lang:pulse(`DefaultValue).
lang:pulse(`DefaultValue_header).
lang:pulse(`DefaultValue_import_default_value).
lang:pulse(`DefaultValue_export_default_value).
lang:constructor(`FileDefinitionConstructor).
lang:pulse(`FileDefinitionConstructor).
lang:pulse(`FileDefinition).
lang:pulse(`FileDefinition_delimiter).
lang:pulse(`FileDefinition_column_headers).
lang:pulse(`FileDefinition_column_formats).
lang:pulse(`FileDefinition_file_columns_required).
lang:pulse(`FileDefinition_file_columns_optional).
lang:pulse(`FileDefinition_file_columns_can_be_absent).
lang:constructor(`PredicateBindingConstructor).
lang:pulse(`PredicateBindingConstructor).
lang:pulse(`PredicateBinding).
lang:pulse(`PredicateBinding_predicate_name).
lang:pulse(`PredicateBinding_predicate_binding_columns).
lang:pulse(`PredicateBinding_column).
lang:pulse(`PredicateBinding_export).
lang:pulse(`PredicateBinding_filter).
lang:pulse(`PredicateBinding_negated).
lang:pulse(`PredicateBinding_plugin_logic).
lang:pulse(`PredicateBinding_entity_creation).
lang:pulse(`PredicateBinding_no_retraction_on_post).
lang:constructor(`ColumnBindingConstructor).
lang:pulse(`ColumnBindingConstructor).
lang:pulse(`ColumnBinding).
lang:pulse(`ColumnBinding_index).
lang:pulse(`ColumnBinding_entity_creation).
lang:pulse(`ColumnBinding_import_function).
lang:pulse(`ColumnBinding_import_function_inverse).
lang:pulse(`ColumnBinding_export_function).
lang:pulse(`ColumnBinding_export_function_inverse).
lang:constructor(`PluginLogicConstructor).
lang:pulse(`PluginLogicConstructor).
lang:pulse(`PluginLogic).
lang:pulse(`PluginLogic_name).
lang:pulse(`PluginLogic_plugin_name).
lang:pulse(`PluginLogic_param).
lang:pulse(`PluginLogic_rename_param).
lang:pulse(`PluginLogic_allow_override).
lang:pulse(`PluginLogic_allow_accumulate).
lang:constructor(`ParamConstructor).
lang:pulse(`ParamConstructor).
lang:pulse(`Param).
lang:pulse(`Param_key).
lang:pulse(`Param_value).
lang:constructor(`ParamRenameConstructor).
lang:pulse(`ParamRenameConstructor).
lang:pulse(`ParamRename).
lang:pulse(`ParamRename_original_name).
lang:pulse(`ParamRename_renamed_name).
lang:constructor(`AbortMessageConstructor).
lang:pulse(`AbortMessageConstructor).
lang:pulse(`AbortMessage).
lang:pulse(`AbortMessage_http_status_code).
lang:pulse(`AbortMessage_message).
lang:constructor(`TemplateInstantiationRequestConstructor).
lang:pulse(`TemplateInstantiationRequestConstructor).
lang:pulse(`TemplateInstantiationRequest).
lang:pulse(`TemplateInstantiationRequest_template_name).
lang:pulse(`TemplateInstantiationRequest_with_positions).
lang:pulse(`TemplateInstantiationRequest_tag).
lang:constructor(`TemplateInstantiationResponseConstructor).
lang:pulse(`TemplateInstantiationResponseConstructor).
lang:pulse(`TemplateInstantiationResponse).
lang:pulse(`TemplateInstantiationResponse_template_instantiation).
lang:constructor(`TemplateInstantiationPositionRequestConstructor).
lang:pulse(`TemplateInstantiationPositionRequestConstructor).
lang:pulse(`TemplateInstantiationPositionRequest).
lang:pulse(`TemplateInstantiationPositionRequest_template_instantiation_id).
lang:constructor(`TemplateInstantiationPositionResponseConstructor).
lang:pulse(`TemplateInstantiationPositionResponseConstructor).
lang:pulse(`TemplateInstantiationPositionResponse).
lang:pulse(`TemplateInstantiationPositionResponse_position).
lang:constructor(`TemplateInstantiationPermissionRequestConstructor).
lang:pulse(`TemplateInstantiationPermissionRequestConstructor).
lang:pulse(`TemplateInstantiationPermissionRequest).
lang:pulse(`TemplateInstantiationPermissionRequest_template_instantiation_id).
lang:constructor(`TemplateInstantiationPermissionResponseConstructor).
lang:pulse(`TemplateInstantiationPermissionResponseConstructor).
lang:pulse(`TemplateInstantiationPermissionResponse).
lang:pulse(`TemplateInstantiationPermissionResponse_user_id).
lang:constructor(`TemplateInstantiationRefConstructor).
lang:pulse(`TemplateInstantiationRefConstructor).
lang:pulse(`TemplateInstantiationRef).
lang:pulse(`TemplateInstantiationRef_id).
lang:pulse(`TemplateInstantiationRef_workbook_name).
lang:pulse(`TemplateInstantiationRef_template_name).
lang:pulse(`TemplateInstantiationRef_workbook_id).
lang:pulse(`TemplateInstantiationRef_tag).
 } )
} <-- .