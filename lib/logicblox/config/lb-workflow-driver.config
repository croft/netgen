#
# lb workflow driver configuration file
#
[global]

# A list of directories pointing to lb workflow extensions. These directories
# are used in 2 ways: 1) jars in lib/java will be added to the driver CLASSPATH,
# so they may contain implementation of custom tasks, and 2) .wf files in lib/wf
# will be searched when an import statement fails to locate a file, so that code
# can refer to modules in these directories.
extension_dirs=


##
## A notifier section binds an event-filter with some notification mechanism
##

#
# this example binds all-events to an SNS-based notifier
#
#[notifier:sns_all]
#classname = com.logicblox.workflow.SNSNotifier

## send all events selected by this filter
#event-filter = all-events

## send events to this topic ARN
#topic = arn:aws:sns:us-east-1:123456789012:MyNewTopic

## configure credentials to access the SNS topic
# iam_role = default
# access_key = ...
# secret_key = ...

#
# this example binds all-events to a File-based notifier
#
#[notifier:file_all]
#classname = com.logicblox.workflow.FileNotifier
#event-filter = all-events
#filename = /tmp/lb-workflow-driver-events.log


##
## An event-filter determines which types of events to publish
##
[event-filter:all-events]

# the following options should contain regular expressions to match the
# events names, class names, workflow names, etc. Only events whose attributes
# match the regexp will be published

# events about the driver lifecycle, like startup and shutdown
driver_events = .*

# events about tasks; specific tasks can be selected by their implementation
# classes (e.g. ".*tdx.*|.*control.*"); specific event types can be selected
# by name (e.g. "start|stop|fail")
task_classes = .*
task_events = .*

# events about workflow instances; currently unsupported, but in the future we
# may allow selecting events such as start, pause, abort, end.
workflow_events = .*
workflow_names = .*
