//*******************************************
// This code was generated by proto2datalog.
// Do not check into version control.
//*******************************************


/*
 * lb:measure:txn
 */
/*
* message lb:measure:txn:Problem
*/
lb:measure:txn:Problem(_) -> .lb:measure:txn:ProblemConstructor[i]=x ->int(i), lb:measure:txn:Problem(x).
lb:measure:txn:Problem_code[x] = y -> lb:measure:txn:Problem(x), string(y).
lb:measure:txn:Problem_severity[x] = y -> lb:measure:txn:Problem(x), lb:measure:txn:Problem:Severity(y).
lb:measure:txn:Problem_text[x] = y -> lb:measure:txn:Problem(x), string(y).
lb:measure:txn:Problem_region[x] = y -> lb:measure:txn:Problem(x), lb:measure:txn:common:Region(y).
lb:measure:txn:Problem_stack[x, i] = y -> lb:measure:txn:Problem(x), int(i), lb:measure:txn:Problem:StackFrame(y).
/*
* message lb:measure:txn:Type
*/
lb:measure:txn:Type(_) -> .lb:measure:txn:TypeConstructor[i]=x ->int(i), lb:measure:txn:Type(x).
lb:measure:txn:Type_kind[x] = y -> lb:measure:txn:Type(x), lb:measure:txn:Type:Kind(y).
lb:measure:txn:Type_named[x] = y -> lb:measure:txn:Type(x), string(y).
/*
* message lb:measure:txn:MeasureModel
*/
lb:measure:txn:MeasureModel(_) -> .lb:measure:txn:MeasureModelConstructor[i]=x ->int(i), lb:measure:txn:MeasureModel(x).
lb:measure:txn:MeasureModel_name[x] = y -> lb:measure:txn:MeasureModel(x), string(y).
lb:measure:txn:MeasureModel_dimension(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:Dimension(y).
lb:measure:txn:MeasureModel_metric(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:Metric(y).
lb:measure:txn:MeasureModel_multi_dim_level_map(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:MultiDimensionalLevelMap(y).
lb:measure:txn:MeasureModel_slide(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:Slide(y).
lb:measure:txn:MeasureModel_operator(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:OpDef(y).
lb:measure:txn:MeasureModel_subst(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:ExprSubst(y).
lb:measure:txn:MeasureModel_key_order(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:Intersection(y).
lb:measure:txn:MeasureModel_runtime_var_order(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:VarOrder(y).
lb:measure:txn:MeasureModel_aggregation(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:AggDef(y).
lb:measure:txn:MeasureModel_spread(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:SpreadDef(y).
lb:measure:txn:MeasureModel_metric_lock(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:MetricLock(y).
lb:measure:txn:MeasureModel_dimension_lock(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:DimensionLock(y).
lb:measure:txn:MeasureModel_type(x, y) -> lb:measure:txn:MeasureModel(x), lb:measure:txn:TypeDefinition(y).
lb:measure:txn:MeasureModel_complete_model[x] = y -> lb:measure:txn:MeasureModel(x), boolean(y).
/*
* message lb:measure:txn:VarOrder
*/
lb:measure:txn:VarOrder(_) -> .lb:measure:txn:VarOrderConstructor[i]=x ->int(i), lb:measure:txn:VarOrder(x).
lb:measure:txn:VarOrder_pattern[x, i] = y -> lb:measure:txn:VarOrder(x), int(i), lb:measure:txn:QualifiedLevel(y).
lb:measure:txn:VarOrder_order[x, i] = y -> lb:measure:txn:VarOrder(x), int(i), lb:measure:txn:QualifiedLevel(y).
/*
* message lb:measure:txn:OpDef
*/
lb:measure:txn:OpDef(_) -> .lb:measure:txn:OpDefConstructor[i]=x ->int(i), lb:measure:txn:OpDef(x).
lb:measure:txn:OpDef_name[x] = y -> lb:measure:txn:OpDef(x), string(y).
lb:measure:txn:OpDef_impl[x] = y -> lb:measure:txn:OpDef(x), string(y).
lb:measure:txn:OpDef_domain[x, i] = y -> lb:measure:txn:OpDef(x), int(i), lb:measure:txn:Type(y).
lb:measure:txn:OpDef_range[x] = y -> lb:measure:txn:OpDef(x), lb:measure:txn:Type(y).
/*
* message lb:measure:txn:AggDef
*/
lb:measure:txn:AggDef(_) -> .lb:measure:txn:AggDefConstructor[i]=x ->int(i), lb:measure:txn:AggDef(x).
lb:measure:txn:AggDef_name[x] = y -> lb:measure:txn:AggDef(x), string(y).
lb:measure:txn:AggDef_method[x] = y -> lb:measure:txn:AggDef(x), lb:measure:txn:AggExpr:Method(y).
/*
* message lb:measure:txn:SpreadDef
*/
lb:measure:txn:SpreadDef(_) -> .lb:measure:txn:SpreadDefConstructor[i]=x ->int(i), lb:measure:txn:SpreadDef(x).
lb:measure:txn:SpreadDef_name[x] = y -> lb:measure:txn:SpreadDef(x), string(y).
lb:measure:txn:SpreadDef_spread[x] = y -> lb:measure:txn:SpreadDef(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind(y).
/*
* message lb:measure:txn:Metric
*/
lb:measure:txn:Metric(_) -> .lb:measure:txn:MetricConstructor[i]=x ->int(i), lb:measure:txn:Metric(x).
lb:measure:txn:Metric_name[x] = y -> lb:measure:txn:Metric(x), string(y).
lb:measure:txn:Metric_signature[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:Signature(y).
lb:measure:txn:Metric_predicate[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:Predicate(y).
lb:measure:txn:Metric_dialogue[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:Dialogue(y).
lb:measure:txn:Metric_expr[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:ExprMetric(y).
lb:measure:txn:Metric_caption[x] = y -> lb:measure:txn:Metric(x), string(y).
lb:measure:txn:Metric_agg_method[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:AggExpr:Method(y).
lb:measure:txn:Metric_recalc[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:Recalc(y).
lb:measure:txn:Metric_update_method[x] = y -> lb:measure:txn:Metric(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind(y).
lb:measure:txn:Metric_inverse[x, i] = y -> lb:measure:txn:Metric(x), int(i), lb:measure:txn:InverseGroup(y).
lb:measure:txn:Metric_generate_inverses[x] = y -> lb:measure:txn:Metric(x), boolean(y).
/*
* message lb:measure:txn:Signature
*/
lb:measure:txn:Signature(_) -> .lb:measure:txn:SignatureConstructor[i]=x ->int(i), lb:measure:txn:Signature(x).
lb:measure:txn:Signature_kind[x] = y -> lb:measure:txn:Signature(x), lb:measure:txn:Signature:Kind(y).
lb:measure:txn:Signature_base_signature[x] = y -> lb:measure:txn:Signature(x), lb:measure:txn:BaseSignature(y).
/*
* message lb:measure:txn:BaseSignature
*/
lb:measure:txn:BaseSignature(_) -> .lb:measure:txn:BaseSignatureConstructor[i]=x ->int(i), lb:measure:txn:BaseSignature(x).
lb:measure:txn:BaseSignature_intersection[x] = y -> lb:measure:txn:BaseSignature(x), lb:measure:txn:Intersection(y).
lb:measure:txn:BaseSignature_type[x] = y -> lb:measure:txn:BaseSignature(x), lb:measure:txn:ValueType(y).
/*
* message lb:measure:txn:ValueType
*/
lb:measure:txn:ValueType(_) -> .lb:measure:txn:ValueTypeConstructor[i]=x ->int(i), lb:measure:txn:ValueType(x).
lb:measure:txn:ValueType_kind[x] = y -> lb:measure:txn:ValueType(x), lb:measure:txn:ValueType:Kind(y).
lb:measure:txn:ValueType_type[x] = y -> lb:measure:txn:ValueType(x), lb:measure:txn:Type(y).
/*
* message lb:measure:txn:Predicate
*/
lb:measure:txn:Predicate(_) -> .lb:measure:txn:PredicateConstructor[i]=x ->int(i), lb:measure:txn:Predicate(x).
lb:measure:txn:Predicate_name[x] = y -> lb:measure:txn:Predicate(x), string(y).
lb:measure:txn:Predicate_stage[x] = y -> lb:measure:txn:Predicate(x), string(y).
lb:measure:txn:Predicate_delta[x] = y -> lb:measure:txn:Predicate(x), string(y).
lb:measure:txn:Predicate_volatile[x] = y -> lb:measure:txn:Predicate(x), boolean(y).
lb:measure:txn:Predicate_update_pred[x] = y -> lb:measure:txn:Predicate(x), string(y).
lb:measure:txn:Predicate_default_value[x] = y -> lb:measure:txn:Predicate(x), lb:measure:txn:Column(y).
lb:measure:txn:Predicate_relational[x] = y -> lb:measure:txn:Predicate(x), boolean(y).
/*
* message lb:measure:txn:Dialogue
*/
lb:measure:txn:Dialogue(_) -> .lb:measure:txn:DialogueConstructor[i]=x ->int(i), lb:measure:txn:Dialogue(x).
lb:measure:txn:Dialogue_param(x, y) -> lb:measure:txn:Dialogue(x), lb:measure:txn:ParamExpr(y).
lb:measure:txn:Dialogue_response_pred[x] = y -> lb:measure:txn:Dialogue(x), string(y).
lb:measure:txn:Dialogue_block[x] = y -> lb:measure:txn:Dialogue(x), string(y).
/*
* message lb:measure:txn:Recalc
*/
lb:measure:txn:Recalc(_) -> .lb:measure:txn:RecalcConstructor[i]=x ->int(i), lb:measure:txn:Recalc(x).
lb:measure:txn:Recalc_rule_name[x] = y -> lb:measure:txn:Recalc(x), string(y).
/*
* message lb:measure:txn:ExprMetric
*/
lb:measure:txn:ExprMetric(_) -> .lb:measure:txn:ExprMetricConstructor[i]=x ->int(i), lb:measure:txn:ExprMetric(x).
lb:measure:txn:ExprMetric_measure_str[x] = y -> lb:measure:txn:ExprMetric(x), string(y).
lb:measure:txn:ExprMetric_measure_expr[x] = y -> lb:measure:txn:ExprMetric(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:Slide
*/
lb:measure:txn:Slide(_) -> .lb:measure:txn:SlideConstructor[i]=x ->int(i), lb:measure:txn:Slide(x).
lb:measure:txn:Slide_name[x] = y -> lb:measure:txn:Slide(x), string(y).
lb:measure:txn:Slide_map[x] = y -> lb:measure:txn:Slide(x), lb:measure:txn:Predicate(y).
lb:measure:txn:Slide_source_level[x, i] = y -> lb:measure:txn:Slide(x), int(i), lb:measure:txn:QualifiedLevel(y).
lb:measure:txn:Slide_target_label[x] = y -> lb:measure:txn:Slide(x), string(y).
lb:measure:txn:Slide_target_dimension[x] = y -> lb:measure:txn:Slide(x), string(y).
lb:measure:txn:Slide_target_level[x] = y -> lb:measure:txn:Slide(x), string(y).
/*
* message lb:measure:txn:MultiDimensionalLevelMap
*/
lb:measure:txn:MultiDimensionalLevelMap(_) -> .lb:measure:txn:MultiDimensionalLevelMapConstructor[i]=x ->int(i), lb:measure:txn:MultiDimensionalLevelMap(x).
lb:measure:txn:MultiDimensionalLevelMap_name[x] = y -> lb:measure:txn:MultiDimensionalLevelMap(x), string(y).
lb:measure:txn:MultiDimensionalLevelMap_level_map_pred[x] = y -> lb:measure:txn:MultiDimensionalLevelMap(x), string(y).
lb:measure:txn:MultiDimensionalLevelMap_source_inter[x] = y -> lb:measure:txn:MultiDimensionalLevelMap(x), lb:measure:txn:Intersection(y).
lb:measure:txn:MultiDimensionalLevelMap_target_label[x] = y -> lb:measure:txn:MultiDimensionalLevelMap(x), string(y).
lb:measure:txn:MultiDimensionalLevelMap_target_level[x] = y -> lb:measure:txn:MultiDimensionalLevelMap(x), string(y).
/*
* message lb:measure:txn:Dimension
*/
lb:measure:txn:Dimension(_) -> .lb:measure:txn:DimensionConstructor[i]=x ->int(i), lb:measure:txn:Dimension(x).
lb:measure:txn:Dimension_name[x] = y -> lb:measure:txn:Dimension(x), string(y).
lb:measure:txn:Dimension_level(x, y) -> lb:measure:txn:Dimension(x), lb:measure:txn:Dimension:Level(y).
lb:measure:txn:Dimension_edge(x, y) -> lb:measure:txn:Dimension(x), lb:measure:txn:Dimension:Edge(y).
lb:measure:txn:Dimension_hierarchy(x, y) -> lb:measure:txn:Dimension(x), lb:measure:txn:Dimension:Hierarchy(y).
lb:measure:txn:Dimension_default_hierarchy[x] = y -> lb:measure:txn:Dimension(x), string(y).
lb:measure:txn:Dimension_top_level[x] = y -> lb:measure:txn:Dimension(x), string(y).
lb:measure:txn:Dimension_unwinds[x] = y -> lb:measure:txn:Dimension(x), boolean(y).
lb:measure:txn:Dimension_caption[x] = y -> lb:measure:txn:Dimension(x), string(y).
/*
* message lb:measure:txn:Attribute
*/
lb:measure:txn:Attribute(_) -> .lb:measure:txn:AttributeConstructor[i]=x ->int(i), lb:measure:txn:Attribute(x).
lb:measure:txn:Attribute_name[x] = y -> lb:measure:txn:Attribute(x), string(y).
lb:measure:txn:Attribute_predicate[x] = y -> lb:measure:txn:Attribute(x), lb:measure:txn:Predicate(y).
lb:measure:txn:Attribute_type[x] = y -> lb:measure:txn:Attribute(x), lb:measure:txn:Type(y).
/*
* message lb:measure:txn:QualifiedLevel
*/
lb:measure:txn:QualifiedLevel(_) -> .lb:measure:txn:QualifiedLevelConstructor[i]=x ->int(i), lb:measure:txn:QualifiedLevel(x).
lb:measure:txn:QualifiedLevel_label[x] = y -> lb:measure:txn:QualifiedLevel(x), string(y).
lb:measure:txn:QualifiedLevel_dimension[x] = y -> lb:measure:txn:QualifiedLevel(x), string(y).
lb:measure:txn:QualifiedLevel_hierarchy[x] = y -> lb:measure:txn:QualifiedLevel(x), string(y).
lb:measure:txn:QualifiedLevel_level[x] = y -> lb:measure:txn:QualifiedLevel(x), string(y).
/*
* message lb:measure:txn:Intersection
*/
lb:measure:txn:Intersection(_) -> .lb:measure:txn:IntersectionConstructor[i]=x ->int(i), lb:measure:txn:Intersection(x).
lb:measure:txn:Intersection_qualified_level[x, i] = y -> lb:measure:txn:Intersection(x), int(i), lb:measure:txn:QualifiedLevel(y).
lb:measure:txn:Intersection_variable[x] = y -> lb:measure:txn:Intersection(x), string(y).
lb:measure:txn:Intersection_expr[x] = y -> lb:measure:txn:Intersection(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:Intersection_composite[x] = y -> lb:measure:txn:Intersection(x), lb:measure:txn:CompositeIntersection(y).
lb:measure:txn:Intersection_restriction[x] = y -> lb:measure:txn:Intersection(x), lb:measure:txn:RestrictionIntersection(y).
/*
* message lb:measure:txn:CompositeIntersection
*/
lb:measure:txn:CompositeIntersection(_) -> .lb:measure:txn:CompositeIntersectionConstructor[i]=x ->int(i), lb:measure:txn:CompositeIntersection(x).
lb:measure:txn:CompositeIntersection_kind[x] = y -> lb:measure:txn:CompositeIntersection(x), lb:measure:txn:CompositeIntersection:Kind(y).
lb:measure:txn:CompositeIntersection_inter(x, y) -> lb:measure:txn:CompositeIntersection(x), lb:measure:txn:Intersection(y).
/*
* message lb:measure:txn:RestrictionIntersection
*/
lb:measure:txn:RestrictionIntersection(_) -> .lb:measure:txn:RestrictionIntersectionConstructor[i]=x ->int(i), lb:measure:txn:RestrictionIntersection(x).
lb:measure:txn:RestrictionIntersection_label(x, y) -> lb:measure:txn:RestrictionIntersection(x), string(y).
lb:measure:txn:RestrictionIntersection_inter[x] = y -> lb:measure:txn:RestrictionIntersection(x), lb:measure:txn:Intersection(y).
/*
* message lb:measure:txn:ExprSubst
*/
lb:measure:txn:ExprSubst(_) -> .lb:measure:txn:ExprSubstConstructor[i]=x ->int(i), lb:measure:txn:ExprSubst(x).
lb:measure:txn:ExprSubst_pred[x] = y -> lb:measure:txn:ExprSubst(x), lb:measure:txn:Predicate(y).
lb:measure:txn:ExprSubst_replacement_expr[x] = y -> lb:measure:txn:ExprSubst(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:ExprSubst_phase[x] = y -> lb:measure:txn:ExprSubst(x), lb:measure:txn:ExprSubst:Phase(y).
lb:measure:txn:ExprSubst_expr[x] = y -> lb:measure:txn:ExprSubst(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:ExprSubst_expr_str[x] = y -> lb:measure:txn:ExprSubst(x), string(y).
/*
* message lb:measure:txn:Request
*/
lb:measure:txn:Request(_) -> .lb:measure:txn:RequestConstructor[i]=x ->int(i), lb:measure:txn:Request(x).
lb:measure:txn:Request_admin_request[x] = y -> lb:measure:txn:Request(x), lb:measure:txn:AdminRequest(y).
lb:measure:txn:Request_relation[x, i] = y -> lb:measure:txn:Request(x), int(i), lb:measure:txn:RelationBinding(y).
lb:measure:txn:Request_query_request[x, i] = y -> lb:measure:txn:Request(x), int(i), lb:measure:txn:QueryRequest(y).
lb:measure:txn:Request_model_request[x] = y -> lb:measure:txn:Request(x), lb:measure:txn:ModelRequest(y).
lb:measure:txn:Request_install_request[x] = y -> lb:measure:txn:Request(x), lb:measure:txn:InstallRequest(y).
lb:measure:txn:Request_update_request[x, i] = y -> lb:measure:txn:Request(x), int(i), lb:measure:txn:UpdateRequest(y).
lb:measure:txn:Request_editability_request[x] = y -> lb:measure:txn:Request(x), lb:measure:txn:EditabilityRequest(y).
lb:measure:txn:Request_metric_lock[x, i] = y -> lb:measure:txn:Request(x), int(i), lb:measure:txn:MetricLock(y).
lb:measure:txn:Request_dimension_lock[x, i] = y -> lb:measure:txn:Request(x), int(i), lb:measure:txn:DimensionLock(y).
lb:measure:txn:Request_inverse[x, i] = y -> lb:measure:txn:Request(x), int(i), lb:measure:txn:InverseGroup(y).
lb:measure:txn:Request_fault_point[x] = y -> lb:measure:txn:Request(x), string(y).
lb:measure:txn:Request_profile[x] = y -> lb:measure:txn:Request(x), boolean(y).
/*
* message lb:measure:txn:ModelRequest
*/
lb:measure:txn:ModelRequest(_) -> .lb:measure:txn:ModelRequestConstructor[i]=x ->int(i), lb:measure:txn:ModelRequest(x).
/*
* message lb:measure:txn:AdminRequest
*/
lb:measure:txn:AdminRequest(_) -> .lb:measure:txn:AdminRequestConstructor[i]=x ->int(i), lb:measure:txn:AdminRequest(x).
lb:measure:txn:AdminRequest_kind[x] = y -> lb:measure:txn:AdminRequest(x), lb:measure:txn:AdminRequest:Kind(y).
lb:measure:txn:AdminRequest_log_level[x] = y -> lb:measure:txn:AdminRequest(x), string(y).
lb:measure:txn:AdminRequest_compile_format[x] = y -> lb:measure:txn:AdminRequest(x), string(y).
lb:measure:txn:AdminRequest_code_format[x] = y -> lb:measure:txn:AdminRequest(x), string(y).
lb:measure:txn:AdminRequest_emit_comments[x] = y -> lb:measure:txn:AdminRequest(x), boolean(y).
lb:measure:txn:AdminRequest_short_names[x] = y -> lb:measure:txn:AdminRequest(x), boolean(y).
lb:measure:txn:AdminRequest_query_after_fixpoint[x] = y -> lb:measure:txn:AdminRequest(x), boolean(y).
lb:measure:txn:AdminRequest_fatal_warnings[x] = y -> lb:measure:txn:AdminRequest(x), boolean(y).
lb:measure:txn:AdminRequest_default_value_agg[x] = y -> lb:measure:txn:AdminRequest(x), boolean(y).
/*
* message lb:measure:txn:InstallRequest
*/
lb:measure:txn:InstallRequest(_) -> .lb:measure:txn:InstallRequestConstructor[i]=x ->int(i), lb:measure:txn:InstallRequest(x).
lb:measure:txn:InstallRequest_measure_expr(x, y) -> lb:measure:txn:InstallRequest(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:InstallRequest_measure_str(x, y) -> lb:measure:txn:InstallRequest(x), string(y).
lb:measure:txn:InstallRequest_rules[x] = y -> lb:measure:txn:InstallRequest(x), string(y).
lb:measure:txn:InstallRequest_limited_rewrites[x] = y -> lb:measure:txn:InstallRequest(x), boolean(y).
/*
* message lb:measure:txn:QueryRequest
*/
lb:measure:txn:QueryRequest(_) -> .lb:measure:txn:QueryRequestConstructor[i]=x ->int(i), lb:measure:txn:QueryRequest(x).
lb:measure:txn:QueryRequest_report_name[x] = y -> lb:measure:txn:QueryRequest(x), string(y).
lb:measure:txn:QueryRequest_row_limit[x] = y -> lb:measure:txn:QueryRequest(x), int(y).
lb:measure:txn:QueryRequest_return_row_numbers[x] = y -> lb:measure:txn:QueryRequest(x), boolean(y).
lb:measure:txn:QueryRequest_key[x, i] = y -> lb:measure:txn:QueryRequest(x), int(i), lb:measure:txn:KeyRequest(y).
lb:measure:txn:QueryRequest_measure[x, i] = y -> lb:measure:txn:QueryRequest(x), int(i), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:QueryRequest_measure_str[x, i] = y -> lb:measure:txn:QueryRequest(x), int(i), string(y).
lb:measure:txn:QueryRequest_limited_rewrites[x] = y -> lb:measure:txn:QueryRequest(x), boolean(y).
lb:measure:txn:QueryRequest_default_values[x] = y -> lb:measure:txn:QueryRequest(x), boolean(y).
lb:measure:txn:QueryRequest_binary_decimal_columns[x] = y -> lb:measure:txn:QueryRequest(x), boolean(y).
/*
* message lb:measure:txn:KeyRequest
*/
lb:measure:txn:KeyRequest(_) -> .lb:measure:txn:KeyRequestConstructor[i]=x ->int(i), lb:measure:txn:KeyRequest(x).
lb:measure:txn:KeyRequest_qualified_level[x] = y -> lb:measure:txn:KeyRequest(x), lb:measure:txn:QualifiedLevel(y).
lb:measure:txn:KeyRequest_attribute[x] = y -> lb:measure:txn:KeyRequest(x), string(y).
/*
* message lb:measure:txn:RelationBinding
*/
lb:measure:txn:RelationBinding(_) -> .lb:measure:txn:RelationBindingConstructor[i]=x ->int(i), lb:measure:txn:RelationBinding(x).
lb:measure:txn:RelationBinding_param[x] = y -> lb:measure:txn:RelationBinding(x), lb:measure:txn:ParamExpr(y).
lb:measure:txn:RelationBinding_expr[x] = y -> lb:measure:txn:RelationBinding(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:Response
*/
lb:measure:txn:Response(_) -> .lb:measure:txn:ResponseConstructor[i]=x ->int(i), lb:measure:txn:Response(x).
lb:measure:txn:Response_report[x, i] = y -> lb:measure:txn:Response(x), int(i), lb:measure:txn:Report(y).
lb:measure:txn:Response_admin[x] = y -> lb:measure:txn:Response(x), lb:measure:txn:AdminResponse(y).
lb:measure:txn:Response_model[x] = y -> lb:measure:txn:Response(x), lb:measure:txn:MeasureModel(y).
lb:measure:txn:Response_editability[x] = y -> lb:measure:txn:Response(x), lb:measure:txn:EditabilityResponse(y).
lb:measure:txn:Response_profile[x] = y -> lb:measure:txn:Response(x), lb:measure:txn:LiteralExpr(y).
lb:measure:txn:Response_problem[x, i] = y -> lb:measure:txn:Response(x), int(i), lb:measure:txn:Problem(y).
/*
* message lb:measure:txn:AdminResponse
*/
lb:measure:txn:AdminResponse(_) -> .lb:measure:txn:AdminResponseConstructor[i]=x ->int(i), lb:measure:txn:AdminResponse(x).
lb:measure:txn:AdminResponse_workspace[x] = y -> lb:measure:txn:AdminResponse(x), string(y).
/*
* message lb:measure:txn:Report
*/
lb:measure:txn:Report(_) -> .lb:measure:txn:ReportConstructor[i]=x ->int(i), lb:measure:txn:Report(x).
lb:measure:txn:Report_name[x] = y -> lb:measure:txn:Report(x), string(y).
lb:measure:txn:Report_report_column[x, i] = y -> lb:measure:txn:Report(x), int(i), lb:measure:txn:Column(y).
/*
* message lb:measure:txn:Column
*/
lb:measure:txn:Column(_) -> .lb:measure:txn:ColumnConstructor[i]=x ->int(i), lb:measure:txn:Column(x).
lb:measure:txn:Column_bool_column[x] = y -> lb:measure:txn:Column(x), lb:measure:txn:BoolColumn(y).
lb:measure:txn:Column_int_column[x] = y -> lb:measure:txn:Column(x), lb:measure:txn:IntColumn(y).
lb:measure:txn:Column_float_column[x] = y -> lb:measure:txn:Column(x), lb:measure:txn:FloatColumn(y).
lb:measure:txn:Column_string_column[x] = y -> lb:measure:txn:Column(x), lb:measure:txn:StringColumn(y).
lb:measure:txn:Column_decimal_column[x] = y -> lb:measure:txn:Column(x), lb:measure:txn:DecimalColumn(y).
/*
* message lb:measure:txn:BoolColumn
*/
lb:measure:txn:BoolColumn(_) -> .lb:measure:txn:BoolColumnConstructor[i]=x ->int(i), lb:measure:txn:BoolColumn(x).
lb:measure:txn:BoolColumn_defaultValue[x] = y -> lb:measure:txn:BoolColumn(x), boolean(y).
lb:measure:txn:BoolColumn_value[x, i] = y -> lb:measure:txn:BoolColumn(x), int(i), boolean(y).
/*
* message lb:measure:txn:IntColumn
*/
lb:measure:txn:IntColumn(_) -> .lb:measure:txn:IntColumnConstructor[i]=x ->int(i), lb:measure:txn:IntColumn(x).
lb:measure:txn:IntColumn_defaultValue[x] = y -> lb:measure:txn:IntColumn(x), int(y).
lb:measure:txn:IntColumn_value[x, i] = y -> lb:measure:txn:IntColumn(x), int(i), int(y).
/*
* message lb:measure:txn:FloatColumn
*/
lb:measure:txn:FloatColumn(_) -> .lb:measure:txn:FloatColumnConstructor[i]=x ->int(i), lb:measure:txn:FloatColumn(x).
lb:measure:txn:FloatColumn_defaultValue[x] = y -> lb:measure:txn:FloatColumn(x), float(y).
lb:measure:txn:FloatColumn_value[x, i] = y -> lb:measure:txn:FloatColumn(x), int(i), float(y).
/*
* message lb:measure:txn:StringColumn
*/
lb:measure:txn:StringColumn(_) -> .lb:measure:txn:StringColumnConstructor[i]=x ->int(i), lb:measure:txn:StringColumn(x).
lb:measure:txn:StringColumn_defaultValue[x] = y -> lb:measure:txn:StringColumn(x), string(y).
lb:measure:txn:StringColumn_value[x, i] = y -> lb:measure:txn:StringColumn(x), int(i), string(y).
/*
* message lb:measure:txn:DecimalColumn
*/
lb:measure:txn:DecimalColumn(_) -> .lb:measure:txn:DecimalColumnConstructor[i]=x ->int(i), lb:measure:txn:DecimalColumn(x).
lb:measure:txn:DecimalColumn_defaultValue[x] = y -> lb:measure:txn:DecimalColumn(x), string(y).
lb:measure:txn:DecimalColumn_value[x, i] = y -> lb:measure:txn:DecimalColumn(x), int(i), string(y).
lb:measure:txn:DecimalColumn_negativeDefault[x] = y -> lb:measure:txn:DecimalColumn(x), boolean(y).
lb:measure:txn:DecimalColumn_integralDefault[x] = y -> lb:measure:txn:DecimalColumn(x), int(y).
lb:measure:txn:DecimalColumn_fractionDefault[x] = y -> lb:measure:txn:DecimalColumn(x), int(y).
lb:measure:txn:DecimalColumn_negative[x, i] = y -> lb:measure:txn:DecimalColumn(x), int(i), boolean(y).
lb:measure:txn:DecimalColumn_integral_digit[x, i] = y -> lb:measure:txn:DecimalColumn(x), int(i), int(y).
lb:measure:txn:DecimalColumn_fraction_digit[x, i] = y -> lb:measure:txn:DecimalColumn(x), int(i), int(y).
/*
* message lb:measure:txn:Annotation
*/
lb:measure:txn:Annotation(_) -> .lb:measure:txn:AnnotationConstructor[i]=x ->int(i), lb:measure:txn:Annotation(x).
lb:measure:txn:Annotation_name[x] = y -> lb:measure:txn:Annotation(x), string(y).
lb:measure:txn:Annotation_values[x] = y -> lb:measure:txn:Annotation(x), lb:measure:txn:Column(y).
/*
* message lb:measure:txn:MeasureExpr
*/
lb:measure:txn:MeasureExpr(_) -> .lb:measure:txn:MeasureExprConstructor[i]=x ->int(i), lb:measure:txn:MeasureExpr(x).
lb:measure:txn:MeasureExpr_kind[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:MeasureExpr:Kind(y).
lb:measure:txn:MeasureExpr_str[x] = y -> lb:measure:txn:MeasureExpr(x), string(y).
lb:measure:txn:MeasureExpr_metric[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:MetricExpr(y).
lb:measure:txn:MeasureExpr_aggregation[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:AggExpr(y).
lb:measure:txn:MeasureExpr_filter[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:FilterExpr(y).
lb:measure:txn:MeasureExpr_composite[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:CompositeExpr(y).
lb:measure:txn:MeasureExpr_attribute[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:AttributeExpr(y).
lb:measure:txn:MeasureExpr_op[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:OpExpr(y).
lb:measure:txn:MeasureExpr_widen[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:WidenExpr(y).
lb:measure:txn:MeasureExpr_dice[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:DiceExpr(y).
lb:measure:txn:MeasureExpr_drop[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:DropExpr(y).
lb:measure:txn:MeasureExpr_difference[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:DifferenceExpr(y).
lb:measure:txn:MeasureExpr_demote[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:DemoteExpr(y).
lb:measure:txn:MeasureExpr_promote[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:PromoteExpr(y).
lb:measure:txn:MeasureExpr_prev[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:PrevExpr(y).
lb:measure:txn:MeasureExpr_override[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:OverrideExpr(y).
lb:measure:txn:MeasureExpr_delta[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:DeltaExpr(y).
lb:measure:txn:MeasureExpr_param[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:ParamExpr(y).
lb:measure:txn:MeasureExpr_split[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:SplitExpr(y).
lb:measure:txn:MeasureExpr_relabel[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:RelabelExpr(y).
lb:measure:txn:MeasureExpr_variable[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:VarExpr(y).
lb:measure:txn:MeasureExpr_abstraction[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:AbsExpr(y).
lb:measure:txn:MeasureExpr_application[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:AppExpr(y).
lb:measure:txn:MeasureExpr_literal[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:LiteralExpr(y).
lb:measure:txn:MeasureExpr_cast[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:CastExpr(y).
lb:measure:txn:MeasureExpr_region[x] = y -> lb:measure:txn:MeasureExpr(x), lb:measure:txn:common:Region(y).
lb:measure:txn:MeasureExpr_annotation[x, i] = y -> lb:measure:txn:MeasureExpr(x), int(i), lb:measure:txn:Annotation(y).
/*
* message lb:measure:txn:VarExpr
*/
lb:measure:txn:VarExpr(_) -> .lb:measure:txn:VarExprConstructor[i]=x ->int(i), lb:measure:txn:VarExpr(x).
lb:measure:txn:VarExpr_name[x] = y -> lb:measure:txn:VarExpr(x), string(y).
/*
* message lb:measure:txn:AbsExpr
*/
lb:measure:txn:AbsExpr(_) -> .lb:measure:txn:AbsExprConstructor[i]=x ->int(i), lb:measure:txn:AbsExpr(x).
lb:measure:txn:AbsExpr_inter_arg[x, i] = y -> lb:measure:txn:AbsExpr(x), int(i), lb:measure:txn:AbsExpr:InterArgument(y).
lb:measure:txn:AbsExpr_expr_arg[x, i] = y -> lb:measure:txn:AbsExpr(x), int(i), lb:measure:txn:AbsExpr:ExprArgument(y).
lb:measure:txn:AbsExpr_body[x] = y -> lb:measure:txn:AbsExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:AppExpr
*/
lb:measure:txn:AppExpr(_) -> .lb:measure:txn:AppExprConstructor[i]=x ->int(i), lb:measure:txn:AppExpr(x).
lb:measure:txn:AppExpr_abstraction[x] = y -> lb:measure:txn:AppExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:AppExpr_inter_arg[x, i] = y -> lb:measure:txn:AppExpr(x), int(i), lb:measure:txn:AppExpr:InterArgument(y).
lb:measure:txn:AppExpr_expr_arg[x, i] = y -> lb:measure:txn:AppExpr(x), int(i), lb:measure:txn:AppExpr:ExprArgument(y).
/*
* message lb:measure:txn:LiteralExpr
*/
lb:measure:txn:LiteralExpr(_) -> .lb:measure:txn:LiteralExprConstructor[i]=x ->int(i), lb:measure:txn:LiteralExpr(x).
lb:measure:txn:LiteralExpr_kind[x] = y -> lb:measure:txn:LiteralExpr(x), lb:measure:txn:LiteralExpr:Kind(y).
lb:measure:txn:LiteralExpr_signature[x] = y -> lb:measure:txn:LiteralExpr(x), lb:measure:txn:BaseSignature(y).
lb:measure:txn:LiteralExpr_column[x, i] = y -> lb:measure:txn:LiteralExpr(x), int(i), lb:measure:txn:Column(y).
/*
* message lb:measure:txn:WidenExpr
*/
lb:measure:txn:WidenExpr(_) -> .lb:measure:txn:WidenExprConstructor[i]=x ->int(i), lb:measure:txn:WidenExpr(x).
lb:measure:txn:WidenExpr_expr[x] = y -> lb:measure:txn:WidenExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:WidenExpr_inter[x] = y -> lb:measure:txn:WidenExpr(x), lb:measure:txn:Intersection(y).
/*
* message lb:measure:txn:DropExpr
*/
lb:measure:txn:DropExpr(_) -> .lb:measure:txn:DropExprConstructor[i]=x ->int(i), lb:measure:txn:DropExpr(x).
lb:measure:txn:DropExpr_expr[x] = y -> lb:measure:txn:DropExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:OverrideExpr
*/
lb:measure:txn:OverrideExpr(_) -> .lb:measure:txn:OverrideExprConstructor[i]=x ->int(i), lb:measure:txn:OverrideExpr(x).
lb:measure:txn:OverrideExpr_expr[x, i] = y -> lb:measure:txn:OverrideExpr(x), int(i), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:PrevExpr
*/
lb:measure:txn:PrevExpr(_) -> .lb:measure:txn:PrevExprConstructor[i]=x ->int(i), lb:measure:txn:PrevExpr(x).
lb:measure:txn:PrevExpr_expr[x] = y -> lb:measure:txn:PrevExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:DeltaExpr
*/
lb:measure:txn:DeltaExpr(_) -> .lb:measure:txn:DeltaExprConstructor[i]=x ->int(i), lb:measure:txn:DeltaExpr(x).
lb:measure:txn:DeltaExpr_kind[x] = y -> lb:measure:txn:DeltaExpr(x), lb:measure:txn:DeltaExpr:Kind(y).
lb:measure:txn:DeltaExpr_expr[x] = y -> lb:measure:txn:DeltaExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:DemoteExpr
*/
lb:measure:txn:DemoteExpr(_) -> .lb:measure:txn:DemoteExprConstructor[i]=x ->int(i), lb:measure:txn:DemoteExpr(x).
lb:measure:txn:DemoteExpr_expr[x] = y -> lb:measure:txn:DemoteExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:DemoteExpr_dimension[x] = y -> lb:measure:txn:DemoteExpr(x), string(y).
lb:measure:txn:DemoteExpr_label[x] = y -> lb:measure:txn:DemoteExpr(x), string(y).
/*
* message lb:measure:txn:PromoteExpr
*/
lb:measure:txn:PromoteExpr(_) -> .lb:measure:txn:PromoteExprConstructor[i]=x ->int(i), lb:measure:txn:PromoteExpr(x).
lb:measure:txn:PromoteExpr_expr[x] = y -> lb:measure:txn:PromoteExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:PromoteExpr_label[x] = y -> lb:measure:txn:PromoteExpr(x), string(y).
/*
* message lb:measure:txn:DifferenceExpr
*/
lb:measure:txn:DifferenceExpr(_) -> .lb:measure:txn:DifferenceExprConstructor[i]=x ->int(i), lb:measure:txn:DifferenceExpr(x).
lb:measure:txn:DifferenceExpr_left[x] = y -> lb:measure:txn:DifferenceExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:DifferenceExpr_right[x] = y -> lb:measure:txn:DifferenceExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:DiceExpr
*/
lb:measure:txn:DiceExpr(_) -> .lb:measure:txn:DiceExprConstructor[i]=x ->int(i), lb:measure:txn:DiceExpr(x).
lb:measure:txn:DiceExpr_expr[x] = y -> lb:measure:txn:DiceExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:DiceExpr_dicer(x, y) -> lb:measure:txn:DiceExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:DiceExpr_is_disjunction[x] = y -> lb:measure:txn:DiceExpr(x), boolean(y).
/*
* message lb:measure:txn:Op
*/
lb:measure:txn:Op(_) -> .lb:measure:txn:OpConstructor[i]=x ->int(i), lb:measure:txn:Op(x).
lb:measure:txn:Op_kind[x] = y -> lb:measure:txn:Op(x), lb:measure:txn:Op:Kind(y).
lb:measure:txn:Op_name[x] = y -> lb:measure:txn:Op(x), string(y).
/*
* message lb:measure:txn:OpExpr
*/
lb:measure:txn:OpExpr(_) -> .lb:measure:txn:OpExprConstructor[i]=x ->int(i), lb:measure:txn:OpExpr(x).
lb:measure:txn:OpExpr_op[x] = y -> lb:measure:txn:OpExpr(x), lb:measure:txn:Op(y).
lb:measure:txn:OpExpr_expr[x, i] = y -> lb:measure:txn:OpExpr(x), int(i), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:CastExpr
*/
lb:measure:txn:CastExpr(_) -> .lb:measure:txn:CastExprConstructor[i]=x ->int(i), lb:measure:txn:CastExpr(x).
lb:measure:txn:CastExpr_expr[x] = y -> lb:measure:txn:CastExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:CastExpr_type[x] = y -> lb:measure:txn:CastExpr(x), lb:measure:txn:Type(y).
/*
* message lb:measure:txn:CompositeExpr
*/
lb:measure:txn:CompositeExpr(_) -> .lb:measure:txn:CompositeExprConstructor[i]=x ->int(i), lb:measure:txn:CompositeExpr(x).
lb:measure:txn:CompositeExpr_kind[x] = y -> lb:measure:txn:CompositeExpr(x), lb:measure:txn:CompositeExpr:Kind(y).
lb:measure:txn:CompositeExpr_expr(x, y) -> lb:measure:txn:CompositeExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:AttributeExpr
*/
lb:measure:txn:AttributeExpr(_) -> .lb:measure:txn:AttributeExprConstructor[i]=x ->int(i), lb:measure:txn:AttributeExpr(x).
lb:measure:txn:AttributeExpr_qualified_level[x] = y -> lb:measure:txn:AttributeExpr(x), lb:measure:txn:QualifiedLevel(y).
lb:measure:txn:AttributeExpr_attribute[x] = y -> lb:measure:txn:AttributeExpr(x), string(y).
/*
* message lb:measure:txn:ParamExpr
*/
lb:measure:txn:ParamExpr(_) -> .lb:measure:txn:ParamExprConstructor[i]=x ->int(i), lb:measure:txn:ParamExpr(x).
lb:measure:txn:ParamExpr_name[x] = y -> lb:measure:txn:ParamExpr(x), string(y).
lb:measure:txn:ParamExpr_signature[x] = y -> lb:measure:txn:ParamExpr(x), lb:measure:txn:BaseSignature(y).
/*
* message lb:measure:txn:MetricExpr
*/
lb:measure:txn:MetricExpr(_) -> .lb:measure:txn:MetricExprConstructor[i]=x ->int(i), lb:measure:txn:MetricExpr(x).
lb:measure:txn:MetricExpr_name[x] = y -> lb:measure:txn:MetricExpr(x), string(y).
lb:measure:txn:MetricExpr_metric[x] = y -> lb:measure:txn:MetricExpr(x), lb:measure:txn:Metric(y).
/*
* message lb:measure:txn:FilterExpr
*/
lb:measure:txn:FilterExpr(_) -> .lb:measure:txn:FilterExprConstructor[i]=x ->int(i), lb:measure:txn:FilterExpr(x).
lb:measure:txn:FilterExpr_expr[x] = y -> lb:measure:txn:FilterExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:FilterExpr_comparison(x, y) -> lb:measure:txn:FilterExpr(x), lb:measure:txn:Comparison(y).
lb:measure:txn:FilterExpr_is_disjunction[x] = y -> lb:measure:txn:FilterExpr(x), boolean(y).
/*
* message lb:measure:txn:Comparison
*/
lb:measure:txn:Comparison(_) -> .lb:measure:txn:ComparisonConstructor[i]=x ->int(i), lb:measure:txn:Comparison(x).
lb:measure:txn:Comparison_op[x] = y -> lb:measure:txn:Comparison(x), lb:measure:txn:Comparison:Kind(y).
lb:measure:txn:Comparison_expr[x] = y -> lb:measure:txn:Comparison(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:AggExpr
*/
lb:measure:txn:AggExpr(_) -> .lb:measure:txn:AggExprConstructor[i]=x ->int(i), lb:measure:txn:AggExpr(x).
lb:measure:txn:AggExpr_method[x] = y -> lb:measure:txn:AggExpr(x), lb:measure:txn:AggExpr:Method(y).
lb:measure:txn:AggExpr_expr[x] = y -> lb:measure:txn:AggExpr(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:AggExpr_grouping(x, y) -> lb:measure:txn:AggExpr(x), lb:measure:txn:AggExpr:Grouping(y).
lb:measure:txn:AggExpr_inter[x] = y -> lb:measure:txn:AggExpr(x), lb:measure:txn:Intersection(y).
/*
* message lb:measure:txn:LabelMap
*/
lb:measure:txn:LabelMap(_) -> .lb:measure:txn:LabelMapConstructor[i]=x ->int(i), lb:measure:txn:LabelMap(x).
lb:measure:txn:LabelMap_source[x] = y -> lb:measure:txn:LabelMap(x), string(y).
lb:measure:txn:LabelMap_target[x] = y -> lb:measure:txn:LabelMap(x), string(y).
/*
* message lb:measure:txn:SplitExpr
*/
lb:measure:txn:SplitExpr(_) -> .lb:measure:txn:SplitExprConstructor[i]=x ->int(i), lb:measure:txn:SplitExpr(x).
lb:measure:txn:SplitExpr_map[x, i] = y -> lb:measure:txn:SplitExpr(x), int(i), lb:measure:txn:LabelMap(y).
lb:measure:txn:SplitExpr_expr[x] = y -> lb:measure:txn:SplitExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:RelabelExpr
*/
lb:measure:txn:RelabelExpr(_) -> .lb:measure:txn:RelabelExprConstructor[i]=x ->int(i), lb:measure:txn:RelabelExpr(x).
lb:measure:txn:RelabelExpr_map[x, i] = y -> lb:measure:txn:RelabelExpr(x), int(i), lb:measure:txn:LabelMap(y).
lb:measure:txn:RelabelExpr_expr[x] = y -> lb:measure:txn:RelabelExpr(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:MetricInter
*/
lb:measure:txn:MetricInter(_) -> .lb:measure:txn:MetricInterConstructor[i]=x ->int(i), lb:measure:txn:MetricInter(x).
lb:measure:txn:MetricInter_metric[x] = y -> lb:measure:txn:MetricInter(x), string(y).
lb:measure:txn:MetricInter_inter[x] = y -> lb:measure:txn:MetricInter(x), lb:measure:txn:Intersection(y).
/*
* message lb:measure:txn:EditabilityRequest
*/
lb:measure:txn:EditabilityRequest(_) -> .lb:measure:txn:EditabilityRequestConstructor[i]=x ->int(i), lb:measure:txn:EditabilityRequest(x).
lb:measure:txn:EditabilityRequest_edited(x, y) -> lb:measure:txn:EditabilityRequest(x), lb:measure:txn:MetricInter(y).
lb:measure:txn:EditabilityRequest_visible(x, y) -> lb:measure:txn:EditabilityRequest(x), lb:measure:txn:MetricInter(y).
/*
* message lb:measure:txn:EditabilityResponse
*/
lb:measure:txn:EditabilityResponse(_) -> .lb:measure:txn:EditabilityResponseConstructor[i]=x ->int(i), lb:measure:txn:EditabilityResponse(x).
lb:measure:txn:EditabilityResponse_consistent[x] = y -> lb:measure:txn:EditabilityResponse(x), boolean(y).
lb:measure:txn:EditabilityResponse_editable(x, y) -> lb:measure:txn:EditabilityResponse(x), lb:measure:txn:MetricInter(y).
/*
* message lb:measure:txn:UpdateRequest
*/
lb:measure:txn:UpdateRequest(_) -> .lb:measure:txn:UpdateRequestConstructor[i]=x ->int(i), lb:measure:txn:UpdateRequest(x).
lb:measure:txn:UpdateRequest_expr[x] = y -> lb:measure:txn:UpdateRequest(x), lb:measure:txn:UpdateExpr(y).
lb:measure:txn:UpdateRequest_input[x] = y -> lb:measure:txn:UpdateRequest(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:MetricLock
*/
lb:measure:txn:MetricLock(_) -> .lb:measure:txn:MetricLockConstructor[i]=x ->int(i), lb:measure:txn:MetricLock(x).
lb:measure:txn:MetricLock_metric[x] = y -> lb:measure:txn:MetricLock(x), string(y).
lb:measure:txn:MetricLock_expr[x] = y -> lb:measure:txn:MetricLock(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:MetricLock_expr_str[x] = y -> lb:measure:txn:MetricLock(x), string(y).
lb:measure:txn:MetricLock_convertible[x] = y -> lb:measure:txn:MetricLock(x), boolean(y).
/*
* message lb:measure:txn:DimensionLock
*/
lb:measure:txn:DimensionLock(_) -> .lb:measure:txn:DimensionLockConstructor[i]=x ->int(i), lb:measure:txn:DimensionLock(x).
lb:measure:txn:DimensionLock_label[x] = y -> lb:measure:txn:DimensionLock(x), string(y).
lb:measure:txn:DimensionLock_dimension[x] = y -> lb:measure:txn:DimensionLock(x), string(y).
lb:measure:txn:DimensionLock_expr[x] = y -> lb:measure:txn:DimensionLock(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:DimensionLock_expr_str[x] = y -> lb:measure:txn:DimensionLock(x), string(y).
/*
* message lb:measure:txn:Inverse
*/
lb:measure:txn:Inverse(_) -> .lb:measure:txn:InverseConstructor[i]=x ->int(i), lb:measure:txn:Inverse(x).
lb:measure:txn:Inverse_metric[x] = y -> lb:measure:txn:Inverse(x), string(y).
lb:measure:txn:Inverse_expr[x] = y -> lb:measure:txn:Inverse(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:Inverse_expr_str[x] = y -> lb:measure:txn:Inverse(x), string(y).
/*
* message lb:measure:txn:InverseGroup
*/
lb:measure:txn:InverseGroup(_) -> .lb:measure:txn:InverseGroupConstructor[i]=x ->int(i), lb:measure:txn:InverseGroup(x).
lb:measure:txn:InverseGroup_metric[x] = y -> lb:measure:txn:InverseGroup(x), string(y).
lb:measure:txn:InverseGroup_inverse(x, y) -> lb:measure:txn:InverseGroup(x), lb:measure:txn:Inverse(y).
/*
* message lb:measure:txn:UpdateExpr
*/
lb:measure:txn:UpdateExpr(_) -> .lb:measure:txn:UpdateExprConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr(x).
lb:measure:txn:UpdateExpr_kind[x] = y -> lb:measure:txn:UpdateExpr(x), lb:measure:txn:UpdateExpr:Kind(y).
lb:measure:txn:UpdateExpr_metric[x] = y -> lb:measure:txn:UpdateExpr(x), string(y).
lb:measure:txn:UpdateExpr_target[x] = y -> lb:measure:txn:UpdateExpr(x), lb:measure:txn:UpdateExpr:Target(y).
lb:measure:txn:UpdateExpr_signature[x] = y -> lb:measure:txn:UpdateExpr(x), lb:measure:txn:BaseSignature(y).
lb:measure:txn:UpdateExpr_transform[x, i] = y -> lb:measure:txn:UpdateExpr(x), int(i), lb:measure:txn:UpdateExpr:Transform(y).
/*
* message lb:measure:txn:PartitionResponse
*/
lb:measure:txn:PartitionResponse(_) -> .lb:measure:txn:PartitionResponseConstructor[i]=x ->int(i), lb:measure:txn:PartitionResponse(x).
lb:measure:txn:PartitionResponse_broadcast[x] = y -> lb:measure:txn:PartitionResponse(x), boolean(y).
lb:measure:txn:PartitionResponse_partitionID(x, y) -> lb:measure:txn:PartitionResponse(x), string(y).
/*
* message lb:measure:txn:TypeDefinition
*/
lb:measure:txn:TypeDefinition(_) -> .lb:measure:txn:TypeDefinitionConstructor[i]=x ->int(i), lb:measure:txn:TypeDefinition(x).
lb:measure:txn:TypeDefinition_type[x] = y -> lb:measure:txn:TypeDefinition(x), string(y).
lb:measure:txn:TypeDefinition_backing_type[x] = y -> lb:measure:txn:TypeDefinition(x), lb:measure:txn:Type(y).
lb:measure:txn:TypeDefinition_conversion_pred[x] = y -> lb:measure:txn:TypeDefinition(x), string(y).
lang:constructor(`lb:measure:txn:ProblemConstructor).
lang:pulse(`lb:measure:txn:ProblemConstructor).
lang:pulse(`lb:measure:txn:Problem).
lang:pulse(`lb:measure:txn:Problem_code).
lang:pulse(`lb:measure:txn:Problem_severity).
lang:pulse(`lb:measure:txn:Problem_text).
lang:pulse(`lb:measure:txn:Problem_region).
lang:pulse(`lb:measure:txn:Problem_stack).
lang:constructor(`lb:measure:txn:TypeConstructor).
lang:pulse(`lb:measure:txn:TypeConstructor).
lang:pulse(`lb:measure:txn:Type).
lang:pulse(`lb:measure:txn:Type_kind).
lang:pulse(`lb:measure:txn:Type_named).
lang:constructor(`lb:measure:txn:MeasureModelConstructor).
lang:pulse(`lb:measure:txn:MeasureModelConstructor).
lang:pulse(`lb:measure:txn:MeasureModel).
lang:pulse(`lb:measure:txn:MeasureModel_name).
lang:pulse(`lb:measure:txn:MeasureModel_dimension).
lang:pulse(`lb:measure:txn:MeasureModel_metric).
lang:pulse(`lb:measure:txn:MeasureModel_multi_dim_level_map).
lang:pulse(`lb:measure:txn:MeasureModel_slide).
lang:pulse(`lb:measure:txn:MeasureModel_operator).
lang:pulse(`lb:measure:txn:MeasureModel_subst).
lang:pulse(`lb:measure:txn:MeasureModel_key_order).
lang:pulse(`lb:measure:txn:MeasureModel_runtime_var_order).
lang:pulse(`lb:measure:txn:MeasureModel_aggregation).
lang:pulse(`lb:measure:txn:MeasureModel_spread).
lang:pulse(`lb:measure:txn:MeasureModel_metric_lock).
lang:pulse(`lb:measure:txn:MeasureModel_dimension_lock).
lang:pulse(`lb:measure:txn:MeasureModel_type).
lang:pulse(`lb:measure:txn:MeasureModel_complete_model).
lang:constructor(`lb:measure:txn:VarOrderConstructor).
lang:pulse(`lb:measure:txn:VarOrderConstructor).
lang:pulse(`lb:measure:txn:VarOrder).
lang:pulse(`lb:measure:txn:VarOrder_pattern).
lang:pulse(`lb:measure:txn:VarOrder_order).
lang:constructor(`lb:measure:txn:OpDefConstructor).
lang:pulse(`lb:measure:txn:OpDefConstructor).
lang:pulse(`lb:measure:txn:OpDef).
lang:pulse(`lb:measure:txn:OpDef_name).
lang:pulse(`lb:measure:txn:OpDef_impl).
lang:pulse(`lb:measure:txn:OpDef_domain).
lang:pulse(`lb:measure:txn:OpDef_range).
lang:constructor(`lb:measure:txn:AggDefConstructor).
lang:pulse(`lb:measure:txn:AggDefConstructor).
lang:pulse(`lb:measure:txn:AggDef).
lang:pulse(`lb:measure:txn:AggDef_name).
lang:pulse(`lb:measure:txn:AggDef_method).
lang:constructor(`lb:measure:txn:SpreadDefConstructor).
lang:pulse(`lb:measure:txn:SpreadDefConstructor).
lang:pulse(`lb:measure:txn:SpreadDef).
lang:pulse(`lb:measure:txn:SpreadDef_name).
lang:pulse(`lb:measure:txn:SpreadDef_spread).
lang:constructor(`lb:measure:txn:MetricConstructor).
lang:pulse(`lb:measure:txn:MetricConstructor).
lang:pulse(`lb:measure:txn:Metric).
lang:pulse(`lb:measure:txn:Metric_name).
lang:pulse(`lb:measure:txn:Metric_signature).
lang:pulse(`lb:measure:txn:Metric_predicate).
lang:pulse(`lb:measure:txn:Metric_dialogue).
lang:pulse(`lb:measure:txn:Metric_expr).
lang:pulse(`lb:measure:txn:Metric_caption).
lang:pulse(`lb:measure:txn:Metric_agg_method).
lang:pulse(`lb:measure:txn:Metric_recalc).
lang:pulse(`lb:measure:txn:Metric_update_method).
lang:pulse(`lb:measure:txn:Metric_inverse).
lang:pulse(`lb:measure:txn:Metric_generate_inverses).
lang:constructor(`lb:measure:txn:SignatureConstructor).
lang:pulse(`lb:measure:txn:SignatureConstructor).
lang:pulse(`lb:measure:txn:Signature).
lang:pulse(`lb:measure:txn:Signature_kind).
lang:pulse(`lb:measure:txn:Signature_base_signature).
lang:constructor(`lb:measure:txn:BaseSignatureConstructor).
lang:pulse(`lb:measure:txn:BaseSignatureConstructor).
lang:pulse(`lb:measure:txn:BaseSignature).
lang:pulse(`lb:measure:txn:BaseSignature_intersection).
lang:pulse(`lb:measure:txn:BaseSignature_type).
lang:constructor(`lb:measure:txn:ValueTypeConstructor).
lang:pulse(`lb:measure:txn:ValueTypeConstructor).
lang:pulse(`lb:measure:txn:ValueType).
lang:pulse(`lb:measure:txn:ValueType_kind).
lang:pulse(`lb:measure:txn:ValueType_type).
lang:constructor(`lb:measure:txn:PredicateConstructor).
lang:pulse(`lb:measure:txn:PredicateConstructor).
lang:pulse(`lb:measure:txn:Predicate).
lang:pulse(`lb:measure:txn:Predicate_name).
lang:pulse(`lb:measure:txn:Predicate_stage).
lang:pulse(`lb:measure:txn:Predicate_delta).
lang:pulse(`lb:measure:txn:Predicate_volatile).
lang:pulse(`lb:measure:txn:Predicate_update_pred).
lang:pulse(`lb:measure:txn:Predicate_default_value).
lang:pulse(`lb:measure:txn:Predicate_relational).
lang:constructor(`lb:measure:txn:DialogueConstructor).
lang:pulse(`lb:measure:txn:DialogueConstructor).
lang:pulse(`lb:measure:txn:Dialogue).
lang:pulse(`lb:measure:txn:Dialogue_param).
lang:pulse(`lb:measure:txn:Dialogue_response_pred).
lang:pulse(`lb:measure:txn:Dialogue_block).
lang:constructor(`lb:measure:txn:RecalcConstructor).
lang:pulse(`lb:measure:txn:RecalcConstructor).
lang:pulse(`lb:measure:txn:Recalc).
lang:pulse(`lb:measure:txn:Recalc_rule_name).
lang:constructor(`lb:measure:txn:ExprMetricConstructor).
lang:pulse(`lb:measure:txn:ExprMetricConstructor).
lang:pulse(`lb:measure:txn:ExprMetric).
lang:pulse(`lb:measure:txn:ExprMetric_measure_str).
lang:pulse(`lb:measure:txn:ExprMetric_measure_expr).
lang:constructor(`lb:measure:txn:SlideConstructor).
lang:pulse(`lb:measure:txn:SlideConstructor).
lang:pulse(`lb:measure:txn:Slide).
lang:pulse(`lb:measure:txn:Slide_name).
lang:pulse(`lb:measure:txn:Slide_map).
lang:pulse(`lb:measure:txn:Slide_source_level).
lang:pulse(`lb:measure:txn:Slide_target_label).
lang:pulse(`lb:measure:txn:Slide_target_dimension).
lang:pulse(`lb:measure:txn:Slide_target_level).
lang:constructor(`lb:measure:txn:MultiDimensionalLevelMapConstructor).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMapConstructor).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMap).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMap_name).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMap_level_map_pred).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMap_source_inter).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMap_target_label).
lang:pulse(`lb:measure:txn:MultiDimensionalLevelMap_target_level).
lang:constructor(`lb:measure:txn:DimensionConstructor).
lang:pulse(`lb:measure:txn:DimensionConstructor).
lang:pulse(`lb:measure:txn:Dimension).
lang:pulse(`lb:measure:txn:Dimension_name).
lang:pulse(`lb:measure:txn:Dimension_level).
lang:pulse(`lb:measure:txn:Dimension_edge).
lang:pulse(`lb:measure:txn:Dimension_hierarchy).
lang:pulse(`lb:measure:txn:Dimension_default_hierarchy).
lang:pulse(`lb:measure:txn:Dimension_top_level).
lang:pulse(`lb:measure:txn:Dimension_unwinds).
lang:pulse(`lb:measure:txn:Dimension_caption).
lang:constructor(`lb:measure:txn:AttributeConstructor).
lang:pulse(`lb:measure:txn:AttributeConstructor).
lang:pulse(`lb:measure:txn:Attribute).
lang:pulse(`lb:measure:txn:Attribute_name).
lang:pulse(`lb:measure:txn:Attribute_predicate).
lang:pulse(`lb:measure:txn:Attribute_type).
lang:constructor(`lb:measure:txn:QualifiedLevelConstructor).
lang:pulse(`lb:measure:txn:QualifiedLevelConstructor).
lang:pulse(`lb:measure:txn:QualifiedLevel).
lang:pulse(`lb:measure:txn:QualifiedLevel_label).
lang:pulse(`lb:measure:txn:QualifiedLevel_dimension).
lang:pulse(`lb:measure:txn:QualifiedLevel_hierarchy).
lang:pulse(`lb:measure:txn:QualifiedLevel_level).
lang:constructor(`lb:measure:txn:IntersectionConstructor).
lang:pulse(`lb:measure:txn:IntersectionConstructor).
lang:pulse(`lb:measure:txn:Intersection).
lang:pulse(`lb:measure:txn:Intersection_qualified_level).
lang:pulse(`lb:measure:txn:Intersection_variable).
lang:pulse(`lb:measure:txn:Intersection_expr).
lang:pulse(`lb:measure:txn:Intersection_composite).
lang:pulse(`lb:measure:txn:Intersection_restriction).
lang:constructor(`lb:measure:txn:CompositeIntersectionConstructor).
lang:pulse(`lb:measure:txn:CompositeIntersectionConstructor).
lang:pulse(`lb:measure:txn:CompositeIntersection).
lang:pulse(`lb:measure:txn:CompositeIntersection_kind).
lang:pulse(`lb:measure:txn:CompositeIntersection_inter).
lang:constructor(`lb:measure:txn:RestrictionIntersectionConstructor).
lang:pulse(`lb:measure:txn:RestrictionIntersectionConstructor).
lang:pulse(`lb:measure:txn:RestrictionIntersection).
lang:pulse(`lb:measure:txn:RestrictionIntersection_label).
lang:pulse(`lb:measure:txn:RestrictionIntersection_inter).
lang:constructor(`lb:measure:txn:ExprSubstConstructor).
lang:pulse(`lb:measure:txn:ExprSubstConstructor).
lang:pulse(`lb:measure:txn:ExprSubst).
lang:pulse(`lb:measure:txn:ExprSubst_pred).
lang:pulse(`lb:measure:txn:ExprSubst_replacement_expr).
lang:pulse(`lb:measure:txn:ExprSubst_phase).
lang:pulse(`lb:measure:txn:ExprSubst_expr).
lang:pulse(`lb:measure:txn:ExprSubst_expr_str).
lang:constructor(`lb:measure:txn:RequestConstructor).
lang:pulse(`lb:measure:txn:RequestConstructor).
lang:pulse(`lb:measure:txn:Request).
lang:pulse(`lb:measure:txn:Request_admin_request).
lang:pulse(`lb:measure:txn:Request_relation).
lang:pulse(`lb:measure:txn:Request_query_request).
lang:pulse(`lb:measure:txn:Request_model_request).
lang:pulse(`lb:measure:txn:Request_install_request).
lang:pulse(`lb:measure:txn:Request_update_request).
lang:pulse(`lb:measure:txn:Request_editability_request).
lang:pulse(`lb:measure:txn:Request_metric_lock).
lang:pulse(`lb:measure:txn:Request_dimension_lock).
lang:pulse(`lb:measure:txn:Request_inverse).
lang:pulse(`lb:measure:txn:Request_fault_point).
lang:pulse(`lb:measure:txn:Request_profile).
lang:constructor(`lb:measure:txn:ModelRequestConstructor).
lang:pulse(`lb:measure:txn:ModelRequestConstructor).
lang:pulse(`lb:measure:txn:ModelRequest).
lang:constructor(`lb:measure:txn:AdminRequestConstructor).
lang:pulse(`lb:measure:txn:AdminRequestConstructor).
lang:pulse(`lb:measure:txn:AdminRequest).
lang:pulse(`lb:measure:txn:AdminRequest_kind).
lang:pulse(`lb:measure:txn:AdminRequest_log_level).
lang:pulse(`lb:measure:txn:AdminRequest_compile_format).
lang:pulse(`lb:measure:txn:AdminRequest_code_format).
lang:pulse(`lb:measure:txn:AdminRequest_emit_comments).
lang:pulse(`lb:measure:txn:AdminRequest_short_names).
lang:pulse(`lb:measure:txn:AdminRequest_query_after_fixpoint).
lang:pulse(`lb:measure:txn:AdminRequest_fatal_warnings).
lang:pulse(`lb:measure:txn:AdminRequest_default_value_agg).
lang:constructor(`lb:measure:txn:InstallRequestConstructor).
lang:pulse(`lb:measure:txn:InstallRequestConstructor).
lang:pulse(`lb:measure:txn:InstallRequest).
lang:pulse(`lb:measure:txn:InstallRequest_measure_expr).
lang:pulse(`lb:measure:txn:InstallRequest_measure_str).
lang:pulse(`lb:measure:txn:InstallRequest_rules).
lang:pulse(`lb:measure:txn:InstallRequest_limited_rewrites).
lang:constructor(`lb:measure:txn:QueryRequestConstructor).
lang:pulse(`lb:measure:txn:QueryRequestConstructor).
lang:pulse(`lb:measure:txn:QueryRequest).
lang:pulse(`lb:measure:txn:QueryRequest_report_name).
lang:pulse(`lb:measure:txn:QueryRequest_row_limit).
lang:pulse(`lb:measure:txn:QueryRequest_return_row_numbers).
lang:pulse(`lb:measure:txn:QueryRequest_key).
lang:pulse(`lb:measure:txn:QueryRequest_measure).
lang:pulse(`lb:measure:txn:QueryRequest_measure_str).
lang:pulse(`lb:measure:txn:QueryRequest_limited_rewrites).
lang:pulse(`lb:measure:txn:QueryRequest_default_values).
lang:pulse(`lb:measure:txn:QueryRequest_binary_decimal_columns).
lang:constructor(`lb:measure:txn:KeyRequestConstructor).
lang:pulse(`lb:measure:txn:KeyRequestConstructor).
lang:pulse(`lb:measure:txn:KeyRequest).
lang:pulse(`lb:measure:txn:KeyRequest_qualified_level).
lang:pulse(`lb:measure:txn:KeyRequest_attribute).
lang:constructor(`lb:measure:txn:RelationBindingConstructor).
lang:pulse(`lb:measure:txn:RelationBindingConstructor).
lang:pulse(`lb:measure:txn:RelationBinding).
lang:pulse(`lb:measure:txn:RelationBinding_param).
lang:pulse(`lb:measure:txn:RelationBinding_expr).
lang:constructor(`lb:measure:txn:ResponseConstructor).
lang:pulse(`lb:measure:txn:ResponseConstructor).
lang:pulse(`lb:measure:txn:Response).
lang:pulse(`lb:measure:txn:Response_report).
lang:pulse(`lb:measure:txn:Response_admin).
lang:pulse(`lb:measure:txn:Response_model).
lang:pulse(`lb:measure:txn:Response_editability).
lang:pulse(`lb:measure:txn:Response_profile).
lang:pulse(`lb:measure:txn:Response_problem).
lang:constructor(`lb:measure:txn:AdminResponseConstructor).
lang:pulse(`lb:measure:txn:AdminResponseConstructor).
lang:pulse(`lb:measure:txn:AdminResponse).
lang:pulse(`lb:measure:txn:AdminResponse_workspace).
lang:constructor(`lb:measure:txn:ReportConstructor).
lang:pulse(`lb:measure:txn:ReportConstructor).
lang:pulse(`lb:measure:txn:Report).
lang:pulse(`lb:measure:txn:Report_name).
lang:pulse(`lb:measure:txn:Report_report_column).
lang:constructor(`lb:measure:txn:ColumnConstructor).
lang:pulse(`lb:measure:txn:ColumnConstructor).
lang:pulse(`lb:measure:txn:Column).
lang:pulse(`lb:measure:txn:Column_bool_column).
lang:pulse(`lb:measure:txn:Column_int_column).
lang:pulse(`lb:measure:txn:Column_float_column).
lang:pulse(`lb:measure:txn:Column_string_column).
lang:pulse(`lb:measure:txn:Column_decimal_column).
lang:constructor(`lb:measure:txn:BoolColumnConstructor).
lang:pulse(`lb:measure:txn:BoolColumnConstructor).
lang:pulse(`lb:measure:txn:BoolColumn).
lang:pulse(`lb:measure:txn:BoolColumn_defaultValue).
lang:pulse(`lb:measure:txn:BoolColumn_value).
lang:constructor(`lb:measure:txn:IntColumnConstructor).
lang:pulse(`lb:measure:txn:IntColumnConstructor).
lang:pulse(`lb:measure:txn:IntColumn).
lang:pulse(`lb:measure:txn:IntColumn_defaultValue).
lang:pulse(`lb:measure:txn:IntColumn_value).
lang:constructor(`lb:measure:txn:FloatColumnConstructor).
lang:pulse(`lb:measure:txn:FloatColumnConstructor).
lang:pulse(`lb:measure:txn:FloatColumn).
lang:pulse(`lb:measure:txn:FloatColumn_defaultValue).
lang:pulse(`lb:measure:txn:FloatColumn_value).
lang:constructor(`lb:measure:txn:StringColumnConstructor).
lang:pulse(`lb:measure:txn:StringColumnConstructor).
lang:pulse(`lb:measure:txn:StringColumn).
lang:pulse(`lb:measure:txn:StringColumn_defaultValue).
lang:pulse(`lb:measure:txn:StringColumn_value).
lang:constructor(`lb:measure:txn:DecimalColumnConstructor).
lang:pulse(`lb:measure:txn:DecimalColumnConstructor).
lang:pulse(`lb:measure:txn:DecimalColumn).
lang:pulse(`lb:measure:txn:DecimalColumn_defaultValue).
lang:pulse(`lb:measure:txn:DecimalColumn_value).
lang:pulse(`lb:measure:txn:DecimalColumn_negativeDefault).
lang:pulse(`lb:measure:txn:DecimalColumn_integralDefault).
lang:pulse(`lb:measure:txn:DecimalColumn_fractionDefault).
lang:pulse(`lb:measure:txn:DecimalColumn_negative).
lang:pulse(`lb:measure:txn:DecimalColumn_integral_digit).
lang:pulse(`lb:measure:txn:DecimalColumn_fraction_digit).
lang:constructor(`lb:measure:txn:AnnotationConstructor).
lang:pulse(`lb:measure:txn:AnnotationConstructor).
lang:pulse(`lb:measure:txn:Annotation).
lang:pulse(`lb:measure:txn:Annotation_name).
lang:pulse(`lb:measure:txn:Annotation_values).
lang:constructor(`lb:measure:txn:MeasureExprConstructor).
lang:pulse(`lb:measure:txn:MeasureExprConstructor).
lang:pulse(`lb:measure:txn:MeasureExpr).
lang:pulse(`lb:measure:txn:MeasureExpr_kind).
lang:pulse(`lb:measure:txn:MeasureExpr_str).
lang:pulse(`lb:measure:txn:MeasureExpr_metric).
lang:pulse(`lb:measure:txn:MeasureExpr_aggregation).
lang:pulse(`lb:measure:txn:MeasureExpr_filter).
lang:pulse(`lb:measure:txn:MeasureExpr_composite).
lang:pulse(`lb:measure:txn:MeasureExpr_attribute).
lang:pulse(`lb:measure:txn:MeasureExpr_op).
lang:pulse(`lb:measure:txn:MeasureExpr_widen).
lang:pulse(`lb:measure:txn:MeasureExpr_dice).
lang:pulse(`lb:measure:txn:MeasureExpr_drop).
lang:pulse(`lb:measure:txn:MeasureExpr_difference).
lang:pulse(`lb:measure:txn:MeasureExpr_demote).
lang:pulse(`lb:measure:txn:MeasureExpr_promote).
lang:pulse(`lb:measure:txn:MeasureExpr_prev).
lang:pulse(`lb:measure:txn:MeasureExpr_override).
lang:pulse(`lb:measure:txn:MeasureExpr_delta).
lang:pulse(`lb:measure:txn:MeasureExpr_param).
lang:pulse(`lb:measure:txn:MeasureExpr_split).
lang:pulse(`lb:measure:txn:MeasureExpr_relabel).
lang:pulse(`lb:measure:txn:MeasureExpr_variable).
lang:pulse(`lb:measure:txn:MeasureExpr_abstraction).
lang:pulse(`lb:measure:txn:MeasureExpr_application).
lang:pulse(`lb:measure:txn:MeasureExpr_literal).
lang:pulse(`lb:measure:txn:MeasureExpr_cast).
lang:pulse(`lb:measure:txn:MeasureExpr_region).
lang:pulse(`lb:measure:txn:MeasureExpr_annotation).
lang:constructor(`lb:measure:txn:VarExprConstructor).
lang:pulse(`lb:measure:txn:VarExprConstructor).
lang:pulse(`lb:measure:txn:VarExpr).
lang:pulse(`lb:measure:txn:VarExpr_name).
lang:constructor(`lb:measure:txn:AbsExprConstructor).
lang:pulse(`lb:measure:txn:AbsExprConstructor).
lang:pulse(`lb:measure:txn:AbsExpr).
lang:pulse(`lb:measure:txn:AbsExpr_inter_arg).
lang:pulse(`lb:measure:txn:AbsExpr_expr_arg).
lang:pulse(`lb:measure:txn:AbsExpr_body).
lang:constructor(`lb:measure:txn:AppExprConstructor).
lang:pulse(`lb:measure:txn:AppExprConstructor).
lang:pulse(`lb:measure:txn:AppExpr).
lang:pulse(`lb:measure:txn:AppExpr_abstraction).
lang:pulse(`lb:measure:txn:AppExpr_inter_arg).
lang:pulse(`lb:measure:txn:AppExpr_expr_arg).
lang:constructor(`lb:measure:txn:LiteralExprConstructor).
lang:pulse(`lb:measure:txn:LiteralExprConstructor).
lang:pulse(`lb:measure:txn:LiteralExpr).
lang:pulse(`lb:measure:txn:LiteralExpr_kind).
lang:pulse(`lb:measure:txn:LiteralExpr_signature).
lang:pulse(`lb:measure:txn:LiteralExpr_column).
lang:constructor(`lb:measure:txn:WidenExprConstructor).
lang:pulse(`lb:measure:txn:WidenExprConstructor).
lang:pulse(`lb:measure:txn:WidenExpr).
lang:pulse(`lb:measure:txn:WidenExpr_expr).
lang:pulse(`lb:measure:txn:WidenExpr_inter).
lang:constructor(`lb:measure:txn:DropExprConstructor).
lang:pulse(`lb:measure:txn:DropExprConstructor).
lang:pulse(`lb:measure:txn:DropExpr).
lang:pulse(`lb:measure:txn:DropExpr_expr).
lang:constructor(`lb:measure:txn:OverrideExprConstructor).
lang:pulse(`lb:measure:txn:OverrideExprConstructor).
lang:pulse(`lb:measure:txn:OverrideExpr).
lang:pulse(`lb:measure:txn:OverrideExpr_expr).
lang:constructor(`lb:measure:txn:PrevExprConstructor).
lang:pulse(`lb:measure:txn:PrevExprConstructor).
lang:pulse(`lb:measure:txn:PrevExpr).
lang:pulse(`lb:measure:txn:PrevExpr_expr).
lang:constructor(`lb:measure:txn:DeltaExprConstructor).
lang:pulse(`lb:measure:txn:DeltaExprConstructor).
lang:pulse(`lb:measure:txn:DeltaExpr).
lang:pulse(`lb:measure:txn:DeltaExpr_kind).
lang:pulse(`lb:measure:txn:DeltaExpr_expr).
lang:constructor(`lb:measure:txn:DemoteExprConstructor).
lang:pulse(`lb:measure:txn:DemoteExprConstructor).
lang:pulse(`lb:measure:txn:DemoteExpr).
lang:pulse(`lb:measure:txn:DemoteExpr_expr).
lang:pulse(`lb:measure:txn:DemoteExpr_dimension).
lang:pulse(`lb:measure:txn:DemoteExpr_label).
lang:constructor(`lb:measure:txn:PromoteExprConstructor).
lang:pulse(`lb:measure:txn:PromoteExprConstructor).
lang:pulse(`lb:measure:txn:PromoteExpr).
lang:pulse(`lb:measure:txn:PromoteExpr_expr).
lang:pulse(`lb:measure:txn:PromoteExpr_label).
lang:constructor(`lb:measure:txn:DifferenceExprConstructor).
lang:pulse(`lb:measure:txn:DifferenceExprConstructor).
lang:pulse(`lb:measure:txn:DifferenceExpr).
lang:pulse(`lb:measure:txn:DifferenceExpr_left).
lang:pulse(`lb:measure:txn:DifferenceExpr_right).
lang:constructor(`lb:measure:txn:DiceExprConstructor).
lang:pulse(`lb:measure:txn:DiceExprConstructor).
lang:pulse(`lb:measure:txn:DiceExpr).
lang:pulse(`lb:measure:txn:DiceExpr_expr).
lang:pulse(`lb:measure:txn:DiceExpr_dicer).
lang:pulse(`lb:measure:txn:DiceExpr_is_disjunction).
lang:constructor(`lb:measure:txn:OpConstructor).
lang:pulse(`lb:measure:txn:OpConstructor).
lang:pulse(`lb:measure:txn:Op).
lang:pulse(`lb:measure:txn:Op_kind).
lang:pulse(`lb:measure:txn:Op_name).
lang:constructor(`lb:measure:txn:OpExprConstructor).
lang:pulse(`lb:measure:txn:OpExprConstructor).
lang:pulse(`lb:measure:txn:OpExpr).
lang:pulse(`lb:measure:txn:OpExpr_op).
lang:pulse(`lb:measure:txn:OpExpr_expr).
lang:constructor(`lb:measure:txn:CastExprConstructor).
lang:pulse(`lb:measure:txn:CastExprConstructor).
lang:pulse(`lb:measure:txn:CastExpr).
lang:pulse(`lb:measure:txn:CastExpr_expr).
lang:pulse(`lb:measure:txn:CastExpr_type).
lang:constructor(`lb:measure:txn:CompositeExprConstructor).
lang:pulse(`lb:measure:txn:CompositeExprConstructor).
lang:pulse(`lb:measure:txn:CompositeExpr).
lang:pulse(`lb:measure:txn:CompositeExpr_kind).
lang:pulse(`lb:measure:txn:CompositeExpr_expr).
lang:constructor(`lb:measure:txn:AttributeExprConstructor).
lang:pulse(`lb:measure:txn:AttributeExprConstructor).
lang:pulse(`lb:measure:txn:AttributeExpr).
lang:pulse(`lb:measure:txn:AttributeExpr_qualified_level).
lang:pulse(`lb:measure:txn:AttributeExpr_attribute).
lang:constructor(`lb:measure:txn:ParamExprConstructor).
lang:pulse(`lb:measure:txn:ParamExprConstructor).
lang:pulse(`lb:measure:txn:ParamExpr).
lang:pulse(`lb:measure:txn:ParamExpr_name).
lang:pulse(`lb:measure:txn:ParamExpr_signature).
lang:constructor(`lb:measure:txn:MetricExprConstructor).
lang:pulse(`lb:measure:txn:MetricExprConstructor).
lang:pulse(`lb:measure:txn:MetricExpr).
lang:pulse(`lb:measure:txn:MetricExpr_name).
lang:pulse(`lb:measure:txn:MetricExpr_metric).
lang:constructor(`lb:measure:txn:FilterExprConstructor).
lang:pulse(`lb:measure:txn:FilterExprConstructor).
lang:pulse(`lb:measure:txn:FilterExpr).
lang:pulse(`lb:measure:txn:FilterExpr_expr).
lang:pulse(`lb:measure:txn:FilterExpr_comparison).
lang:pulse(`lb:measure:txn:FilterExpr_is_disjunction).
lang:constructor(`lb:measure:txn:ComparisonConstructor).
lang:pulse(`lb:measure:txn:ComparisonConstructor).
lang:pulse(`lb:measure:txn:Comparison).
lang:pulse(`lb:measure:txn:Comparison_op).
lang:pulse(`lb:measure:txn:Comparison_expr).
lang:constructor(`lb:measure:txn:AggExprConstructor).
lang:pulse(`lb:measure:txn:AggExprConstructor).
lang:pulse(`lb:measure:txn:AggExpr).
lang:pulse(`lb:measure:txn:AggExpr_method).
lang:pulse(`lb:measure:txn:AggExpr_expr).
lang:pulse(`lb:measure:txn:AggExpr_grouping).
lang:pulse(`lb:measure:txn:AggExpr_inter).
lang:constructor(`lb:measure:txn:LabelMapConstructor).
lang:pulse(`lb:measure:txn:LabelMapConstructor).
lang:pulse(`lb:measure:txn:LabelMap).
lang:pulse(`lb:measure:txn:LabelMap_source).
lang:pulse(`lb:measure:txn:LabelMap_target).
lang:constructor(`lb:measure:txn:SplitExprConstructor).
lang:pulse(`lb:measure:txn:SplitExprConstructor).
lang:pulse(`lb:measure:txn:SplitExpr).
lang:pulse(`lb:measure:txn:SplitExpr_map).
lang:pulse(`lb:measure:txn:SplitExpr_expr).
lang:constructor(`lb:measure:txn:RelabelExprConstructor).
lang:pulse(`lb:measure:txn:RelabelExprConstructor).
lang:pulse(`lb:measure:txn:RelabelExpr).
lang:pulse(`lb:measure:txn:RelabelExpr_map).
lang:pulse(`lb:measure:txn:RelabelExpr_expr).
lang:constructor(`lb:measure:txn:MetricInterConstructor).
lang:pulse(`lb:measure:txn:MetricInterConstructor).
lang:pulse(`lb:measure:txn:MetricInter).
lang:pulse(`lb:measure:txn:MetricInter_metric).
lang:pulse(`lb:measure:txn:MetricInter_inter).
lang:constructor(`lb:measure:txn:EditabilityRequestConstructor).
lang:pulse(`lb:measure:txn:EditabilityRequestConstructor).
lang:pulse(`lb:measure:txn:EditabilityRequest).
lang:pulse(`lb:measure:txn:EditabilityRequest_edited).
lang:pulse(`lb:measure:txn:EditabilityRequest_visible).
lang:constructor(`lb:measure:txn:EditabilityResponseConstructor).
lang:pulse(`lb:measure:txn:EditabilityResponseConstructor).
lang:pulse(`lb:measure:txn:EditabilityResponse).
lang:pulse(`lb:measure:txn:EditabilityResponse_consistent).
lang:pulse(`lb:measure:txn:EditabilityResponse_editable).
lang:constructor(`lb:measure:txn:UpdateRequestConstructor).
lang:pulse(`lb:measure:txn:UpdateRequestConstructor).
lang:pulse(`lb:measure:txn:UpdateRequest).
lang:pulse(`lb:measure:txn:UpdateRequest_expr).
lang:pulse(`lb:measure:txn:UpdateRequest_input).
lang:constructor(`lb:measure:txn:MetricLockConstructor).
lang:pulse(`lb:measure:txn:MetricLockConstructor).
lang:pulse(`lb:measure:txn:MetricLock).
lang:pulse(`lb:measure:txn:MetricLock_metric).
lang:pulse(`lb:measure:txn:MetricLock_expr).
lang:pulse(`lb:measure:txn:MetricLock_expr_str).
lang:pulse(`lb:measure:txn:MetricLock_convertible).
lang:constructor(`lb:measure:txn:DimensionLockConstructor).
lang:pulse(`lb:measure:txn:DimensionLockConstructor).
lang:pulse(`lb:measure:txn:DimensionLock).
lang:pulse(`lb:measure:txn:DimensionLock_label).
lang:pulse(`lb:measure:txn:DimensionLock_dimension).
lang:pulse(`lb:measure:txn:DimensionLock_expr).
lang:pulse(`lb:measure:txn:DimensionLock_expr_str).
lang:constructor(`lb:measure:txn:InverseConstructor).
lang:pulse(`lb:measure:txn:InverseConstructor).
lang:pulse(`lb:measure:txn:Inverse).
lang:pulse(`lb:measure:txn:Inverse_metric).
lang:pulse(`lb:measure:txn:Inverse_expr).
lang:pulse(`lb:measure:txn:Inverse_expr_str).
lang:constructor(`lb:measure:txn:InverseGroupConstructor).
lang:pulse(`lb:measure:txn:InverseGroupConstructor).
lang:pulse(`lb:measure:txn:InverseGroup).
lang:pulse(`lb:measure:txn:InverseGroup_metric).
lang:pulse(`lb:measure:txn:InverseGroup_inverse).
lang:constructor(`lb:measure:txn:UpdateExprConstructor).
lang:pulse(`lb:measure:txn:UpdateExprConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr).
lang:pulse(`lb:measure:txn:UpdateExpr_kind).
lang:pulse(`lb:measure:txn:UpdateExpr_metric).
lang:pulse(`lb:measure:txn:UpdateExpr_target).
lang:pulse(`lb:measure:txn:UpdateExpr_signature).
lang:pulse(`lb:measure:txn:UpdateExpr_transform).
lang:constructor(`lb:measure:txn:PartitionResponseConstructor).
lang:pulse(`lb:measure:txn:PartitionResponseConstructor).
lang:pulse(`lb:measure:txn:PartitionResponse).
lang:pulse(`lb:measure:txn:PartitionResponse_broadcast).
lang:pulse(`lb:measure:txn:PartitionResponse_partitionID).
lang:constructor(`lb:measure:txn:TypeDefinitionConstructor).
lang:pulse(`lb:measure:txn:TypeDefinitionConstructor).
lang:pulse(`lb:measure:txn:TypeDefinition).
lang:pulse(`lb:measure:txn:TypeDefinition_type).
lang:pulse(`lb:measure:txn:TypeDefinition_backing_type).
lang:pulse(`lb:measure:txn:TypeDefinition_conversion_pred).

/*
 * lb:measure:txn:AdminRequest
 */

/**
 * enum lb:measure:txn:AdminRequest:Kind
 */
lb:measure:txn:AdminRequest:Kind(x) -> .
lb:measure:txn:AdminRequest:Kind_enum[s]=x -> string(s), lb:measure:txn:AdminRequest:Kind(x).
lb:measure:txn:AdminRequest:Kind_value[x]=s -> lb:measure:txn:AdminRequest:Kind(x), string(s).
lang:constructor(`lb:measure:txn:AdminRequest:Kind_enum).
lb:measure:txn:AdminRequest:Kind_enum[s]=_ -> s = "RESTART"; s = "WORKSPACE"; s = "CONFIGURE"; s = "CLEAR_CACHED_LOGIC".
lb:measure:txn:AdminRequest:Kind(x), lb:measure:txn:AdminRequest:Kind_enum["RESTART"]=x <- .
lb:measure:txn:AdminRequest:Kind(x), lb:measure:txn:AdminRequest:Kind_enum["WORKSPACE"]=x <- .
lb:measure:txn:AdminRequest:Kind(x), lb:measure:txn:AdminRequest:Kind_enum["CONFIGURE"]=x <- .
lb:measure:txn:AdminRequest:Kind(x), lb:measure:txn:AdminRequest:Kind_enum["CLEAR_CACHED_LOGIC"]=x <- .
lb:measure:txn:AdminRequest:Kind_value[x]=s <- lb:measure:txn:AdminRequest:Kind_enum[s]=x.
lb:measure:txn:AdminRequest:Kind_value[x]=s -> lb:measure:txn:AdminRequest:Kind_enum[s]=x.

/*
 * lb:measure:txn:AggExpr
 */
/*
* message lb:measure:txn:AggExpr:Grouping
*/
lb:measure:txn:AggExpr:Grouping(_) -> .lb:measure:txn:AggExpr:GroupingConstructor[i]=x ->int(i), lb:measure:txn:AggExpr:Grouping(x).
lb:measure:txn:AggExpr:Grouping_kind[x] = y -> lb:measure:txn:AggExpr:Grouping(x), lb:measure:txn:AggExpr:Grouping:Kind(y).
lb:measure:txn:AggExpr:Grouping_label[x] = y -> lb:measure:txn:AggExpr:Grouping(x), string(y).
lb:measure:txn:AggExpr:Grouping_dimension[x] = y -> lb:measure:txn:AggExpr:Grouping(x), string(y).
lb:measure:txn:AggExpr:Grouping_hierarchy[x] = y -> lb:measure:txn:AggExpr:Grouping(x), string(y).
lb:measure:txn:AggExpr:Grouping_level[x] = y -> lb:measure:txn:AggExpr:Grouping(x), string(y).
lb:measure:txn:AggExpr:Grouping_multi_dim_map[x] = y -> lb:measure:txn:AggExpr:Grouping(x), string(y).
/*
* message lb:measure:txn:AggExpr:Method
*/
lb:measure:txn:AggExpr:Method(_) -> .lb:measure:txn:AggExpr:MethodConstructor[i]=x ->int(i), lb:measure:txn:AggExpr:Method(x).
lb:measure:txn:AggExpr:Method_primitive[x] = y -> lb:measure:txn:AggExpr:Method(x), lb:measure:txn:AggExpr:Method:Primitive(y).
lb:measure:txn:AggExpr:Method_named[x] = y -> lb:measure:txn:AggExpr:Method(x), string(y).
lb:measure:txn:AggExpr:Method_composite[x, i] = y -> lb:measure:txn:AggExpr:Method(x), int(i), lb:measure:txn:AggExpr:Method:CompositeComponent(y).
lb:measure:txn:AggExpr:Method_header_sort_level[x] = y -> lb:measure:txn:AggExpr:Method(x), lb:measure:txn:QualifiedLevel(y).
lang:constructor(`lb:measure:txn:AggExpr:GroupingConstructor).
lang:pulse(`lb:measure:txn:AggExpr:GroupingConstructor).
lang:pulse(`lb:measure:txn:AggExpr:Grouping).
lang:pulse(`lb:measure:txn:AggExpr:Grouping_kind).
lang:pulse(`lb:measure:txn:AggExpr:Grouping_label).
lang:pulse(`lb:measure:txn:AggExpr:Grouping_dimension).
lang:pulse(`lb:measure:txn:AggExpr:Grouping_hierarchy).
lang:pulse(`lb:measure:txn:AggExpr:Grouping_level).
lang:pulse(`lb:measure:txn:AggExpr:Grouping_multi_dim_map).
lang:constructor(`lb:measure:txn:AggExpr:MethodConstructor).
lang:pulse(`lb:measure:txn:AggExpr:MethodConstructor).
lang:pulse(`lb:measure:txn:AggExpr:Method).
lang:pulse(`lb:measure:txn:AggExpr:Method_primitive).
lang:pulse(`lb:measure:txn:AggExpr:Method_named).
lang:pulse(`lb:measure:txn:AggExpr:Method_composite).
lang:pulse(`lb:measure:txn:AggExpr:Method_header_sort_level).

/*
 * lb:measure:txn:DeltaExpr
 */

/**
 * enum lb:measure:txn:DeltaExpr:Kind
 */
lb:measure:txn:DeltaExpr:Kind(x) -> .
lb:measure:txn:DeltaExpr:Kind_enum[s]=x -> string(s), lb:measure:txn:DeltaExpr:Kind(x).
lb:measure:txn:DeltaExpr:Kind_value[x]=s -> lb:measure:txn:DeltaExpr:Kind(x), string(s).
lang:constructor(`lb:measure:txn:DeltaExpr:Kind_enum).
lb:measure:txn:DeltaExpr:Kind_enum[s]=_ -> s = "ASSERTION"; s = "RETRACTION".
lb:measure:txn:DeltaExpr:Kind(x), lb:measure:txn:DeltaExpr:Kind_enum["ASSERTION"]=x <- .
lb:measure:txn:DeltaExpr:Kind(x), lb:measure:txn:DeltaExpr:Kind_enum["RETRACTION"]=x <- .
lb:measure:txn:DeltaExpr:Kind_value[x]=s <- lb:measure:txn:DeltaExpr:Kind_enum[s]=x.
lb:measure:txn:DeltaExpr:Kind_value[x]=s -> lb:measure:txn:DeltaExpr:Kind_enum[s]=x.

/*
 * lb:measure:txn:Type
 */

/**
 * enum lb:measure:txn:Type:Kind
 */
lb:measure:txn:Type:Kind(x) -> .
lb:measure:txn:Type:Kind_enum[s]=x -> string(s), lb:measure:txn:Type:Kind(x).
lb:measure:txn:Type:Kind_value[x]=s -> lb:measure:txn:Type:Kind(x), string(s).
lang:constructor(`lb:measure:txn:Type:Kind_enum).
lb:measure:txn:Type:Kind_enum[s]=_ -> s = "STRING"; s = "INT"; s = "FLOAT"; s = "DECIMAL"; s = "BOOLEAN"; s = "NAMED".
lb:measure:txn:Type:Kind(x), lb:measure:txn:Type:Kind_enum["STRING"]=x <- .
lb:measure:txn:Type:Kind(x), lb:measure:txn:Type:Kind_enum["INT"]=x <- .
lb:measure:txn:Type:Kind(x), lb:measure:txn:Type:Kind_enum["FLOAT"]=x <- .
lb:measure:txn:Type:Kind(x), lb:measure:txn:Type:Kind_enum["DECIMAL"]=x <- .
lb:measure:txn:Type:Kind(x), lb:measure:txn:Type:Kind_enum["BOOLEAN"]=x <- .
lb:measure:txn:Type:Kind(x), lb:measure:txn:Type:Kind_enum["NAMED"]=x <- .
lb:measure:txn:Type:Kind_value[x]=s <- lb:measure:txn:Type:Kind_enum[s]=x.
lb:measure:txn:Type:Kind_value[x]=s -> lb:measure:txn:Type:Kind_enum[s]=x.

/*
 * lb:measure:txn:LiteralExpr
 */

/**
 * enum lb:measure:txn:LiteralExpr:Kind
 */
lb:measure:txn:LiteralExpr:Kind(x) -> .
lb:measure:txn:LiteralExpr:Kind_enum[s]=x -> string(s), lb:measure:txn:LiteralExpr:Kind(x).
lb:measure:txn:LiteralExpr:Kind_value[x]=s -> lb:measure:txn:LiteralExpr:Kind(x), string(s).
lang:constructor(`lb:measure:txn:LiteralExpr:Kind_enum).
lb:measure:txn:LiteralExpr:Kind_enum[s]=_ -> s = "GENERAL"; s = "TOP_SINGLETON".
lb:measure:txn:LiteralExpr:Kind(x), lb:measure:txn:LiteralExpr:Kind_enum["GENERAL"]=x <- .
lb:measure:txn:LiteralExpr:Kind(x), lb:measure:txn:LiteralExpr:Kind_enum["TOP_SINGLETON"]=x <- .
lb:measure:txn:LiteralExpr:Kind_value[x]=s <- lb:measure:txn:LiteralExpr:Kind_enum[s]=x.
lb:measure:txn:LiteralExpr:Kind_value[x]=s -> lb:measure:txn:LiteralExpr:Kind_enum[s]=x.

/*
 * lb:measure:txn:AbsExpr
 */
/*
* message lb:measure:txn:AbsExpr:ExprArgument
*/
lb:measure:txn:AbsExpr:ExprArgument(_) -> .lb:measure:txn:AbsExpr:ExprArgumentConstructor[i]=x ->int(i), lb:measure:txn:AbsExpr:ExprArgument(x).
lb:measure:txn:AbsExpr:ExprArgument_name[x] = y -> lb:measure:txn:AbsExpr:ExprArgument(x), string(y).
lb:measure:txn:AbsExpr:ExprArgument_expr[x] = y -> lb:measure:txn:AbsExpr:ExprArgument(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:AbsExpr:InterArgument
*/
lb:measure:txn:AbsExpr:InterArgument(_) -> .lb:measure:txn:AbsExpr:InterArgumentConstructor[i]=x ->int(i), lb:measure:txn:AbsExpr:InterArgument(x).
lb:measure:txn:AbsExpr:InterArgument_name[x] = y -> lb:measure:txn:AbsExpr:InterArgument(x), string(y).
lb:measure:txn:AbsExpr:InterArgument_inter[x] = y -> lb:measure:txn:AbsExpr:InterArgument(x), lb:measure:txn:Intersection(y).
lang:constructor(`lb:measure:txn:AbsExpr:ExprArgumentConstructor).
lang:pulse(`lb:measure:txn:AbsExpr:ExprArgumentConstructor).
lang:pulse(`lb:measure:txn:AbsExpr:ExprArgument).
lang:pulse(`lb:measure:txn:AbsExpr:ExprArgument_name).
lang:pulse(`lb:measure:txn:AbsExpr:ExprArgument_expr).
lang:constructor(`lb:measure:txn:AbsExpr:InterArgumentConstructor).
lang:pulse(`lb:measure:txn:AbsExpr:InterArgumentConstructor).
lang:pulse(`lb:measure:txn:AbsExpr:InterArgument).
lang:pulse(`lb:measure:txn:AbsExpr:InterArgument_name).
lang:pulse(`lb:measure:txn:AbsExpr:InterArgument_inter).

/*
 * lb:measure:txn:UpdateExpr:Transform:SpreadKind
 */
/*
* message lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric
*/
lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric(_) -> .lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetricConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric(x).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric_metric[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric(x), string(y).
/*
* message lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query
*/
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query(_) -> .lb:measure:txn:UpdateExpr:Transform:SpreadKind:QueryConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query(x).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query_expr[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query(x), lb:measure:txn:MeasureExpr(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query_expr_str[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query(x), string(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query_type[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query(x), lb:measure:txn:Type(y).
/*
* message lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent
*/
lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent(_) -> .lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponentConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent(x).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent_label[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent(x), string(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent_dimension[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent(x), string(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent_primitive[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(y).

/**
 * enum lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive
 */
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x) -> .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=x -> string(s), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_value[x]=s -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), string(s).
lang:constructor(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetricConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetricConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric_metric).
lang:constructor(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:QueryConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:QueryConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query_expr).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query_expr_str).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query_type).
lang:constructor(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponentConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponentConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent_label).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent_dimension).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent_primitive).
lang:constructor(`lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum).
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=_ -> s = "EVEN"; s = "RATIO"; s = "DELTA"; s = "REPLICATE"; s = "EVEN_FLOAT"; s = "RATIO_FLOAT".
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum["EVEN"]=x <- .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum["RATIO"]=x <- .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum["DELTA"]=x <- .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum["REPLICATE"]=x <- .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum["EVEN_FLOAT"]=x <- .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum["RATIO_FLOAT"]=x <- .
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_value[x]=s <- lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=x.
lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_value[x]=s -> lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=x.

/*
 * lb:measure:txn:UpdateExpr:Target
 */
/*
* message lb:measure:txn:UpdateExpr:Target:LevelMap
*/
lb:measure:txn:UpdateExpr:Target:LevelMap(_) -> .lb:measure:txn:UpdateExpr:Target:LevelMapConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Target:LevelMap(x).
lb:measure:txn:UpdateExpr:Target:LevelMap_dimension[x] = y -> lb:measure:txn:UpdateExpr:Target:LevelMap(x), string(y).
lb:measure:txn:UpdateExpr:Target:LevelMap_hierarchy[x] = y -> lb:measure:txn:UpdateExpr:Target:LevelMap(x), string(y).
lb:measure:txn:UpdateExpr:Target:LevelMap_source_level[x] = y -> lb:measure:txn:UpdateExpr:Target:LevelMap(x), string(y).
lb:measure:txn:UpdateExpr:Target:LevelMap_target_level[x] = y -> lb:measure:txn:UpdateExpr:Target:LevelMap(x), string(y).
lang:constructor(`lb:measure:txn:UpdateExpr:Target:LevelMapConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Target:LevelMapConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Target:LevelMap).
lang:pulse(`lb:measure:txn:UpdateExpr:Target:LevelMap_dimension).
lang:pulse(`lb:measure:txn:UpdateExpr:Target:LevelMap_hierarchy).
lang:pulse(`lb:measure:txn:UpdateExpr:Target:LevelMap_source_level).
lang:pulse(`lb:measure:txn:UpdateExpr:Target:LevelMap_target_level).

/*
 * lb:measure:txn:UpdateExpr:Transform
 */
/*
* message lb:measure:txn:UpdateExpr:Transform:SpreadKind
*/
lb:measure:txn:UpdateExpr:Transform:SpreadKind(_) -> .lb:measure:txn:UpdateExpr:Transform:SpreadKindConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Transform:SpreadKind(x).
lb:measure:txn:UpdateExpr:Transform:SpreadKind_primitive[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Primitive(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind_query[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:Query(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind_named[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind(x), string(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind_composite[x, i] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind(x), int(i), lb:measure:txn:UpdateExpr:Transform:SpreadKind:CompositeComponent(y).
lb:measure:txn:UpdateExpr:Transform:SpreadKind_by_metric[x] = y -> lb:measure:txn:UpdateExpr:Transform:SpreadKind(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind:ByMetric(y).
lang:constructor(`lb:measure:txn:UpdateExpr:Transform:SpreadKindConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKindConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind_primitive).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind_query).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind_named).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind_composite).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform:SpreadKind_by_metric).

/*
 * lb:measure:txn:AggExpr:Grouping
 */

/**
 * enum lb:measure:txn:AggExpr:Grouping:Kind
 */
lb:measure:txn:AggExpr:Grouping:Kind(x) -> .
lb:measure:txn:AggExpr:Grouping:Kind_enum[s]=x -> string(s), lb:measure:txn:AggExpr:Grouping:Kind(x).
lb:measure:txn:AggExpr:Grouping:Kind_value[x]=s -> lb:measure:txn:AggExpr:Grouping:Kind(x), string(s).
lang:constructor(`lb:measure:txn:AggExpr:Grouping:Kind_enum).
lb:measure:txn:AggExpr:Grouping:Kind_enum[s]=_ -> s = "ALL"; s = "MAP"; s = "MULTI_MAP"; s = "SLIDE".
lb:measure:txn:AggExpr:Grouping:Kind(x), lb:measure:txn:AggExpr:Grouping:Kind_enum["ALL"]=x <- .
lb:measure:txn:AggExpr:Grouping:Kind(x), lb:measure:txn:AggExpr:Grouping:Kind_enum["MAP"]=x <- .
lb:measure:txn:AggExpr:Grouping:Kind(x), lb:measure:txn:AggExpr:Grouping:Kind_enum["MULTI_MAP"]=x <- .
lb:measure:txn:AggExpr:Grouping:Kind(x), lb:measure:txn:AggExpr:Grouping:Kind_enum["SLIDE"]=x <- .
lb:measure:txn:AggExpr:Grouping:Kind_value[x]=s <- lb:measure:txn:AggExpr:Grouping:Kind_enum[s]=x.
lb:measure:txn:AggExpr:Grouping:Kind_value[x]=s -> lb:measure:txn:AggExpr:Grouping:Kind_enum[s]=x.

/*
 * lb:measure:txn:AggExpr:Method
 */
/*
* message lb:measure:txn:AggExpr:Method:CompositeComponent
*/
lb:measure:txn:AggExpr:Method:CompositeComponent(_) -> .lb:measure:txn:AggExpr:Method:CompositeComponentConstructor[i]=x ->int(i), lb:measure:txn:AggExpr:Method:CompositeComponent(x).
lb:measure:txn:AggExpr:Method:CompositeComponent_label[x] = y -> lb:measure:txn:AggExpr:Method:CompositeComponent(x), string(y).
lb:measure:txn:AggExpr:Method:CompositeComponent_dimension[x] = y -> lb:measure:txn:AggExpr:Method:CompositeComponent(x), string(y).
lb:measure:txn:AggExpr:Method:CompositeComponent_hierarchy[x] = y -> lb:measure:txn:AggExpr:Method:CompositeComponent(x), string(y).
lb:measure:txn:AggExpr:Method:CompositeComponent_primitive[x] = y -> lb:measure:txn:AggExpr:Method:CompositeComponent(x), lb:measure:txn:AggExpr:Method:Primitive(y).

/**
 * enum lb:measure:txn:AggExpr:Method:Primitive
 */
lb:measure:txn:AggExpr:Method:Primitive(x) -> .
lb:measure:txn:AggExpr:Method:Primitive_enum[s]=x -> string(s), lb:measure:txn:AggExpr:Method:Primitive(x).
lb:measure:txn:AggExpr:Method:Primitive_value[x]=s -> lb:measure:txn:AggExpr:Method:Primitive(x), string(s).
lang:constructor(`lb:measure:txn:AggExpr:Method:CompositeComponentConstructor).
lang:pulse(`lb:measure:txn:AggExpr:Method:CompositeComponentConstructor).
lang:pulse(`lb:measure:txn:AggExpr:Method:CompositeComponent).
lang:pulse(`lb:measure:txn:AggExpr:Method:CompositeComponent_label).
lang:pulse(`lb:measure:txn:AggExpr:Method:CompositeComponent_dimension).
lang:pulse(`lb:measure:txn:AggExpr:Method:CompositeComponent_hierarchy).
lang:pulse(`lb:measure:txn:AggExpr:Method:CompositeComponent_primitive).
lang:constructor(`lb:measure:txn:AggExpr:Method:Primitive_enum).
lb:measure:txn:AggExpr:Method:Primitive_enum[s]=_ -> s = "COLLECT"; s = "AMBIG"; s = "TOTAL"; s = "MIN"; s = "MAX"; s = "COUNT"; s = "MODE"; s = "COUNT_DISTINCT"; s = "HISTOGRAM"; s = "SORT"; s = "AVERAGE"; s = "KEY_SORT".
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["COLLECT"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["AMBIG"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["TOTAL"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["MIN"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["MAX"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["COUNT"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["MODE"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["COUNT_DISTINCT"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["HISTOGRAM"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["SORT"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["AVERAGE"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive(x), lb:measure:txn:AggExpr:Method:Primitive_enum["KEY_SORT"]=x <- .
lb:measure:txn:AggExpr:Method:Primitive_value[x]=s <- lb:measure:txn:AggExpr:Method:Primitive_enum[s]=x.
lb:measure:txn:AggExpr:Method:Primitive_value[x]=s -> lb:measure:txn:AggExpr:Method:Primitive_enum[s]=x.

/*
 * lb:measure:txn:Op
 */

/**
 * enum lb:measure:txn:Op:Kind
 */
lb:measure:txn:Op:Kind(x) -> .
lb:measure:txn:Op:Kind_enum[s]=x -> string(s), lb:measure:txn:Op:Kind(x).
lb:measure:txn:Op:Kind_value[x]=s -> lb:measure:txn:Op:Kind(x), string(s).
lang:constructor(`lb:measure:txn:Op:Kind_enum).
lb:measure:txn:Op:Kind_enum[s]=_ -> s = "NEGATE"; s = "SQRT"; s = "LOG"; s = "TO_UPPER"; s = "TO_LOWER"; s = "LENGTH"; s = "ADD"; s = "MAX"; s = "SUBTRACT"; s = "MULTIPLY"; s = "DIVIDE"; s = "FLOOR"; s = "CEIL"; s = "POW"; s = "MOD"; s = "ABS"; s = "NAMED".
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["NEGATE"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["SQRT"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["LOG"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["TO_UPPER"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["TO_LOWER"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["LENGTH"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["ADD"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["MAX"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["SUBTRACT"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["MULTIPLY"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["DIVIDE"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["FLOOR"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["CEIL"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["POW"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["MOD"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["ABS"]=x <- .
lb:measure:txn:Op:Kind(x), lb:measure:txn:Op:Kind_enum["NAMED"]=x <- .
lb:measure:txn:Op:Kind_value[x]=s <- lb:measure:txn:Op:Kind_enum[s]=x.
lb:measure:txn:Op:Kind_value[x]=s -> lb:measure:txn:Op:Kind_enum[s]=x.

/*
 * lb:measure:txn:ExprSubst
 */

/**
 * enum lb:measure:txn:ExprSubst:Phase
 */
lb:measure:txn:ExprSubst:Phase(x) -> .
lb:measure:txn:ExprSubst:Phase_enum[s]=x -> string(s), lb:measure:txn:ExprSubst:Phase(x).
lb:measure:txn:ExprSubst:Phase_value[x]=s -> lb:measure:txn:ExprSubst:Phase(x), string(s).
lang:constructor(`lb:measure:txn:ExprSubst:Phase_enum).
lb:measure:txn:ExprSubst:Phase_enum[s]=_ -> s = "PRE"; s = "POST".
lb:measure:txn:ExprSubst:Phase(x), lb:measure:txn:ExprSubst:Phase_enum["PRE"]=x <- .
lb:measure:txn:ExprSubst:Phase(x), lb:measure:txn:ExprSubst:Phase_enum["POST"]=x <- .
lb:measure:txn:ExprSubst:Phase_value[x]=s <- lb:measure:txn:ExprSubst:Phase_enum[s]=x.
lb:measure:txn:ExprSubst:Phase_value[x]=s -> lb:measure:txn:ExprSubst:Phase_enum[s]=x.

/*
 * lb:measure:txn:CompositeIntersection
 */

/**
 * enum lb:measure:txn:CompositeIntersection:Kind
 */
lb:measure:txn:CompositeIntersection:Kind(x) -> .
lb:measure:txn:CompositeIntersection:Kind_enum[s]=x -> string(s), lb:measure:txn:CompositeIntersection:Kind(x).
lb:measure:txn:CompositeIntersection:Kind_value[x]=s -> lb:measure:txn:CompositeIntersection:Kind(x), string(s).
lang:constructor(`lb:measure:txn:CompositeIntersection:Kind_enum).
lb:measure:txn:CompositeIntersection:Kind_enum[s]=_ -> s = "MEET"; s = "JOIN".
lb:measure:txn:CompositeIntersection:Kind(x), lb:measure:txn:CompositeIntersection:Kind_enum["MEET"]=x <- .
lb:measure:txn:CompositeIntersection:Kind(x), lb:measure:txn:CompositeIntersection:Kind_enum["JOIN"]=x <- .
lb:measure:txn:CompositeIntersection:Kind_value[x]=s <- lb:measure:txn:CompositeIntersection:Kind_enum[s]=x.
lb:measure:txn:CompositeIntersection:Kind_value[x]=s -> lb:measure:txn:CompositeIntersection:Kind_enum[s]=x.

/*
 * lb:measure:txn:Problem
 */
/*
* message lb:measure:txn:Problem:StackFrame
*/
lb:measure:txn:Problem:StackFrame(_) -> .lb:measure:txn:Problem:StackFrameConstructor[i]=x ->int(i), lb:measure:txn:Problem:StackFrame(x).
lb:measure:txn:Problem:StackFrame_file_name[x] = y -> lb:measure:txn:Problem:StackFrame(x), string(y).
lb:measure:txn:Problem:StackFrame_class_name[x] = y -> lb:measure:txn:Problem:StackFrame(x), string(y).
lb:measure:txn:Problem:StackFrame_method_name[x] = y -> lb:measure:txn:Problem:StackFrame(x), string(y).
lb:measure:txn:Problem:StackFrame_line[x] = y -> lb:measure:txn:Problem:StackFrame(x), int(y).

/**
 * enum lb:measure:txn:Problem:Severity
 */
lb:measure:txn:Problem:Severity(x) -> .
lb:measure:txn:Problem:Severity_enum[s]=x -> string(s), lb:measure:txn:Problem:Severity(x).
lb:measure:txn:Problem:Severity_value[x]=s -> lb:measure:txn:Problem:Severity(x), string(s).
lang:constructor(`lb:measure:txn:Problem:StackFrameConstructor).
lang:pulse(`lb:measure:txn:Problem:StackFrameConstructor).
lang:pulse(`lb:measure:txn:Problem:StackFrame).
lang:pulse(`lb:measure:txn:Problem:StackFrame_file_name).
lang:pulse(`lb:measure:txn:Problem:StackFrame_class_name).
lang:pulse(`lb:measure:txn:Problem:StackFrame_method_name).
lang:pulse(`lb:measure:txn:Problem:StackFrame_line).
lang:constructor(`lb:measure:txn:Problem:Severity_enum).
lb:measure:txn:Problem:Severity_enum[s]=_ -> s = "WARNING"; s = "ERROR".
lb:measure:txn:Problem:Severity(x), lb:measure:txn:Problem:Severity_enum["WARNING"]=x <- .
lb:measure:txn:Problem:Severity(x), lb:measure:txn:Problem:Severity_enum["ERROR"]=x <- .
lb:measure:txn:Problem:Severity_value[x]=s <- lb:measure:txn:Problem:Severity_enum[s]=x.
lb:measure:txn:Problem:Severity_value[x]=s -> lb:measure:txn:Problem:Severity_enum[s]=x.

/*
 * lb:measure:txn:Comparison
 */

/**
 * enum lb:measure:txn:Comparison:Kind
 */
lb:measure:txn:Comparison:Kind(x) -> .
lb:measure:txn:Comparison:Kind_enum[s]=x -> string(s), lb:measure:txn:Comparison:Kind(x).
lb:measure:txn:Comparison:Kind_value[x]=s -> lb:measure:txn:Comparison:Kind(x), string(s).
lang:constructor(`lb:measure:txn:Comparison:Kind_enum).
lb:measure:txn:Comparison:Kind_enum[s]=_ -> s = "EQUALS"; s = "NOT_EQUALS"; s = "LESS_THAN"; s = "LESS_OR_EQUALS"; s = "GREATER_THAN"; s = "GREATER_OR_EQUALS"; s = "MATCH".
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["EQUALS"]=x <- .
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["NOT_EQUALS"]=x <- .
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["LESS_THAN"]=x <- .
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["LESS_OR_EQUALS"]=x <- .
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["GREATER_THAN"]=x <- .
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["GREATER_OR_EQUALS"]=x <- .
lb:measure:txn:Comparison:Kind(x), lb:measure:txn:Comparison:Kind_enum["MATCH"]=x <- .
lb:measure:txn:Comparison:Kind_value[x]=s <- lb:measure:txn:Comparison:Kind_enum[s]=x.
lb:measure:txn:Comparison:Kind_value[x]=s -> lb:measure:txn:Comparison:Kind_enum[s]=x.

/*
 * lb:measure:txn:MeasureExpr
 */

/**
 * enum lb:measure:txn:MeasureExpr:Kind
 */
lb:measure:txn:MeasureExpr:Kind(x) -> .
lb:measure:txn:MeasureExpr:Kind_enum[s]=x -> string(s), lb:measure:txn:MeasureExpr:Kind(x).
lb:measure:txn:MeasureExpr:Kind_value[x]=s -> lb:measure:txn:MeasureExpr:Kind(x), string(s).
lang:constructor(`lb:measure:txn:MeasureExpr:Kind_enum).
lb:measure:txn:MeasureExpr:Kind_enum[s]=_ -> s = "METRIC"; s = "AGGREGATION"; s = "FILTER"; s = "COMPOSITE"; s = "ATTRIBUTE"; s = "OP"; s = "WIDEN"; s = "DICE"; s = "DROP"; s = "DIFFERENCE"; s = "DEMOTE"; s = "PREV"; s = "OVERRIDE"; s = "DELTA"; s = "PARAM"; s = "SPLIT"; s = "RELABEL"; s = "VARIABLE"; s = "ABSTRACTION"; s = "APPLICATION"; s = "LITERAL"; s = "CAST"; s = "PROMOTE".
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["METRIC"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["AGGREGATION"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["FILTER"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["COMPOSITE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["ATTRIBUTE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["OP"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["WIDEN"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["DICE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["DROP"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["DIFFERENCE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["DEMOTE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["PREV"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["OVERRIDE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["DELTA"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["PARAM"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["SPLIT"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["RELABEL"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["VARIABLE"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["ABSTRACTION"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["APPLICATION"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["LITERAL"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["CAST"]=x <- .
lb:measure:txn:MeasureExpr:Kind(x), lb:measure:txn:MeasureExpr:Kind_enum["PROMOTE"]=x <- .
lb:measure:txn:MeasureExpr:Kind_value[x]=s <- lb:measure:txn:MeasureExpr:Kind_enum[s]=x.
lb:measure:txn:MeasureExpr:Kind_value[x]=s -> lb:measure:txn:MeasureExpr:Kind_enum[s]=x.

/*
 * lb:measure:txn:common
 */
/*
* message lb:measure:txn:common:Location
*/
lb:measure:txn:common:Location(_) -> .lb:measure:txn:common:LocationConstructor[i]=x ->int(i), lb:measure:txn:common:Location(x).
lb:measure:txn:common:Location_row[x] = y -> lb:measure:txn:common:Location(x), int(y).
lb:measure:txn:common:Location_column[x] = y -> lb:measure:txn:common:Location(x), int(y).
/*
* message lb:measure:txn:common:Region
*/
lb:measure:txn:common:Region(_) -> .lb:measure:txn:common:RegionConstructor[i]=x ->int(i), lb:measure:txn:common:Region(x).
lb:measure:txn:common:Region_start[x] = y -> lb:measure:txn:common:Region(x), lb:measure:txn:common:Location(y).
lb:measure:txn:common:Region_end[x] = y -> lb:measure:txn:common:Region(x), lb:measure:txn:common:Location(y).
lang:constructor(`lb:measure:txn:common:LocationConstructor).
lang:pulse(`lb:measure:txn:common:LocationConstructor).
lang:pulse(`lb:measure:txn:common:Location).
lang:pulse(`lb:measure:txn:common:Location_row).
lang:pulse(`lb:measure:txn:common:Location_column).
lang:constructor(`lb:measure:txn:common:RegionConstructor).
lang:pulse(`lb:measure:txn:common:RegionConstructor).
lang:pulse(`lb:measure:txn:common:Region).
lang:pulse(`lb:measure:txn:common:Region_start).
lang:pulse(`lb:measure:txn:common:Region_end).

/*
 * lb:measure:txn:ValueType
 */

/**
 * enum lb:measure:txn:ValueType:Kind
 */
lb:measure:txn:ValueType:Kind(x) -> .
lb:measure:txn:ValueType:Kind_enum[s]=x -> string(s), lb:measure:txn:ValueType:Kind(x).
lb:measure:txn:ValueType:Kind_value[x]=s -> lb:measure:txn:ValueType:Kind(x), string(s).
lang:constructor(`lb:measure:txn:ValueType:Kind_enum).
lb:measure:txn:ValueType:Kind_enum[s]=_ -> s = "SINGLETON"; s = "SET".
lb:measure:txn:ValueType:Kind(x), lb:measure:txn:ValueType:Kind_enum["SINGLETON"]=x <- .
lb:measure:txn:ValueType:Kind(x), lb:measure:txn:ValueType:Kind_enum["SET"]=x <- .
lb:measure:txn:ValueType:Kind_value[x]=s <- lb:measure:txn:ValueType:Kind_enum[s]=x.
lb:measure:txn:ValueType:Kind_value[x]=s -> lb:measure:txn:ValueType:Kind_enum[s]=x.

/*
 * lb:measure:txn:Dimension
 */
/*
* message lb:measure:txn:Dimension:Hierarchy
*/
lb:measure:txn:Dimension:Hierarchy(_) -> .lb:measure:txn:Dimension:HierarchyConstructor[i]=x ->int(i), lb:measure:txn:Dimension:Hierarchy(x).
lb:measure:txn:Dimension:Hierarchy_name[x] = y -> lb:measure:txn:Dimension:Hierarchy(x), string(y).
lb:measure:txn:Dimension:Hierarchy_path[x, i] = y -> lb:measure:txn:Dimension:Hierarchy(x), int(i), lb:measure:txn:Dimension:Hierarchy:Path(y).
/*
* message lb:measure:txn:Dimension:Edge
*/
lb:measure:txn:Dimension:Edge(_) -> .lb:measure:txn:Dimension:EdgeConstructor[i]=x ->int(i), lb:measure:txn:Dimension:Edge(x).
lb:measure:txn:Dimension:Edge_source_level[x] = y -> lb:measure:txn:Dimension:Edge(x), string(y).
lb:measure:txn:Dimension:Edge_target_level[x] = y -> lb:measure:txn:Dimension:Edge(x), string(y).
lb:measure:txn:Dimension:Edge_pred[x] = y -> lb:measure:txn:Dimension:Edge(x), lb:measure:txn:Predicate(y).
/*
* message lb:measure:txn:Dimension:Level
*/
lb:measure:txn:Dimension:Level(_) -> .lb:measure:txn:Dimension:LevelConstructor[i]=x ->int(i), lb:measure:txn:Dimension:Level(x).
lb:measure:txn:Dimension:Level_name[x] = y -> lb:measure:txn:Dimension:Level(x), string(y).
lb:measure:txn:Dimension:Level_type[x] = y -> lb:measure:txn:Dimension:Level(x), lb:measure:txn:Type(y).
lb:measure:txn:Dimension:Level_attribute(x, y) -> lb:measure:txn:Dimension:Level(x), lb:measure:txn:Attribute(y).
lb:measure:txn:Dimension:Level_caption[x] = y -> lb:measure:txn:Dimension:Level(x), string(y).
lang:constructor(`lb:measure:txn:Dimension:HierarchyConstructor).
lang:pulse(`lb:measure:txn:Dimension:HierarchyConstructor).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy_name).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy_path).
lang:constructor(`lb:measure:txn:Dimension:EdgeConstructor).
lang:pulse(`lb:measure:txn:Dimension:EdgeConstructor).
lang:pulse(`lb:measure:txn:Dimension:Edge).
lang:pulse(`lb:measure:txn:Dimension:Edge_source_level).
lang:pulse(`lb:measure:txn:Dimension:Edge_target_level).
lang:pulse(`lb:measure:txn:Dimension:Edge_pred).
lang:constructor(`lb:measure:txn:Dimension:LevelConstructor).
lang:pulse(`lb:measure:txn:Dimension:LevelConstructor).
lang:pulse(`lb:measure:txn:Dimension:Level).
lang:pulse(`lb:measure:txn:Dimension:Level_name).
lang:pulse(`lb:measure:txn:Dimension:Level_type).
lang:pulse(`lb:measure:txn:Dimension:Level_attribute).
lang:pulse(`lb:measure:txn:Dimension:Level_caption).

/*
 * lb:measure:txn:UpdateExpr
 */
/*
* message lb:measure:txn:UpdateExpr:Target
*/
lb:measure:txn:UpdateExpr:Target(_) -> .lb:measure:txn:UpdateExpr:TargetConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Target(x).
lb:measure:txn:UpdateExpr:Target_metric[x] = y -> lb:measure:txn:UpdateExpr:Target(x), string(y).
lb:measure:txn:UpdateExpr:Target_attribute[x] = y -> lb:measure:txn:UpdateExpr:Target(x), lb:measure:txn:AttributeExpr(y).
lb:measure:txn:UpdateExpr:Target_level[x] = y -> lb:measure:txn:UpdateExpr:Target(x), lb:measure:txn:QualifiedLevel(y).
lb:measure:txn:UpdateExpr:Target_level_map[x] = y -> lb:measure:txn:UpdateExpr:Target(x), lb:measure:txn:UpdateExpr:Target:LevelMap(y).
/*
* message lb:measure:txn:UpdateExpr:Transform
*/
lb:measure:txn:UpdateExpr:Transform(_) -> .lb:measure:txn:UpdateExpr:TransformConstructor[i]=x ->int(i), lb:measure:txn:UpdateExpr:Transform(x).
lb:measure:txn:UpdateExpr:Transform_spread_kind[x] = y -> lb:measure:txn:UpdateExpr:Transform(x), lb:measure:txn:UpdateExpr:Transform:SpreadKind(y).
lb:measure:txn:UpdateExpr:Transform_distribution(x, y) -> lb:measure:txn:UpdateExpr:Transform(x), lb:measure:txn:QualifiedLevel(y).

/**
 * enum lb:measure:txn:UpdateExpr:Kind
 */
lb:measure:txn:UpdateExpr:Kind(x) -> .
lb:measure:txn:UpdateExpr:Kind_enum[s]=x -> string(s), lb:measure:txn:UpdateExpr:Kind(x).
lb:measure:txn:UpdateExpr:Kind_value[x]=s -> lb:measure:txn:UpdateExpr:Kind(x), string(s).
lang:constructor(`lb:measure:txn:UpdateExpr:TargetConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:TargetConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Target).
lang:pulse(`lb:measure:txn:UpdateExpr:Target_metric).
lang:pulse(`lb:measure:txn:UpdateExpr:Target_attribute).
lang:pulse(`lb:measure:txn:UpdateExpr:Target_level).
lang:pulse(`lb:measure:txn:UpdateExpr:Target_level_map).
lang:constructor(`lb:measure:txn:UpdateExpr:TransformConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:TransformConstructor).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform_spread_kind).
lang:pulse(`lb:measure:txn:UpdateExpr:Transform_distribution).
lang:constructor(`lb:measure:txn:UpdateExpr:Kind_enum).
lb:measure:txn:UpdateExpr:Kind_enum[s]=_ -> s = "SPREAD"; s = "REMOVE".
lb:measure:txn:UpdateExpr:Kind(x), lb:measure:txn:UpdateExpr:Kind_enum["SPREAD"]=x <- .
lb:measure:txn:UpdateExpr:Kind(x), lb:measure:txn:UpdateExpr:Kind_enum["REMOVE"]=x <- .
lb:measure:txn:UpdateExpr:Kind_value[x]=s <- lb:measure:txn:UpdateExpr:Kind_enum[s]=x.
lb:measure:txn:UpdateExpr:Kind_value[x]=s -> lb:measure:txn:UpdateExpr:Kind_enum[s]=x.

/*
 * lb:measure:txn:Signature
 */

/**
 * enum lb:measure:txn:Signature:Kind
 */
lb:measure:txn:Signature:Kind(x) -> .
lb:measure:txn:Signature:Kind_enum[s]=x -> string(s), lb:measure:txn:Signature:Kind(x).
lb:measure:txn:Signature:Kind_value[x]=s -> lb:measure:txn:Signature:Kind(x), string(s).
lang:constructor(`lb:measure:txn:Signature:Kind_enum).
lb:measure:txn:Signature:Kind_enum[s]=_ -> s = "BASE".
lb:measure:txn:Signature:Kind(x), lb:measure:txn:Signature:Kind_enum["BASE"]=x <- .
lb:measure:txn:Signature:Kind_value[x]=s <- lb:measure:txn:Signature:Kind_enum[s]=x.
lb:measure:txn:Signature:Kind_value[x]=s -> lb:measure:txn:Signature:Kind_enum[s]=x.

/*
 * lb:measure:txn:AppExpr
 */
/*
* message lb:measure:txn:AppExpr:ExprArgument
*/
lb:measure:txn:AppExpr:ExprArgument(_) -> .lb:measure:txn:AppExpr:ExprArgumentConstructor[i]=x ->int(i), lb:measure:txn:AppExpr:ExprArgument(x).
lb:measure:txn:AppExpr:ExprArgument_name[x] = y -> lb:measure:txn:AppExpr:ExprArgument(x), string(y).
lb:measure:txn:AppExpr:ExprArgument_expr[x] = y -> lb:measure:txn:AppExpr:ExprArgument(x), lb:measure:txn:MeasureExpr(y).
/*
* message lb:measure:txn:AppExpr:InterArgument
*/
lb:measure:txn:AppExpr:InterArgument(_) -> .lb:measure:txn:AppExpr:InterArgumentConstructor[i]=x ->int(i), lb:measure:txn:AppExpr:InterArgument(x).
lb:measure:txn:AppExpr:InterArgument_name[x] = y -> lb:measure:txn:AppExpr:InterArgument(x), string(y).
lb:measure:txn:AppExpr:InterArgument_inter[x] = y -> lb:measure:txn:AppExpr:InterArgument(x), lb:measure:txn:Intersection(y).
lang:constructor(`lb:measure:txn:AppExpr:ExprArgumentConstructor).
lang:pulse(`lb:measure:txn:AppExpr:ExprArgumentConstructor).
lang:pulse(`lb:measure:txn:AppExpr:ExprArgument).
lang:pulse(`lb:measure:txn:AppExpr:ExprArgument_name).
lang:pulse(`lb:measure:txn:AppExpr:ExprArgument_expr).
lang:constructor(`lb:measure:txn:AppExpr:InterArgumentConstructor).
lang:pulse(`lb:measure:txn:AppExpr:InterArgumentConstructor).
lang:pulse(`lb:measure:txn:AppExpr:InterArgument).
lang:pulse(`lb:measure:txn:AppExpr:InterArgument_name).
lang:pulse(`lb:measure:txn:AppExpr:InterArgument_inter).

/*
 * lb:measure:txn:CompositeExpr
 */

/**
 * enum lb:measure:txn:CompositeExpr:Kind
 */
lb:measure:txn:CompositeExpr:Kind(x) -> .
lb:measure:txn:CompositeExpr:Kind_enum[s]=x -> string(s), lb:measure:txn:CompositeExpr:Kind(x).
lb:measure:txn:CompositeExpr:Kind_value[x]=s -> lb:measure:txn:CompositeExpr:Kind(x), string(s).
lang:constructor(`lb:measure:txn:CompositeExpr:Kind_enum).
lb:measure:txn:CompositeExpr:Kind_enum[s]=_ -> s = "INTERSECTION"; s = "UNION".
lb:measure:txn:CompositeExpr:Kind(x), lb:measure:txn:CompositeExpr:Kind_enum["INTERSECTION"]=x <- .
lb:measure:txn:CompositeExpr:Kind(x), lb:measure:txn:CompositeExpr:Kind_enum["UNION"]=x <- .
lb:measure:txn:CompositeExpr:Kind_value[x]=s <- lb:measure:txn:CompositeExpr:Kind_enum[s]=x.
lb:measure:txn:CompositeExpr:Kind_value[x]=s -> lb:measure:txn:CompositeExpr:Kind_enum[s]=x.

/*
 * lb:measure:txn:Dimension:Hierarchy
 */
/*
* message lb:measure:txn:Dimension:Hierarchy:Path
*/
lb:measure:txn:Dimension:Hierarchy:Path(_) -> .lb:measure:txn:Dimension:Hierarchy:PathConstructor[i]=x ->int(i), lb:measure:txn:Dimension:Hierarchy:Path(x).
lb:measure:txn:Dimension:Hierarchy:Path_level[x] = y -> lb:measure:txn:Dimension:Hierarchy:Path(x), string(y).
lb:measure:txn:Dimension:Hierarchy:Path_pred[x] = y -> lb:measure:txn:Dimension:Hierarchy:Path(x), lb:measure:txn:Predicate(y).
lang:constructor(`lb:measure:txn:Dimension:Hierarchy:PathConstructor).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy:PathConstructor).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy:Path).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy:Path_level).
lang:pulse(`lb:measure:txn:Dimension:Hierarchy:Path_pred).
