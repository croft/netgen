//*******************************************
// This code was generated by proto2datalog.
// Do not check into version control.
//*******************************************


/*
 * lb:web:measure
 */
/*
* message lb:web:measure:Problem
*/
lb:web:measure:Problem(_) -> .lb:web:measure:ProblemConstructor[i]=x ->int(i), lb:web:measure:Problem(x).
lb:web:measure:Problem_code[x] = y -> lb:web:measure:Problem(x), string(y).
lb:web:measure:Problem_severity[x] = y -> lb:web:measure:Problem(x), lb:web:measure:Problem:Severity(y).
lb:web:measure:Problem_text[x] = y -> lb:web:measure:Problem(x), string(y).
lb:web:measure:Problem_region[x] = y -> lb:web:measure:Problem(x), lb:web:measure:common:Region(y).
lb:web:measure:Problem_stack[x, i] = y -> lb:web:measure:Problem(x), int(i), lb:web:measure:Problem:StackFrame(y).
/*
* message lb:web:measure:Type
*/
lb:web:measure:Type(_) -> .lb:web:measure:TypeConstructor[i]=x ->int(i), lb:web:measure:Type(x).
lb:web:measure:Type_kind[x] = y -> lb:web:measure:Type(x), lb:web:measure:Type:Kind(y).
lb:web:measure:Type_named[x] = y -> lb:web:measure:Type(x), string(y).
/*
* message lb:web:measure:MeasureModel
*/
lb:web:measure:MeasureModel(_) -> .lb:web:measure:MeasureModelConstructor[i]=x ->int(i), lb:web:measure:MeasureModel(x).
lb:web:measure:MeasureModel_name[x] = y -> lb:web:measure:MeasureModel(x), string(y).
lb:web:measure:MeasureModel_dimension(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:Dimension(y).
lb:web:measure:MeasureModel_metric(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:Metric(y).
lb:web:measure:MeasureModel_multi_dim_level_map(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:MultiDimensionalLevelMap(y).
lb:web:measure:MeasureModel_slide(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:Slide(y).
lb:web:measure:MeasureModel_operator(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:OpDef(y).
lb:web:measure:MeasureModel_subst(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:ExprSubst(y).
lb:web:measure:MeasureModel_key_order(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:Intersection(y).
lb:web:measure:MeasureModel_runtime_var_order(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:VarOrder(y).
lb:web:measure:MeasureModel_aggregation(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:AggDef(y).
lb:web:measure:MeasureModel_spread(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:SpreadDef(y).
lb:web:measure:MeasureModel_metric_lock(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:MetricLock(y).
lb:web:measure:MeasureModel_dimension_lock(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:DimensionLock(y).
lb:web:measure:MeasureModel_type(x, y) -> lb:web:measure:MeasureModel(x), lb:web:measure:TypeDefinition(y).
lb:web:measure:MeasureModel_complete_model[x] = y -> lb:web:measure:MeasureModel(x), boolean(y).
/*
* message lb:web:measure:VarOrder
*/
lb:web:measure:VarOrder(_) -> .lb:web:measure:VarOrderConstructor[i]=x ->int(i), lb:web:measure:VarOrder(x).
lb:web:measure:VarOrder_pattern[x, i] = y -> lb:web:measure:VarOrder(x), int(i), lb:web:measure:QualifiedLevel(y).
lb:web:measure:VarOrder_order[x, i] = y -> lb:web:measure:VarOrder(x), int(i), lb:web:measure:QualifiedLevel(y).
/*
* message lb:web:measure:OpDef
*/
lb:web:measure:OpDef(_) -> .lb:web:measure:OpDefConstructor[i]=x ->int(i), lb:web:measure:OpDef(x).
lb:web:measure:OpDef_name[x] = y -> lb:web:measure:OpDef(x), string(y).
lb:web:measure:OpDef_impl[x] = y -> lb:web:measure:OpDef(x), string(y).
lb:web:measure:OpDef_domain[x, i] = y -> lb:web:measure:OpDef(x), int(i), lb:web:measure:Type(y).
lb:web:measure:OpDef_range[x] = y -> lb:web:measure:OpDef(x), lb:web:measure:Type(y).
/*
* message lb:web:measure:AggDef
*/
lb:web:measure:AggDef(_) -> .lb:web:measure:AggDefConstructor[i]=x ->int(i), lb:web:measure:AggDef(x).
lb:web:measure:AggDef_name[x] = y -> lb:web:measure:AggDef(x), string(y).
lb:web:measure:AggDef_method[x] = y -> lb:web:measure:AggDef(x), lb:web:measure:AggExpr:Method(y).
/*
* message lb:web:measure:SpreadDef
*/
lb:web:measure:SpreadDef(_) -> .lb:web:measure:SpreadDefConstructor[i]=x ->int(i), lb:web:measure:SpreadDef(x).
lb:web:measure:SpreadDef_name[x] = y -> lb:web:measure:SpreadDef(x), string(y).
lb:web:measure:SpreadDef_spread[x] = y -> lb:web:measure:SpreadDef(x), lb:web:measure:UpdateExpr:Transform:SpreadKind(y).
/*
* message lb:web:measure:Metric
*/
lb:web:measure:Metric(_) -> .lb:web:measure:MetricConstructor[i]=x ->int(i), lb:web:measure:Metric(x).
lb:web:measure:Metric_name[x] = y -> lb:web:measure:Metric(x), string(y).
lb:web:measure:Metric_signature[x] = y -> lb:web:measure:Metric(x), lb:web:measure:Signature(y).
lb:web:measure:Metric_predicate[x] = y -> lb:web:measure:Metric(x), lb:web:measure:Predicate(y).
lb:web:measure:Metric_dialogue[x] = y -> lb:web:measure:Metric(x), lb:web:measure:Dialogue(y).
lb:web:measure:Metric_expr[x] = y -> lb:web:measure:Metric(x), lb:web:measure:ExprMetric(y).
lb:web:measure:Metric_caption[x] = y -> lb:web:measure:Metric(x), string(y).
lb:web:measure:Metric_agg_method[x] = y -> lb:web:measure:Metric(x), lb:web:measure:AggExpr:Method(y).
lb:web:measure:Metric_recalc[x] = y -> lb:web:measure:Metric(x), lb:web:measure:Recalc(y).
lb:web:measure:Metric_update_method[x] = y -> lb:web:measure:Metric(x), lb:web:measure:UpdateExpr:Transform:SpreadKind(y).
lb:web:measure:Metric_inverse[x, i] = y -> lb:web:measure:Metric(x), int(i), lb:web:measure:InverseGroup(y).
lb:web:measure:Metric_generate_inverses[x] = y -> lb:web:measure:Metric(x), boolean(y).
/*
* message lb:web:measure:Signature
*/
lb:web:measure:Signature(_) -> .lb:web:measure:SignatureConstructor[i]=x ->int(i), lb:web:measure:Signature(x).
lb:web:measure:Signature_kind[x] = y -> lb:web:measure:Signature(x), lb:web:measure:Signature:Kind(y).
lb:web:measure:Signature_base_signature[x] = y -> lb:web:measure:Signature(x), lb:web:measure:BaseSignature(y).
/*
* message lb:web:measure:BaseSignature
*/
lb:web:measure:BaseSignature(_) -> .lb:web:measure:BaseSignatureConstructor[i]=x ->int(i), lb:web:measure:BaseSignature(x).
lb:web:measure:BaseSignature_intersection[x] = y -> lb:web:measure:BaseSignature(x), lb:web:measure:Intersection(y).
lb:web:measure:BaseSignature_type[x] = y -> lb:web:measure:BaseSignature(x), lb:web:measure:ValueType(y).
/*
* message lb:web:measure:ValueType
*/
lb:web:measure:ValueType(_) -> .lb:web:measure:ValueTypeConstructor[i]=x ->int(i), lb:web:measure:ValueType(x).
lb:web:measure:ValueType_kind[x] = y -> lb:web:measure:ValueType(x), lb:web:measure:ValueType:Kind(y).
lb:web:measure:ValueType_type[x] = y -> lb:web:measure:ValueType(x), lb:web:measure:Type(y).
/*
* message lb:web:measure:Predicate
*/
lb:web:measure:Predicate(_) -> .lb:web:measure:PredicateConstructor[i]=x ->int(i), lb:web:measure:Predicate(x).
lb:web:measure:Predicate_name[x] = y -> lb:web:measure:Predicate(x), string(y).
lb:web:measure:Predicate_stage[x] = y -> lb:web:measure:Predicate(x), string(y).
lb:web:measure:Predicate_delta[x] = y -> lb:web:measure:Predicate(x), string(y).
lb:web:measure:Predicate_volatile[x] = y -> lb:web:measure:Predicate(x), boolean(y).
lb:web:measure:Predicate_update_pred[x] = y -> lb:web:measure:Predicate(x), string(y).
lb:web:measure:Predicate_default_value[x] = y -> lb:web:measure:Predicate(x), lb:web:measure:Column(y).
lb:web:measure:Predicate_relational[x] = y -> lb:web:measure:Predicate(x), boolean(y).
/*
* message lb:web:measure:Dialogue
*/
lb:web:measure:Dialogue(_) -> .lb:web:measure:DialogueConstructor[i]=x ->int(i), lb:web:measure:Dialogue(x).
lb:web:measure:Dialogue_param(x, y) -> lb:web:measure:Dialogue(x), lb:web:measure:ParamExpr(y).
lb:web:measure:Dialogue_response_pred[x] = y -> lb:web:measure:Dialogue(x), string(y).
lb:web:measure:Dialogue_block[x] = y -> lb:web:measure:Dialogue(x), string(y).
/*
* message lb:web:measure:Recalc
*/
lb:web:measure:Recalc(_) -> .lb:web:measure:RecalcConstructor[i]=x ->int(i), lb:web:measure:Recalc(x).
lb:web:measure:Recalc_rule_name[x] = y -> lb:web:measure:Recalc(x), string(y).
/*
* message lb:web:measure:ExprMetric
*/
lb:web:measure:ExprMetric(_) -> .lb:web:measure:ExprMetricConstructor[i]=x ->int(i), lb:web:measure:ExprMetric(x).
lb:web:measure:ExprMetric_measure_str[x] = y -> lb:web:measure:ExprMetric(x), string(y).
lb:web:measure:ExprMetric_measure_expr[x] = y -> lb:web:measure:ExprMetric(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:Slide
*/
lb:web:measure:Slide(_) -> .lb:web:measure:SlideConstructor[i]=x ->int(i), lb:web:measure:Slide(x).
lb:web:measure:Slide_name[x] = y -> lb:web:measure:Slide(x), string(y).
lb:web:measure:Slide_map[x] = y -> lb:web:measure:Slide(x), lb:web:measure:Predicate(y).
lb:web:measure:Slide_source_level[x, i] = y -> lb:web:measure:Slide(x), int(i), lb:web:measure:QualifiedLevel(y).
lb:web:measure:Slide_target_label[x] = y -> lb:web:measure:Slide(x), string(y).
lb:web:measure:Slide_target_dimension[x] = y -> lb:web:measure:Slide(x), string(y).
lb:web:measure:Slide_target_level[x] = y -> lb:web:measure:Slide(x), string(y).
/*
* message lb:web:measure:MultiDimensionalLevelMap
*/
lb:web:measure:MultiDimensionalLevelMap(_) -> .lb:web:measure:MultiDimensionalLevelMapConstructor[i]=x ->int(i), lb:web:measure:MultiDimensionalLevelMap(x).
lb:web:measure:MultiDimensionalLevelMap_name[x] = y -> lb:web:measure:MultiDimensionalLevelMap(x), string(y).
lb:web:measure:MultiDimensionalLevelMap_level_map_pred[x] = y -> lb:web:measure:MultiDimensionalLevelMap(x), string(y).
lb:web:measure:MultiDimensionalLevelMap_source_inter[x] = y -> lb:web:measure:MultiDimensionalLevelMap(x), lb:web:measure:Intersection(y).
lb:web:measure:MultiDimensionalLevelMap_target_label[x] = y -> lb:web:measure:MultiDimensionalLevelMap(x), string(y).
lb:web:measure:MultiDimensionalLevelMap_target_level[x] = y -> lb:web:measure:MultiDimensionalLevelMap(x), string(y).
/*
* message lb:web:measure:Dimension
*/
lb:web:measure:Dimension(_) -> .lb:web:measure:DimensionConstructor[i]=x ->int(i), lb:web:measure:Dimension(x).
lb:web:measure:Dimension_name[x] = y -> lb:web:measure:Dimension(x), string(y).
lb:web:measure:Dimension_level(x, y) -> lb:web:measure:Dimension(x), lb:web:measure:Dimension:Level(y).
lb:web:measure:Dimension_edge(x, y) -> lb:web:measure:Dimension(x), lb:web:measure:Dimension:Edge(y).
lb:web:measure:Dimension_hierarchy(x, y) -> lb:web:measure:Dimension(x), lb:web:measure:Dimension:Hierarchy(y).
lb:web:measure:Dimension_default_hierarchy[x] = y -> lb:web:measure:Dimension(x), string(y).
lb:web:measure:Dimension_top_level[x] = y -> lb:web:measure:Dimension(x), string(y).
lb:web:measure:Dimension_unwinds[x] = y -> lb:web:measure:Dimension(x), boolean(y).
lb:web:measure:Dimension_caption[x] = y -> lb:web:measure:Dimension(x), string(y).
/*
* message lb:web:measure:Attribute
*/
lb:web:measure:Attribute(_) -> .lb:web:measure:AttributeConstructor[i]=x ->int(i), lb:web:measure:Attribute(x).
lb:web:measure:Attribute_name[x] = y -> lb:web:measure:Attribute(x), string(y).
lb:web:measure:Attribute_predicate[x] = y -> lb:web:measure:Attribute(x), lb:web:measure:Predicate(y).
lb:web:measure:Attribute_type[x] = y -> lb:web:measure:Attribute(x), lb:web:measure:Type(y).
/*
* message lb:web:measure:QualifiedLevel
*/
lb:web:measure:QualifiedLevel(_) -> .lb:web:measure:QualifiedLevelConstructor[i]=x ->int(i), lb:web:measure:QualifiedLevel(x).
lb:web:measure:QualifiedLevel_label[x] = y -> lb:web:measure:QualifiedLevel(x), string(y).
lb:web:measure:QualifiedLevel_dimension[x] = y -> lb:web:measure:QualifiedLevel(x), string(y).
lb:web:measure:QualifiedLevel_hierarchy[x] = y -> lb:web:measure:QualifiedLevel(x), string(y).
lb:web:measure:QualifiedLevel_level[x] = y -> lb:web:measure:QualifiedLevel(x), string(y).
/*
* message lb:web:measure:Intersection
*/
lb:web:measure:Intersection(_) -> .lb:web:measure:IntersectionConstructor[i]=x ->int(i), lb:web:measure:Intersection(x).
lb:web:measure:Intersection_qualified_level[x, i] = y -> lb:web:measure:Intersection(x), int(i), lb:web:measure:QualifiedLevel(y).
lb:web:measure:Intersection_variable[x] = y -> lb:web:measure:Intersection(x), string(y).
lb:web:measure:Intersection_expr[x] = y -> lb:web:measure:Intersection(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:Intersection_composite[x] = y -> lb:web:measure:Intersection(x), lb:web:measure:CompositeIntersection(y).
lb:web:measure:Intersection_restriction[x] = y -> lb:web:measure:Intersection(x), lb:web:measure:RestrictionIntersection(y).
/*
* message lb:web:measure:CompositeIntersection
*/
lb:web:measure:CompositeIntersection(_) -> .lb:web:measure:CompositeIntersectionConstructor[i]=x ->int(i), lb:web:measure:CompositeIntersection(x).
lb:web:measure:CompositeIntersection_kind[x] = y -> lb:web:measure:CompositeIntersection(x), lb:web:measure:CompositeIntersection:Kind(y).
lb:web:measure:CompositeIntersection_inter(x, y) -> lb:web:measure:CompositeIntersection(x), lb:web:measure:Intersection(y).
/*
* message lb:web:measure:RestrictionIntersection
*/
lb:web:measure:RestrictionIntersection(_) -> .lb:web:measure:RestrictionIntersectionConstructor[i]=x ->int(i), lb:web:measure:RestrictionIntersection(x).
lb:web:measure:RestrictionIntersection_label(x, y) -> lb:web:measure:RestrictionIntersection(x), string(y).
lb:web:measure:RestrictionIntersection_inter[x] = y -> lb:web:measure:RestrictionIntersection(x), lb:web:measure:Intersection(y).
/*
* message lb:web:measure:ExprSubst
*/
lb:web:measure:ExprSubst(_) -> .lb:web:measure:ExprSubstConstructor[i]=x ->int(i), lb:web:measure:ExprSubst(x).
lb:web:measure:ExprSubst_pred[x] = y -> lb:web:measure:ExprSubst(x), lb:web:measure:Predicate(y).
lb:web:measure:ExprSubst_replacement_expr[x] = y -> lb:web:measure:ExprSubst(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:ExprSubst_phase[x] = y -> lb:web:measure:ExprSubst(x), lb:web:measure:ExprSubst:Phase(y).
lb:web:measure:ExprSubst_expr[x] = y -> lb:web:measure:ExprSubst(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:ExprSubst_expr_str[x] = y -> lb:web:measure:ExprSubst(x), string(y).
/*
* message lb:web:measure:Request
*/
lb:web:measure:Request(_) -> .lb:web:measure:RequestConstructor[i]=x ->int(i), lb:web:measure:Request(x).
lb:web:measure:Request_admin_request[x] = y -> lb:web:measure:Request(x), lb:web:measure:AdminRequest(y).
lb:web:measure:Request_relation[x, i] = y -> lb:web:measure:Request(x), int(i), lb:web:measure:RelationBinding(y).
lb:web:measure:Request_query_request[x, i] = y -> lb:web:measure:Request(x), int(i), lb:web:measure:QueryRequest(y).
lb:web:measure:Request_model_request[x] = y -> lb:web:measure:Request(x), lb:web:measure:ModelRequest(y).
lb:web:measure:Request_install_request[x] = y -> lb:web:measure:Request(x), lb:web:measure:InstallRequest(y).
lb:web:measure:Request_update_request[x, i] = y -> lb:web:measure:Request(x), int(i), lb:web:measure:UpdateRequest(y).
lb:web:measure:Request_editability_request[x] = y -> lb:web:measure:Request(x), lb:web:measure:EditabilityRequest(y).
lb:web:measure:Request_metric_lock[x, i] = y -> lb:web:measure:Request(x), int(i), lb:web:measure:MetricLock(y).
lb:web:measure:Request_dimension_lock[x, i] = y -> lb:web:measure:Request(x), int(i), lb:web:measure:DimensionLock(y).
lb:web:measure:Request_inverse[x, i] = y -> lb:web:measure:Request(x), int(i), lb:web:measure:InverseGroup(y).
lb:web:measure:Request_fault_point[x] = y -> lb:web:measure:Request(x), string(y).
lb:web:measure:Request_profile[x] = y -> lb:web:measure:Request(x), boolean(y).
/*
* message lb:web:measure:ModelRequest
*/
lb:web:measure:ModelRequest(_) -> .lb:web:measure:ModelRequestConstructor[i]=x ->int(i), lb:web:measure:ModelRequest(x).
/*
* message lb:web:measure:AdminRequest
*/
lb:web:measure:AdminRequest(_) -> .lb:web:measure:AdminRequestConstructor[i]=x ->int(i), lb:web:measure:AdminRequest(x).
lb:web:measure:AdminRequest_kind[x] = y -> lb:web:measure:AdminRequest(x), lb:web:measure:AdminRequest:Kind(y).
lb:web:measure:AdminRequest_log_level[x] = y -> lb:web:measure:AdminRequest(x), string(y).
lb:web:measure:AdminRequest_compile_format[x] = y -> lb:web:measure:AdminRequest(x), string(y).
lb:web:measure:AdminRequest_code_format[x] = y -> lb:web:measure:AdminRequest(x), string(y).
lb:web:measure:AdminRequest_emit_comments[x] = y -> lb:web:measure:AdminRequest(x), boolean(y).
lb:web:measure:AdminRequest_short_names[x] = y -> lb:web:measure:AdminRequest(x), boolean(y).
lb:web:measure:AdminRequest_query_after_fixpoint[x] = y -> lb:web:measure:AdminRequest(x), boolean(y).
lb:web:measure:AdminRequest_fatal_warnings[x] = y -> lb:web:measure:AdminRequest(x), boolean(y).
lb:web:measure:AdminRequest_default_value_agg[x] = y -> lb:web:measure:AdminRequest(x), boolean(y).
/*
* message lb:web:measure:InstallRequest
*/
lb:web:measure:InstallRequest(_) -> .lb:web:measure:InstallRequestConstructor[i]=x ->int(i), lb:web:measure:InstallRequest(x).
lb:web:measure:InstallRequest_measure_expr(x, y) -> lb:web:measure:InstallRequest(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:InstallRequest_measure_str(x, y) -> lb:web:measure:InstallRequest(x), string(y).
lb:web:measure:InstallRequest_rules[x] = y -> lb:web:measure:InstallRequest(x), string(y).
lb:web:measure:InstallRequest_limited_rewrites[x] = y -> lb:web:measure:InstallRequest(x), boolean(y).
/*
* message lb:web:measure:QueryRequest
*/
lb:web:measure:QueryRequest(_) -> .lb:web:measure:QueryRequestConstructor[i]=x ->int(i), lb:web:measure:QueryRequest(x).
lb:web:measure:QueryRequest_report_name[x] = y -> lb:web:measure:QueryRequest(x), string(y).
lb:web:measure:QueryRequest_row_limit[x] = y -> lb:web:measure:QueryRequest(x), int(y).
lb:web:measure:QueryRequest_return_row_numbers[x] = y -> lb:web:measure:QueryRequest(x), boolean(y).
lb:web:measure:QueryRequest_key[x, i] = y -> lb:web:measure:QueryRequest(x), int(i), lb:web:measure:KeyRequest(y).
lb:web:measure:QueryRequest_measure[x, i] = y -> lb:web:measure:QueryRequest(x), int(i), lb:web:measure:MeasureExpr(y).
lb:web:measure:QueryRequest_measure_str[x, i] = y -> lb:web:measure:QueryRequest(x), int(i), string(y).
lb:web:measure:QueryRequest_limited_rewrites[x] = y -> lb:web:measure:QueryRequest(x), boolean(y).
lb:web:measure:QueryRequest_default_values[x] = y -> lb:web:measure:QueryRequest(x), boolean(y).
lb:web:measure:QueryRequest_binary_decimal_columns[x] = y -> lb:web:measure:QueryRequest(x), boolean(y).
/*
* message lb:web:measure:KeyRequest
*/
lb:web:measure:KeyRequest(_) -> .lb:web:measure:KeyRequestConstructor[i]=x ->int(i), lb:web:measure:KeyRequest(x).
lb:web:measure:KeyRequest_qualified_level[x] = y -> lb:web:measure:KeyRequest(x), lb:web:measure:QualifiedLevel(y).
lb:web:measure:KeyRequest_attribute[x] = y -> lb:web:measure:KeyRequest(x), string(y).
/*
* message lb:web:measure:RelationBinding
*/
lb:web:measure:RelationBinding(_) -> .lb:web:measure:RelationBindingConstructor[i]=x ->int(i), lb:web:measure:RelationBinding(x).
lb:web:measure:RelationBinding_param[x] = y -> lb:web:measure:RelationBinding(x), lb:web:measure:ParamExpr(y).
lb:web:measure:RelationBinding_expr[x] = y -> lb:web:measure:RelationBinding(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:Response
*/
lb:web:measure:Response(_) -> .lb:web:measure:ResponseConstructor[i]=x ->int(i), lb:web:measure:Response(x).
lb:web:measure:Response_report[x, i] = y -> lb:web:measure:Response(x), int(i), lb:web:measure:Report(y).
lb:web:measure:Response_admin[x] = y -> lb:web:measure:Response(x), lb:web:measure:AdminResponse(y).
lb:web:measure:Response_model[x] = y -> lb:web:measure:Response(x), lb:web:measure:MeasureModel(y).
lb:web:measure:Response_editability[x] = y -> lb:web:measure:Response(x), lb:web:measure:EditabilityResponse(y).
lb:web:measure:Response_profile[x] = y -> lb:web:measure:Response(x), lb:web:measure:LiteralExpr(y).
lb:web:measure:Response_problem[x, i] = y -> lb:web:measure:Response(x), int(i), lb:web:measure:Problem(y).
/*
* message lb:web:measure:AdminResponse
*/
lb:web:measure:AdminResponse(_) -> .lb:web:measure:AdminResponseConstructor[i]=x ->int(i), lb:web:measure:AdminResponse(x).
lb:web:measure:AdminResponse_workspace[x] = y -> lb:web:measure:AdminResponse(x), string(y).
/*
* message lb:web:measure:Report
*/
lb:web:measure:Report(_) -> .lb:web:measure:ReportConstructor[i]=x ->int(i), lb:web:measure:Report(x).
lb:web:measure:Report_name[x] = y -> lb:web:measure:Report(x), string(y).
lb:web:measure:Report_report_column[x, i] = y -> lb:web:measure:Report(x), int(i), lb:web:measure:Column(y).
/*
* message lb:web:measure:Column
*/
lb:web:measure:Column(_) -> .lb:web:measure:ColumnConstructor[i]=x ->int(i), lb:web:measure:Column(x).
lb:web:measure:Column_bool_column[x] = y -> lb:web:measure:Column(x), lb:web:measure:BoolColumn(y).
lb:web:measure:Column_int_column[x] = y -> lb:web:measure:Column(x), lb:web:measure:IntColumn(y).
lb:web:measure:Column_float_column[x] = y -> lb:web:measure:Column(x), lb:web:measure:FloatColumn(y).
lb:web:measure:Column_string_column[x] = y -> lb:web:measure:Column(x), lb:web:measure:StringColumn(y).
lb:web:measure:Column_decimal_column[x] = y -> lb:web:measure:Column(x), lb:web:measure:DecimalColumn(y).
/*
* message lb:web:measure:BoolColumn
*/
lb:web:measure:BoolColumn(_) -> .lb:web:measure:BoolColumnConstructor[i]=x ->int(i), lb:web:measure:BoolColumn(x).
lb:web:measure:BoolColumn_defaultValue[x] = y -> lb:web:measure:BoolColumn(x), boolean(y).
lb:web:measure:BoolColumn_value[x, i] = y -> lb:web:measure:BoolColumn(x), int(i), boolean(y).
/*
* message lb:web:measure:IntColumn
*/
lb:web:measure:IntColumn(_) -> .lb:web:measure:IntColumnConstructor[i]=x ->int(i), lb:web:measure:IntColumn(x).
lb:web:measure:IntColumn_defaultValue[x] = y -> lb:web:measure:IntColumn(x), int(y).
lb:web:measure:IntColumn_value[x, i] = y -> lb:web:measure:IntColumn(x), int(i), int(y).
/*
* message lb:web:measure:FloatColumn
*/
lb:web:measure:FloatColumn(_) -> .lb:web:measure:FloatColumnConstructor[i]=x ->int(i), lb:web:measure:FloatColumn(x).
lb:web:measure:FloatColumn_defaultValue[x] = y -> lb:web:measure:FloatColumn(x), float(y).
lb:web:measure:FloatColumn_value[x, i] = y -> lb:web:measure:FloatColumn(x), int(i), float(y).
/*
* message lb:web:measure:StringColumn
*/
lb:web:measure:StringColumn(_) -> .lb:web:measure:StringColumnConstructor[i]=x ->int(i), lb:web:measure:StringColumn(x).
lb:web:measure:StringColumn_defaultValue[x] = y -> lb:web:measure:StringColumn(x), string(y).
lb:web:measure:StringColumn_value[x, i] = y -> lb:web:measure:StringColumn(x), int(i), string(y).
/*
* message lb:web:measure:DecimalColumn
*/
lb:web:measure:DecimalColumn(_) -> .lb:web:measure:DecimalColumnConstructor[i]=x ->int(i), lb:web:measure:DecimalColumn(x).
lb:web:measure:DecimalColumn_defaultValue[x] = y -> lb:web:measure:DecimalColumn(x), string(y).
lb:web:measure:DecimalColumn_value[x, i] = y -> lb:web:measure:DecimalColumn(x), int(i), string(y).
lb:web:measure:DecimalColumn_negativeDefault[x] = y -> lb:web:measure:DecimalColumn(x), boolean(y).
lb:web:measure:DecimalColumn_integralDefault[x] = y -> lb:web:measure:DecimalColumn(x), int(y).
lb:web:measure:DecimalColumn_fractionDefault[x] = y -> lb:web:measure:DecimalColumn(x), int(y).
lb:web:measure:DecimalColumn_negative[x, i] = y -> lb:web:measure:DecimalColumn(x), int(i), boolean(y).
lb:web:measure:DecimalColumn_integral_digit[x, i] = y -> lb:web:measure:DecimalColumn(x), int(i), int(y).
lb:web:measure:DecimalColumn_fraction_digit[x, i] = y -> lb:web:measure:DecimalColumn(x), int(i), int(y).
/*
* message lb:web:measure:Annotation
*/
lb:web:measure:Annotation(_) -> .lb:web:measure:AnnotationConstructor[i]=x ->int(i), lb:web:measure:Annotation(x).
lb:web:measure:Annotation_name[x] = y -> lb:web:measure:Annotation(x), string(y).
lb:web:measure:Annotation_values[x] = y -> lb:web:measure:Annotation(x), lb:web:measure:Column(y).
/*
* message lb:web:measure:MeasureExpr
*/
lb:web:measure:MeasureExpr(_) -> .lb:web:measure:MeasureExprConstructor[i]=x ->int(i), lb:web:measure:MeasureExpr(x).
lb:web:measure:MeasureExpr_kind[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:MeasureExpr:Kind(y).
lb:web:measure:MeasureExpr_str[x] = y -> lb:web:measure:MeasureExpr(x), string(y).
lb:web:measure:MeasureExpr_metric[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:MetricExpr(y).
lb:web:measure:MeasureExpr_aggregation[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:AggExpr(y).
lb:web:measure:MeasureExpr_filter[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:FilterExpr(y).
lb:web:measure:MeasureExpr_composite[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:CompositeExpr(y).
lb:web:measure:MeasureExpr_attribute[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:AttributeExpr(y).
lb:web:measure:MeasureExpr_op[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:OpExpr(y).
lb:web:measure:MeasureExpr_widen[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:WidenExpr(y).
lb:web:measure:MeasureExpr_dice[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:DiceExpr(y).
lb:web:measure:MeasureExpr_drop[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:DropExpr(y).
lb:web:measure:MeasureExpr_difference[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:DifferenceExpr(y).
lb:web:measure:MeasureExpr_demote[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:DemoteExpr(y).
lb:web:measure:MeasureExpr_promote[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:PromoteExpr(y).
lb:web:measure:MeasureExpr_prev[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:PrevExpr(y).
lb:web:measure:MeasureExpr_override[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:OverrideExpr(y).
lb:web:measure:MeasureExpr_delta[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:DeltaExpr(y).
lb:web:measure:MeasureExpr_param[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:ParamExpr(y).
lb:web:measure:MeasureExpr_split[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:SplitExpr(y).
lb:web:measure:MeasureExpr_relabel[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:RelabelExpr(y).
lb:web:measure:MeasureExpr_variable[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:VarExpr(y).
lb:web:measure:MeasureExpr_abstraction[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:AbsExpr(y).
lb:web:measure:MeasureExpr_application[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:AppExpr(y).
lb:web:measure:MeasureExpr_literal[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:LiteralExpr(y).
lb:web:measure:MeasureExpr_cast[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:CastExpr(y).
lb:web:measure:MeasureExpr_region[x] = y -> lb:web:measure:MeasureExpr(x), lb:web:measure:common:Region(y).
lb:web:measure:MeasureExpr_annotation[x, i] = y -> lb:web:measure:MeasureExpr(x), int(i), lb:web:measure:Annotation(y).
/*
* message lb:web:measure:VarExpr
*/
lb:web:measure:VarExpr(_) -> .lb:web:measure:VarExprConstructor[i]=x ->int(i), lb:web:measure:VarExpr(x).
lb:web:measure:VarExpr_name[x] = y -> lb:web:measure:VarExpr(x), string(y).
/*
* message lb:web:measure:AbsExpr
*/
lb:web:measure:AbsExpr(_) -> .lb:web:measure:AbsExprConstructor[i]=x ->int(i), lb:web:measure:AbsExpr(x).
lb:web:measure:AbsExpr_inter_arg[x, i] = y -> lb:web:measure:AbsExpr(x), int(i), lb:web:measure:AbsExpr:InterArgument(y).
lb:web:measure:AbsExpr_expr_arg[x, i] = y -> lb:web:measure:AbsExpr(x), int(i), lb:web:measure:AbsExpr:ExprArgument(y).
lb:web:measure:AbsExpr_body[x] = y -> lb:web:measure:AbsExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:AppExpr
*/
lb:web:measure:AppExpr(_) -> .lb:web:measure:AppExprConstructor[i]=x ->int(i), lb:web:measure:AppExpr(x).
lb:web:measure:AppExpr_abstraction[x] = y -> lb:web:measure:AppExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:AppExpr_inter_arg[x, i] = y -> lb:web:measure:AppExpr(x), int(i), lb:web:measure:AppExpr:InterArgument(y).
lb:web:measure:AppExpr_expr_arg[x, i] = y -> lb:web:measure:AppExpr(x), int(i), lb:web:measure:AppExpr:ExprArgument(y).
/*
* message lb:web:measure:LiteralExpr
*/
lb:web:measure:LiteralExpr(_) -> .lb:web:measure:LiteralExprConstructor[i]=x ->int(i), lb:web:measure:LiteralExpr(x).
lb:web:measure:LiteralExpr_kind[x] = y -> lb:web:measure:LiteralExpr(x), lb:web:measure:LiteralExpr:Kind(y).
lb:web:measure:LiteralExpr_signature[x] = y -> lb:web:measure:LiteralExpr(x), lb:web:measure:BaseSignature(y).
lb:web:measure:LiteralExpr_column[x, i] = y -> lb:web:measure:LiteralExpr(x), int(i), lb:web:measure:Column(y).
/*
* message lb:web:measure:WidenExpr
*/
lb:web:measure:WidenExpr(_) -> .lb:web:measure:WidenExprConstructor[i]=x ->int(i), lb:web:measure:WidenExpr(x).
lb:web:measure:WidenExpr_expr[x] = y -> lb:web:measure:WidenExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:WidenExpr_inter[x] = y -> lb:web:measure:WidenExpr(x), lb:web:measure:Intersection(y).
/*
* message lb:web:measure:DropExpr
*/
lb:web:measure:DropExpr(_) -> .lb:web:measure:DropExprConstructor[i]=x ->int(i), lb:web:measure:DropExpr(x).
lb:web:measure:DropExpr_expr[x] = y -> lb:web:measure:DropExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:OverrideExpr
*/
lb:web:measure:OverrideExpr(_) -> .lb:web:measure:OverrideExprConstructor[i]=x ->int(i), lb:web:measure:OverrideExpr(x).
lb:web:measure:OverrideExpr_expr[x, i] = y -> lb:web:measure:OverrideExpr(x), int(i), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:PrevExpr
*/
lb:web:measure:PrevExpr(_) -> .lb:web:measure:PrevExprConstructor[i]=x ->int(i), lb:web:measure:PrevExpr(x).
lb:web:measure:PrevExpr_expr[x] = y -> lb:web:measure:PrevExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:DeltaExpr
*/
lb:web:measure:DeltaExpr(_) -> .lb:web:measure:DeltaExprConstructor[i]=x ->int(i), lb:web:measure:DeltaExpr(x).
lb:web:measure:DeltaExpr_kind[x] = y -> lb:web:measure:DeltaExpr(x), lb:web:measure:DeltaExpr:Kind(y).
lb:web:measure:DeltaExpr_expr[x] = y -> lb:web:measure:DeltaExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:DemoteExpr
*/
lb:web:measure:DemoteExpr(_) -> .lb:web:measure:DemoteExprConstructor[i]=x ->int(i), lb:web:measure:DemoteExpr(x).
lb:web:measure:DemoteExpr_expr[x] = y -> lb:web:measure:DemoteExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:DemoteExpr_dimension[x] = y -> lb:web:measure:DemoteExpr(x), string(y).
lb:web:measure:DemoteExpr_label[x] = y -> lb:web:measure:DemoteExpr(x), string(y).
/*
* message lb:web:measure:PromoteExpr
*/
lb:web:measure:PromoteExpr(_) -> .lb:web:measure:PromoteExprConstructor[i]=x ->int(i), lb:web:measure:PromoteExpr(x).
lb:web:measure:PromoteExpr_expr[x] = y -> lb:web:measure:PromoteExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:PromoteExpr_label[x] = y -> lb:web:measure:PromoteExpr(x), string(y).
/*
* message lb:web:measure:DifferenceExpr
*/
lb:web:measure:DifferenceExpr(_) -> .lb:web:measure:DifferenceExprConstructor[i]=x ->int(i), lb:web:measure:DifferenceExpr(x).
lb:web:measure:DifferenceExpr_left[x] = y -> lb:web:measure:DifferenceExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:DifferenceExpr_right[x] = y -> lb:web:measure:DifferenceExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:DiceExpr
*/
lb:web:measure:DiceExpr(_) -> .lb:web:measure:DiceExprConstructor[i]=x ->int(i), lb:web:measure:DiceExpr(x).
lb:web:measure:DiceExpr_expr[x] = y -> lb:web:measure:DiceExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:DiceExpr_dicer(x, y) -> lb:web:measure:DiceExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:DiceExpr_is_disjunction[x] = y -> lb:web:measure:DiceExpr(x), boolean(y).
/*
* message lb:web:measure:Op
*/
lb:web:measure:Op(_) -> .lb:web:measure:OpConstructor[i]=x ->int(i), lb:web:measure:Op(x).
lb:web:measure:Op_kind[x] = y -> lb:web:measure:Op(x), lb:web:measure:Op:Kind(y).
lb:web:measure:Op_name[x] = y -> lb:web:measure:Op(x), string(y).
/*
* message lb:web:measure:OpExpr
*/
lb:web:measure:OpExpr(_) -> .lb:web:measure:OpExprConstructor[i]=x ->int(i), lb:web:measure:OpExpr(x).
lb:web:measure:OpExpr_op[x] = y -> lb:web:measure:OpExpr(x), lb:web:measure:Op(y).
lb:web:measure:OpExpr_expr[x, i] = y -> lb:web:measure:OpExpr(x), int(i), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:CastExpr
*/
lb:web:measure:CastExpr(_) -> .lb:web:measure:CastExprConstructor[i]=x ->int(i), lb:web:measure:CastExpr(x).
lb:web:measure:CastExpr_expr[x] = y -> lb:web:measure:CastExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:CastExpr_type[x] = y -> lb:web:measure:CastExpr(x), lb:web:measure:Type(y).
/*
* message lb:web:measure:CompositeExpr
*/
lb:web:measure:CompositeExpr(_) -> .lb:web:measure:CompositeExprConstructor[i]=x ->int(i), lb:web:measure:CompositeExpr(x).
lb:web:measure:CompositeExpr_kind[x] = y -> lb:web:measure:CompositeExpr(x), lb:web:measure:CompositeExpr:Kind(y).
lb:web:measure:CompositeExpr_expr(x, y) -> lb:web:measure:CompositeExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:AttributeExpr
*/
lb:web:measure:AttributeExpr(_) -> .lb:web:measure:AttributeExprConstructor[i]=x ->int(i), lb:web:measure:AttributeExpr(x).
lb:web:measure:AttributeExpr_qualified_level[x] = y -> lb:web:measure:AttributeExpr(x), lb:web:measure:QualifiedLevel(y).
lb:web:measure:AttributeExpr_attribute[x] = y -> lb:web:measure:AttributeExpr(x), string(y).
/*
* message lb:web:measure:ParamExpr
*/
lb:web:measure:ParamExpr(_) -> .lb:web:measure:ParamExprConstructor[i]=x ->int(i), lb:web:measure:ParamExpr(x).
lb:web:measure:ParamExpr_name[x] = y -> lb:web:measure:ParamExpr(x), string(y).
lb:web:measure:ParamExpr_signature[x] = y -> lb:web:measure:ParamExpr(x), lb:web:measure:BaseSignature(y).
/*
* message lb:web:measure:MetricExpr
*/
lb:web:measure:MetricExpr(_) -> .lb:web:measure:MetricExprConstructor[i]=x ->int(i), lb:web:measure:MetricExpr(x).
lb:web:measure:MetricExpr_name[x] = y -> lb:web:measure:MetricExpr(x), string(y).
lb:web:measure:MetricExpr_metric[x] = y -> lb:web:measure:MetricExpr(x), lb:web:measure:Metric(y).
/*
* message lb:web:measure:FilterExpr
*/
lb:web:measure:FilterExpr(_) -> .lb:web:measure:FilterExprConstructor[i]=x ->int(i), lb:web:measure:FilterExpr(x).
lb:web:measure:FilterExpr_expr[x] = y -> lb:web:measure:FilterExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:FilterExpr_comparison(x, y) -> lb:web:measure:FilterExpr(x), lb:web:measure:Comparison(y).
lb:web:measure:FilterExpr_is_disjunction[x] = y -> lb:web:measure:FilterExpr(x), boolean(y).
/*
* message lb:web:measure:Comparison
*/
lb:web:measure:Comparison(_) -> .lb:web:measure:ComparisonConstructor[i]=x ->int(i), lb:web:measure:Comparison(x).
lb:web:measure:Comparison_op[x] = y -> lb:web:measure:Comparison(x), lb:web:measure:Comparison:Kind(y).
lb:web:measure:Comparison_expr[x] = y -> lb:web:measure:Comparison(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:AggExpr
*/
lb:web:measure:AggExpr(_) -> .lb:web:measure:AggExprConstructor[i]=x ->int(i), lb:web:measure:AggExpr(x).
lb:web:measure:AggExpr_method[x] = y -> lb:web:measure:AggExpr(x), lb:web:measure:AggExpr:Method(y).
lb:web:measure:AggExpr_expr[x] = y -> lb:web:measure:AggExpr(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:AggExpr_grouping(x, y) -> lb:web:measure:AggExpr(x), lb:web:measure:AggExpr:Grouping(y).
lb:web:measure:AggExpr_inter[x] = y -> lb:web:measure:AggExpr(x), lb:web:measure:Intersection(y).
/*
* message lb:web:measure:LabelMap
*/
lb:web:measure:LabelMap(_) -> .lb:web:measure:LabelMapConstructor[i]=x ->int(i), lb:web:measure:LabelMap(x).
lb:web:measure:LabelMap_source[x] = y -> lb:web:measure:LabelMap(x), string(y).
lb:web:measure:LabelMap_target[x] = y -> lb:web:measure:LabelMap(x), string(y).
/*
* message lb:web:measure:SplitExpr
*/
lb:web:measure:SplitExpr(_) -> .lb:web:measure:SplitExprConstructor[i]=x ->int(i), lb:web:measure:SplitExpr(x).
lb:web:measure:SplitExpr_map[x, i] = y -> lb:web:measure:SplitExpr(x), int(i), lb:web:measure:LabelMap(y).
lb:web:measure:SplitExpr_expr[x] = y -> lb:web:measure:SplitExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:RelabelExpr
*/
lb:web:measure:RelabelExpr(_) -> .lb:web:measure:RelabelExprConstructor[i]=x ->int(i), lb:web:measure:RelabelExpr(x).
lb:web:measure:RelabelExpr_map[x, i] = y -> lb:web:measure:RelabelExpr(x), int(i), lb:web:measure:LabelMap(y).
lb:web:measure:RelabelExpr_expr[x] = y -> lb:web:measure:RelabelExpr(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:MetricInter
*/
lb:web:measure:MetricInter(_) -> .lb:web:measure:MetricInterConstructor[i]=x ->int(i), lb:web:measure:MetricInter(x).
lb:web:measure:MetricInter_metric[x] = y -> lb:web:measure:MetricInter(x), string(y).
lb:web:measure:MetricInter_inter[x] = y -> lb:web:measure:MetricInter(x), lb:web:measure:Intersection(y).
/*
* message lb:web:measure:EditabilityRequest
*/
lb:web:measure:EditabilityRequest(_) -> .lb:web:measure:EditabilityRequestConstructor[i]=x ->int(i), lb:web:measure:EditabilityRequest(x).
lb:web:measure:EditabilityRequest_edited(x, y) -> lb:web:measure:EditabilityRequest(x), lb:web:measure:MetricInter(y).
lb:web:measure:EditabilityRequest_visible(x, y) -> lb:web:measure:EditabilityRequest(x), lb:web:measure:MetricInter(y).
/*
* message lb:web:measure:EditabilityResponse
*/
lb:web:measure:EditabilityResponse(_) -> .lb:web:measure:EditabilityResponseConstructor[i]=x ->int(i), lb:web:measure:EditabilityResponse(x).
lb:web:measure:EditabilityResponse_consistent[x] = y -> lb:web:measure:EditabilityResponse(x), boolean(y).
lb:web:measure:EditabilityResponse_editable(x, y) -> lb:web:measure:EditabilityResponse(x), lb:web:measure:MetricInter(y).
/*
* message lb:web:measure:UpdateRequest
*/
lb:web:measure:UpdateRequest(_) -> .lb:web:measure:UpdateRequestConstructor[i]=x ->int(i), lb:web:measure:UpdateRequest(x).
lb:web:measure:UpdateRequest_expr[x] = y -> lb:web:measure:UpdateRequest(x), lb:web:measure:UpdateExpr(y).
lb:web:measure:UpdateRequest_input[x] = y -> lb:web:measure:UpdateRequest(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:MetricLock
*/
lb:web:measure:MetricLock(_) -> .lb:web:measure:MetricLockConstructor[i]=x ->int(i), lb:web:measure:MetricLock(x).
lb:web:measure:MetricLock_metric[x] = y -> lb:web:measure:MetricLock(x), string(y).
lb:web:measure:MetricLock_expr[x] = y -> lb:web:measure:MetricLock(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:MetricLock_expr_str[x] = y -> lb:web:measure:MetricLock(x), string(y).
lb:web:measure:MetricLock_convertible[x] = y -> lb:web:measure:MetricLock(x), boolean(y).
/*
* message lb:web:measure:DimensionLock
*/
lb:web:measure:DimensionLock(_) -> .lb:web:measure:DimensionLockConstructor[i]=x ->int(i), lb:web:measure:DimensionLock(x).
lb:web:measure:DimensionLock_label[x] = y -> lb:web:measure:DimensionLock(x), string(y).
lb:web:measure:DimensionLock_dimension[x] = y -> lb:web:measure:DimensionLock(x), string(y).
lb:web:measure:DimensionLock_expr[x] = y -> lb:web:measure:DimensionLock(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:DimensionLock_expr_str[x] = y -> lb:web:measure:DimensionLock(x), string(y).
/*
* message lb:web:measure:Inverse
*/
lb:web:measure:Inverse(_) -> .lb:web:measure:InverseConstructor[i]=x ->int(i), lb:web:measure:Inverse(x).
lb:web:measure:Inverse_metric[x] = y -> lb:web:measure:Inverse(x), string(y).
lb:web:measure:Inverse_expr[x] = y -> lb:web:measure:Inverse(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:Inverse_expr_str[x] = y -> lb:web:measure:Inverse(x), string(y).
/*
* message lb:web:measure:InverseGroup
*/
lb:web:measure:InverseGroup(_) -> .lb:web:measure:InverseGroupConstructor[i]=x ->int(i), lb:web:measure:InverseGroup(x).
lb:web:measure:InverseGroup_metric[x] = y -> lb:web:measure:InverseGroup(x), string(y).
lb:web:measure:InverseGroup_inverse(x, y) -> lb:web:measure:InverseGroup(x), lb:web:measure:Inverse(y).
/*
* message lb:web:measure:UpdateExpr
*/
lb:web:measure:UpdateExpr(_) -> .lb:web:measure:UpdateExprConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr(x).
lb:web:measure:UpdateExpr_kind[x] = y -> lb:web:measure:UpdateExpr(x), lb:web:measure:UpdateExpr:Kind(y).
lb:web:measure:UpdateExpr_metric[x] = y -> lb:web:measure:UpdateExpr(x), string(y).
lb:web:measure:UpdateExpr_target[x] = y -> lb:web:measure:UpdateExpr(x), lb:web:measure:UpdateExpr:Target(y).
lb:web:measure:UpdateExpr_signature[x] = y -> lb:web:measure:UpdateExpr(x), lb:web:measure:BaseSignature(y).
lb:web:measure:UpdateExpr_transform[x, i] = y -> lb:web:measure:UpdateExpr(x), int(i), lb:web:measure:UpdateExpr:Transform(y).
/*
* message lb:web:measure:PartitionResponse
*/
lb:web:measure:PartitionResponse(_) -> .lb:web:measure:PartitionResponseConstructor[i]=x ->int(i), lb:web:measure:PartitionResponse(x).
lb:web:measure:PartitionResponse_broadcast[x] = y -> lb:web:measure:PartitionResponse(x), boolean(y).
lb:web:measure:PartitionResponse_partitionID(x, y) -> lb:web:measure:PartitionResponse(x), string(y).
/*
* message lb:web:measure:TypeDefinition
*/
lb:web:measure:TypeDefinition(_) -> .lb:web:measure:TypeDefinitionConstructor[i]=x ->int(i), lb:web:measure:TypeDefinition(x).
lb:web:measure:TypeDefinition_type[x] = y -> lb:web:measure:TypeDefinition(x), string(y).
lb:web:measure:TypeDefinition_backing_type[x] = y -> lb:web:measure:TypeDefinition(x), lb:web:measure:Type(y).
lb:web:measure:TypeDefinition_conversion_pred[x] = y -> lb:web:measure:TypeDefinition(x), string(y).
lang:constructor(`lb:web:measure:ProblemConstructor).
lang:constructor(`lb:web:measure:TypeConstructor).
lang:constructor(`lb:web:measure:MeasureModelConstructor).
lang:constructor(`lb:web:measure:VarOrderConstructor).
lang:constructor(`lb:web:measure:OpDefConstructor).
lang:constructor(`lb:web:measure:AggDefConstructor).
lang:constructor(`lb:web:measure:SpreadDefConstructor).
lang:constructor(`lb:web:measure:MetricConstructor).
lang:constructor(`lb:web:measure:SignatureConstructor).
lang:constructor(`lb:web:measure:BaseSignatureConstructor).
lang:constructor(`lb:web:measure:ValueTypeConstructor).
lang:constructor(`lb:web:measure:PredicateConstructor).
lang:constructor(`lb:web:measure:DialogueConstructor).
lang:constructor(`lb:web:measure:RecalcConstructor).
lang:constructor(`lb:web:measure:ExprMetricConstructor).
lang:constructor(`lb:web:measure:SlideConstructor).
lang:constructor(`lb:web:measure:MultiDimensionalLevelMapConstructor).
lang:constructor(`lb:web:measure:DimensionConstructor).
lang:constructor(`lb:web:measure:AttributeConstructor).
lang:constructor(`lb:web:measure:QualifiedLevelConstructor).
lang:constructor(`lb:web:measure:IntersectionConstructor).
lang:constructor(`lb:web:measure:CompositeIntersectionConstructor).
lang:constructor(`lb:web:measure:RestrictionIntersectionConstructor).
lang:constructor(`lb:web:measure:ExprSubstConstructor).
lang:constructor(`lb:web:measure:RequestConstructor).
lang:constructor(`lb:web:measure:ModelRequestConstructor).
lang:constructor(`lb:web:measure:AdminRequestConstructor).
lang:constructor(`lb:web:measure:InstallRequestConstructor).
lang:constructor(`lb:web:measure:QueryRequestConstructor).
lang:constructor(`lb:web:measure:KeyRequestConstructor).
lang:constructor(`lb:web:measure:RelationBindingConstructor).
lang:constructor(`lb:web:measure:ResponseConstructor).
lang:constructor(`lb:web:measure:AdminResponseConstructor).
lang:constructor(`lb:web:measure:ReportConstructor).
lang:constructor(`lb:web:measure:ColumnConstructor).
lang:constructor(`lb:web:measure:BoolColumnConstructor).
lang:constructor(`lb:web:measure:IntColumnConstructor).
lang:constructor(`lb:web:measure:FloatColumnConstructor).
lang:constructor(`lb:web:measure:StringColumnConstructor).
lang:constructor(`lb:web:measure:DecimalColumnConstructor).
lang:constructor(`lb:web:measure:AnnotationConstructor).
lang:constructor(`lb:web:measure:MeasureExprConstructor).
lang:constructor(`lb:web:measure:VarExprConstructor).
lang:constructor(`lb:web:measure:AbsExprConstructor).
lang:constructor(`lb:web:measure:AppExprConstructor).
lang:constructor(`lb:web:measure:LiteralExprConstructor).
lang:constructor(`lb:web:measure:WidenExprConstructor).
lang:constructor(`lb:web:measure:DropExprConstructor).
lang:constructor(`lb:web:measure:OverrideExprConstructor).
lang:constructor(`lb:web:measure:PrevExprConstructor).
lang:constructor(`lb:web:measure:DeltaExprConstructor).
lang:constructor(`lb:web:measure:DemoteExprConstructor).
lang:constructor(`lb:web:measure:PromoteExprConstructor).
lang:constructor(`lb:web:measure:DifferenceExprConstructor).
lang:constructor(`lb:web:measure:DiceExprConstructor).
lang:constructor(`lb:web:measure:OpConstructor).
lang:constructor(`lb:web:measure:OpExprConstructor).
lang:constructor(`lb:web:measure:CastExprConstructor).
lang:constructor(`lb:web:measure:CompositeExprConstructor).
lang:constructor(`lb:web:measure:AttributeExprConstructor).
lang:constructor(`lb:web:measure:ParamExprConstructor).
lang:constructor(`lb:web:measure:MetricExprConstructor).
lang:constructor(`lb:web:measure:FilterExprConstructor).
lang:constructor(`lb:web:measure:ComparisonConstructor).
lang:constructor(`lb:web:measure:AggExprConstructor).
lang:constructor(`lb:web:measure:LabelMapConstructor).
lang:constructor(`lb:web:measure:SplitExprConstructor).
lang:constructor(`lb:web:measure:RelabelExprConstructor).
lang:constructor(`lb:web:measure:MetricInterConstructor).
lang:constructor(`lb:web:measure:EditabilityRequestConstructor).
lang:constructor(`lb:web:measure:EditabilityResponseConstructor).
lang:constructor(`lb:web:measure:UpdateRequestConstructor).
lang:constructor(`lb:web:measure:MetricLockConstructor).
lang:constructor(`lb:web:measure:DimensionLockConstructor).
lang:constructor(`lb:web:measure:InverseConstructor).
lang:constructor(`lb:web:measure:InverseGroupConstructor).
lang:constructor(`lb:web:measure:UpdateExprConstructor).
lang:constructor(`lb:web:measure:PartitionResponseConstructor).
lang:constructor(`lb:web:measure:TypeDefinitionConstructor).

/*
 * lb:web:measure:AdminRequest
 */

/**
 * enum lb:web:measure:AdminRequest:Kind
 */
lb:web:measure:AdminRequest:Kind(x) -> .
lb:web:measure:AdminRequest:Kind_enum[s]=x -> string(s), lb:web:measure:AdminRequest:Kind(x).
lb:web:measure:AdminRequest:Kind_value[x]=s -> lb:web:measure:AdminRequest:Kind(x), string(s).
lang:constructor(`lb:web:measure:AdminRequest:Kind_enum).
lb:web:measure:AdminRequest:Kind_enum[s]=_ -> s = "RESTART"; s = "WORKSPACE"; s = "CONFIGURE"; s = "CLEAR_CACHED_LOGIC".
lb:web:measure:AdminRequest:Kind(x), lb:web:measure:AdminRequest:Kind_enum["RESTART"]=x <- .
lb:web:measure:AdminRequest:Kind(x), lb:web:measure:AdminRequest:Kind_enum["WORKSPACE"]=x <- .
lb:web:measure:AdminRequest:Kind(x), lb:web:measure:AdminRequest:Kind_enum["CONFIGURE"]=x <- .
lb:web:measure:AdminRequest:Kind(x), lb:web:measure:AdminRequest:Kind_enum["CLEAR_CACHED_LOGIC"]=x <- .
lb:web:measure:AdminRequest:Kind_value[x]=s <- lb:web:measure:AdminRequest:Kind_enum[s]=x.
lb:web:measure:AdminRequest:Kind_value[x]=s -> lb:web:measure:AdminRequest:Kind_enum[s]=x.

/*
 * lb:web:measure:AggExpr
 */
/*
* message lb:web:measure:AggExpr:Grouping
*/
lb:web:measure:AggExpr:Grouping(_) -> .lb:web:measure:AggExpr:GroupingConstructor[i]=x ->int(i), lb:web:measure:AggExpr:Grouping(x).
lb:web:measure:AggExpr:Grouping_kind[x] = y -> lb:web:measure:AggExpr:Grouping(x), lb:web:measure:AggExpr:Grouping:Kind(y).
lb:web:measure:AggExpr:Grouping_label[x] = y -> lb:web:measure:AggExpr:Grouping(x), string(y).
lb:web:measure:AggExpr:Grouping_dimension[x] = y -> lb:web:measure:AggExpr:Grouping(x), string(y).
lb:web:measure:AggExpr:Grouping_hierarchy[x] = y -> lb:web:measure:AggExpr:Grouping(x), string(y).
lb:web:measure:AggExpr:Grouping_level[x] = y -> lb:web:measure:AggExpr:Grouping(x), string(y).
lb:web:measure:AggExpr:Grouping_multi_dim_map[x] = y -> lb:web:measure:AggExpr:Grouping(x), string(y).
/*
* message lb:web:measure:AggExpr:Method
*/
lb:web:measure:AggExpr:Method(_) -> .lb:web:measure:AggExpr:MethodConstructor[i]=x ->int(i), lb:web:measure:AggExpr:Method(x).
lb:web:measure:AggExpr:Method_primitive[x] = y -> lb:web:measure:AggExpr:Method(x), lb:web:measure:AggExpr:Method:Primitive(y).
lb:web:measure:AggExpr:Method_named[x] = y -> lb:web:measure:AggExpr:Method(x), string(y).
lb:web:measure:AggExpr:Method_composite[x, i] = y -> lb:web:measure:AggExpr:Method(x), int(i), lb:web:measure:AggExpr:Method:CompositeComponent(y).
lb:web:measure:AggExpr:Method_header_sort_level[x] = y -> lb:web:measure:AggExpr:Method(x), lb:web:measure:QualifiedLevel(y).
lang:constructor(`lb:web:measure:AggExpr:GroupingConstructor).
lang:constructor(`lb:web:measure:AggExpr:MethodConstructor).

/*
 * lb:web:measure:DeltaExpr
 */

/**
 * enum lb:web:measure:DeltaExpr:Kind
 */
lb:web:measure:DeltaExpr:Kind(x) -> .
lb:web:measure:DeltaExpr:Kind_enum[s]=x -> string(s), lb:web:measure:DeltaExpr:Kind(x).
lb:web:measure:DeltaExpr:Kind_value[x]=s -> lb:web:measure:DeltaExpr:Kind(x), string(s).
lang:constructor(`lb:web:measure:DeltaExpr:Kind_enum).
lb:web:measure:DeltaExpr:Kind_enum[s]=_ -> s = "ASSERTION"; s = "RETRACTION".
lb:web:measure:DeltaExpr:Kind(x), lb:web:measure:DeltaExpr:Kind_enum["ASSERTION"]=x <- .
lb:web:measure:DeltaExpr:Kind(x), lb:web:measure:DeltaExpr:Kind_enum["RETRACTION"]=x <- .
lb:web:measure:DeltaExpr:Kind_value[x]=s <- lb:web:measure:DeltaExpr:Kind_enum[s]=x.
lb:web:measure:DeltaExpr:Kind_value[x]=s -> lb:web:measure:DeltaExpr:Kind_enum[s]=x.

/*
 * lb:web:measure:Type
 */

/**
 * enum lb:web:measure:Type:Kind
 */
lb:web:measure:Type:Kind(x) -> .
lb:web:measure:Type:Kind_enum[s]=x -> string(s), lb:web:measure:Type:Kind(x).
lb:web:measure:Type:Kind_value[x]=s -> lb:web:measure:Type:Kind(x), string(s).
lang:constructor(`lb:web:measure:Type:Kind_enum).
lb:web:measure:Type:Kind_enum[s]=_ -> s = "STRING"; s = "INT"; s = "FLOAT"; s = "DECIMAL"; s = "BOOLEAN"; s = "NAMED".
lb:web:measure:Type:Kind(x), lb:web:measure:Type:Kind_enum["STRING"]=x <- .
lb:web:measure:Type:Kind(x), lb:web:measure:Type:Kind_enum["INT"]=x <- .
lb:web:measure:Type:Kind(x), lb:web:measure:Type:Kind_enum["FLOAT"]=x <- .
lb:web:measure:Type:Kind(x), lb:web:measure:Type:Kind_enum["DECIMAL"]=x <- .
lb:web:measure:Type:Kind(x), lb:web:measure:Type:Kind_enum["BOOLEAN"]=x <- .
lb:web:measure:Type:Kind(x), lb:web:measure:Type:Kind_enum["NAMED"]=x <- .
lb:web:measure:Type:Kind_value[x]=s <- lb:web:measure:Type:Kind_enum[s]=x.
lb:web:measure:Type:Kind_value[x]=s -> lb:web:measure:Type:Kind_enum[s]=x.

/*
 * lb:web:measure:LiteralExpr
 */

/**
 * enum lb:web:measure:LiteralExpr:Kind
 */
lb:web:measure:LiteralExpr:Kind(x) -> .
lb:web:measure:LiteralExpr:Kind_enum[s]=x -> string(s), lb:web:measure:LiteralExpr:Kind(x).
lb:web:measure:LiteralExpr:Kind_value[x]=s -> lb:web:measure:LiteralExpr:Kind(x), string(s).
lang:constructor(`lb:web:measure:LiteralExpr:Kind_enum).
lb:web:measure:LiteralExpr:Kind_enum[s]=_ -> s = "GENERAL"; s = "TOP_SINGLETON".
lb:web:measure:LiteralExpr:Kind(x), lb:web:measure:LiteralExpr:Kind_enum["GENERAL"]=x <- .
lb:web:measure:LiteralExpr:Kind(x), lb:web:measure:LiteralExpr:Kind_enum["TOP_SINGLETON"]=x <- .
lb:web:measure:LiteralExpr:Kind_value[x]=s <- lb:web:measure:LiteralExpr:Kind_enum[s]=x.
lb:web:measure:LiteralExpr:Kind_value[x]=s -> lb:web:measure:LiteralExpr:Kind_enum[s]=x.

/*
 * lb:web:measure:AbsExpr
 */
/*
* message lb:web:measure:AbsExpr:ExprArgument
*/
lb:web:measure:AbsExpr:ExprArgument(_) -> .lb:web:measure:AbsExpr:ExprArgumentConstructor[i]=x ->int(i), lb:web:measure:AbsExpr:ExprArgument(x).
lb:web:measure:AbsExpr:ExprArgument_name[x] = y -> lb:web:measure:AbsExpr:ExprArgument(x), string(y).
lb:web:measure:AbsExpr:ExprArgument_expr[x] = y -> lb:web:measure:AbsExpr:ExprArgument(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:AbsExpr:InterArgument
*/
lb:web:measure:AbsExpr:InterArgument(_) -> .lb:web:measure:AbsExpr:InterArgumentConstructor[i]=x ->int(i), lb:web:measure:AbsExpr:InterArgument(x).
lb:web:measure:AbsExpr:InterArgument_name[x] = y -> lb:web:measure:AbsExpr:InterArgument(x), string(y).
lb:web:measure:AbsExpr:InterArgument_inter[x] = y -> lb:web:measure:AbsExpr:InterArgument(x), lb:web:measure:Intersection(y).
lang:constructor(`lb:web:measure:AbsExpr:ExprArgumentConstructor).
lang:constructor(`lb:web:measure:AbsExpr:InterArgumentConstructor).

/*
 * lb:web:measure:UpdateExpr:Transform:SpreadKind
 */
/*
* message lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetric
*/
lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetric(_) -> .lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetricConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetric(x).
lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetric_metric[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetric(x), string(y).
/*
* message lb:web:measure:UpdateExpr:Transform:SpreadKind:Query
*/
lb:web:measure:UpdateExpr:Transform:SpreadKind:Query(_) -> .lb:web:measure:UpdateExpr:Transform:SpreadKind:QueryConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Transform:SpreadKind:Query(x).
lb:web:measure:UpdateExpr:Transform:SpreadKind:Query_expr[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:Query(x), lb:web:measure:MeasureExpr(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind:Query_expr_str[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:Query(x), string(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind:Query_type[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:Query(x), lb:web:measure:Type(y).
/*
* message lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent
*/
lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent(_) -> .lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponentConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent(x).
lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent_label[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent(x), string(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent_dimension[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent(x), string(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent_primitive[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(y).

/**
 * enum lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive
 */
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x) -> .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=x -> string(s), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x).
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_value[x]=s -> lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), string(s).
lang:constructor(`lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetricConstructor).
lang:constructor(`lb:web:measure:UpdateExpr:Transform:SpreadKind:QueryConstructor).
lang:constructor(`lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponentConstructor).
lang:constructor(`lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum).
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=_ -> s = "EVEN"; s = "RATIO"; s = "DELTA"; s = "REPLICATE"; s = "EVEN_FLOAT"; s = "RATIO_FLOAT".
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum["EVEN"]=x <- .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum["RATIO"]=x <- .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum["DELTA"]=x <- .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum["REPLICATE"]=x <- .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum["EVEN_FLOAT"]=x <- .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum["RATIO_FLOAT"]=x <- .
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_value[x]=s <- lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=x.
lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_value[x]=s -> lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive_enum[s]=x.

/*
 * lb:web:measure:UpdateExpr:Target
 */
/*
* message lb:web:measure:UpdateExpr:Target:LevelMap
*/
lb:web:measure:UpdateExpr:Target:LevelMap(_) -> .lb:web:measure:UpdateExpr:Target:LevelMapConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Target:LevelMap(x).
lb:web:measure:UpdateExpr:Target:LevelMap_dimension[x] = y -> lb:web:measure:UpdateExpr:Target:LevelMap(x), string(y).
lb:web:measure:UpdateExpr:Target:LevelMap_hierarchy[x] = y -> lb:web:measure:UpdateExpr:Target:LevelMap(x), string(y).
lb:web:measure:UpdateExpr:Target:LevelMap_source_level[x] = y -> lb:web:measure:UpdateExpr:Target:LevelMap(x), string(y).
lb:web:measure:UpdateExpr:Target:LevelMap_target_level[x] = y -> lb:web:measure:UpdateExpr:Target:LevelMap(x), string(y).
lang:constructor(`lb:web:measure:UpdateExpr:Target:LevelMapConstructor).

/*
 * lb:web:measure:UpdateExpr:Transform
 */
/*
* message lb:web:measure:UpdateExpr:Transform:SpreadKind
*/
lb:web:measure:UpdateExpr:Transform:SpreadKind(_) -> .lb:web:measure:UpdateExpr:Transform:SpreadKindConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Transform:SpreadKind(x).
lb:web:measure:UpdateExpr:Transform:SpreadKind_primitive[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Primitive(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind_query[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:Query(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind_named[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind(x), string(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind_composite[x, i] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind(x), int(i), lb:web:measure:UpdateExpr:Transform:SpreadKind:CompositeComponent(y).
lb:web:measure:UpdateExpr:Transform:SpreadKind_by_metric[x] = y -> lb:web:measure:UpdateExpr:Transform:SpreadKind(x), lb:web:measure:UpdateExpr:Transform:SpreadKind:ByMetric(y).
lang:constructor(`lb:web:measure:UpdateExpr:Transform:SpreadKindConstructor).

/*
 * lb:web:measure:AggExpr:Grouping
 */

/**
 * enum lb:web:measure:AggExpr:Grouping:Kind
 */
lb:web:measure:AggExpr:Grouping:Kind(x) -> .
lb:web:measure:AggExpr:Grouping:Kind_enum[s]=x -> string(s), lb:web:measure:AggExpr:Grouping:Kind(x).
lb:web:measure:AggExpr:Grouping:Kind_value[x]=s -> lb:web:measure:AggExpr:Grouping:Kind(x), string(s).
lang:constructor(`lb:web:measure:AggExpr:Grouping:Kind_enum).
lb:web:measure:AggExpr:Grouping:Kind_enum[s]=_ -> s = "ALL"; s = "MAP"; s = "MULTI_MAP"; s = "SLIDE".
lb:web:measure:AggExpr:Grouping:Kind(x), lb:web:measure:AggExpr:Grouping:Kind_enum["ALL"]=x <- .
lb:web:measure:AggExpr:Grouping:Kind(x), lb:web:measure:AggExpr:Grouping:Kind_enum["MAP"]=x <- .
lb:web:measure:AggExpr:Grouping:Kind(x), lb:web:measure:AggExpr:Grouping:Kind_enum["MULTI_MAP"]=x <- .
lb:web:measure:AggExpr:Grouping:Kind(x), lb:web:measure:AggExpr:Grouping:Kind_enum["SLIDE"]=x <- .
lb:web:measure:AggExpr:Grouping:Kind_value[x]=s <- lb:web:measure:AggExpr:Grouping:Kind_enum[s]=x.
lb:web:measure:AggExpr:Grouping:Kind_value[x]=s -> lb:web:measure:AggExpr:Grouping:Kind_enum[s]=x.

/*
 * lb:web:measure:AggExpr:Method
 */
/*
* message lb:web:measure:AggExpr:Method:CompositeComponent
*/
lb:web:measure:AggExpr:Method:CompositeComponent(_) -> .lb:web:measure:AggExpr:Method:CompositeComponentConstructor[i]=x ->int(i), lb:web:measure:AggExpr:Method:CompositeComponent(x).
lb:web:measure:AggExpr:Method:CompositeComponent_label[x] = y -> lb:web:measure:AggExpr:Method:CompositeComponent(x), string(y).
lb:web:measure:AggExpr:Method:CompositeComponent_dimension[x] = y -> lb:web:measure:AggExpr:Method:CompositeComponent(x), string(y).
lb:web:measure:AggExpr:Method:CompositeComponent_hierarchy[x] = y -> lb:web:measure:AggExpr:Method:CompositeComponent(x), string(y).
lb:web:measure:AggExpr:Method:CompositeComponent_primitive[x] = y -> lb:web:measure:AggExpr:Method:CompositeComponent(x), lb:web:measure:AggExpr:Method:Primitive(y).

/**
 * enum lb:web:measure:AggExpr:Method:Primitive
 */
lb:web:measure:AggExpr:Method:Primitive(x) -> .
lb:web:measure:AggExpr:Method:Primitive_enum[s]=x -> string(s), lb:web:measure:AggExpr:Method:Primitive(x).
lb:web:measure:AggExpr:Method:Primitive_value[x]=s -> lb:web:measure:AggExpr:Method:Primitive(x), string(s).
lang:constructor(`lb:web:measure:AggExpr:Method:CompositeComponentConstructor).
lang:constructor(`lb:web:measure:AggExpr:Method:Primitive_enum).
lb:web:measure:AggExpr:Method:Primitive_enum[s]=_ -> s = "COLLECT"; s = "AMBIG"; s = "TOTAL"; s = "MIN"; s = "MAX"; s = "COUNT"; s = "MODE"; s = "COUNT_DISTINCT"; s = "HISTOGRAM"; s = "SORT"; s = "AVERAGE"; s = "KEY_SORT".
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["COLLECT"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["AMBIG"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["TOTAL"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["MIN"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["MAX"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["COUNT"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["MODE"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["COUNT_DISTINCT"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["HISTOGRAM"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["SORT"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["AVERAGE"]=x <- .
lb:web:measure:AggExpr:Method:Primitive(x), lb:web:measure:AggExpr:Method:Primitive_enum["KEY_SORT"]=x <- .
lb:web:measure:AggExpr:Method:Primitive_value[x]=s <- lb:web:measure:AggExpr:Method:Primitive_enum[s]=x.
lb:web:measure:AggExpr:Method:Primitive_value[x]=s -> lb:web:measure:AggExpr:Method:Primitive_enum[s]=x.

/*
 * lb:web:measure:Op
 */

/**
 * enum lb:web:measure:Op:Kind
 */
lb:web:measure:Op:Kind(x) -> .
lb:web:measure:Op:Kind_enum[s]=x -> string(s), lb:web:measure:Op:Kind(x).
lb:web:measure:Op:Kind_value[x]=s -> lb:web:measure:Op:Kind(x), string(s).
lang:constructor(`lb:web:measure:Op:Kind_enum).
lb:web:measure:Op:Kind_enum[s]=_ -> s = "NEGATE"; s = "SQRT"; s = "LOG"; s = "TO_UPPER"; s = "TO_LOWER"; s = "LENGTH"; s = "ADD"; s = "MAX"; s = "SUBTRACT"; s = "MULTIPLY"; s = "DIVIDE"; s = "FLOOR"; s = "CEIL"; s = "POW"; s = "MOD"; s = "ABS"; s = "NAMED".
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["NEGATE"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["SQRT"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["LOG"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["TO_UPPER"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["TO_LOWER"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["LENGTH"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["ADD"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["MAX"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["SUBTRACT"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["MULTIPLY"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["DIVIDE"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["FLOOR"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["CEIL"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["POW"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["MOD"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["ABS"]=x <- .
lb:web:measure:Op:Kind(x), lb:web:measure:Op:Kind_enum["NAMED"]=x <- .
lb:web:measure:Op:Kind_value[x]=s <- lb:web:measure:Op:Kind_enum[s]=x.
lb:web:measure:Op:Kind_value[x]=s -> lb:web:measure:Op:Kind_enum[s]=x.

/*
 * lb:web:measure:ExprSubst
 */

/**
 * enum lb:web:measure:ExprSubst:Phase
 */
lb:web:measure:ExprSubst:Phase(x) -> .
lb:web:measure:ExprSubst:Phase_enum[s]=x -> string(s), lb:web:measure:ExprSubst:Phase(x).
lb:web:measure:ExprSubst:Phase_value[x]=s -> lb:web:measure:ExprSubst:Phase(x), string(s).
lang:constructor(`lb:web:measure:ExprSubst:Phase_enum).
lb:web:measure:ExprSubst:Phase_enum[s]=_ -> s = "PRE"; s = "POST".
lb:web:measure:ExprSubst:Phase(x), lb:web:measure:ExprSubst:Phase_enum["PRE"]=x <- .
lb:web:measure:ExprSubst:Phase(x), lb:web:measure:ExprSubst:Phase_enum["POST"]=x <- .
lb:web:measure:ExprSubst:Phase_value[x]=s <- lb:web:measure:ExprSubst:Phase_enum[s]=x.
lb:web:measure:ExprSubst:Phase_value[x]=s -> lb:web:measure:ExprSubst:Phase_enum[s]=x.

/*
 * lb:web:measure:CompositeIntersection
 */

/**
 * enum lb:web:measure:CompositeIntersection:Kind
 */
lb:web:measure:CompositeIntersection:Kind(x) -> .
lb:web:measure:CompositeIntersection:Kind_enum[s]=x -> string(s), lb:web:measure:CompositeIntersection:Kind(x).
lb:web:measure:CompositeIntersection:Kind_value[x]=s -> lb:web:measure:CompositeIntersection:Kind(x), string(s).
lang:constructor(`lb:web:measure:CompositeIntersection:Kind_enum).
lb:web:measure:CompositeIntersection:Kind_enum[s]=_ -> s = "MEET"; s = "JOIN".
lb:web:measure:CompositeIntersection:Kind(x), lb:web:measure:CompositeIntersection:Kind_enum["MEET"]=x <- .
lb:web:measure:CompositeIntersection:Kind(x), lb:web:measure:CompositeIntersection:Kind_enum["JOIN"]=x <- .
lb:web:measure:CompositeIntersection:Kind_value[x]=s <- lb:web:measure:CompositeIntersection:Kind_enum[s]=x.
lb:web:measure:CompositeIntersection:Kind_value[x]=s -> lb:web:measure:CompositeIntersection:Kind_enum[s]=x.

/*
 * lb:web:measure:Problem
 */
/*
* message lb:web:measure:Problem:StackFrame
*/
lb:web:measure:Problem:StackFrame(_) -> .lb:web:measure:Problem:StackFrameConstructor[i]=x ->int(i), lb:web:measure:Problem:StackFrame(x).
lb:web:measure:Problem:StackFrame_file_name[x] = y -> lb:web:measure:Problem:StackFrame(x), string(y).
lb:web:measure:Problem:StackFrame_class_name[x] = y -> lb:web:measure:Problem:StackFrame(x), string(y).
lb:web:measure:Problem:StackFrame_method_name[x] = y -> lb:web:measure:Problem:StackFrame(x), string(y).
lb:web:measure:Problem:StackFrame_line[x] = y -> lb:web:measure:Problem:StackFrame(x), int(y).

/**
 * enum lb:web:measure:Problem:Severity
 */
lb:web:measure:Problem:Severity(x) -> .
lb:web:measure:Problem:Severity_enum[s]=x -> string(s), lb:web:measure:Problem:Severity(x).
lb:web:measure:Problem:Severity_value[x]=s -> lb:web:measure:Problem:Severity(x), string(s).
lang:constructor(`lb:web:measure:Problem:StackFrameConstructor).
lang:constructor(`lb:web:measure:Problem:Severity_enum).
lb:web:measure:Problem:Severity_enum[s]=_ -> s = "WARNING"; s = "ERROR".
lb:web:measure:Problem:Severity(x), lb:web:measure:Problem:Severity_enum["WARNING"]=x <- .
lb:web:measure:Problem:Severity(x), lb:web:measure:Problem:Severity_enum["ERROR"]=x <- .
lb:web:measure:Problem:Severity_value[x]=s <- lb:web:measure:Problem:Severity_enum[s]=x.
lb:web:measure:Problem:Severity_value[x]=s -> lb:web:measure:Problem:Severity_enum[s]=x.

/*
 * lb:web:measure:Comparison
 */

/**
 * enum lb:web:measure:Comparison:Kind
 */
lb:web:measure:Comparison:Kind(x) -> .
lb:web:measure:Comparison:Kind_enum[s]=x -> string(s), lb:web:measure:Comparison:Kind(x).
lb:web:measure:Comparison:Kind_value[x]=s -> lb:web:measure:Comparison:Kind(x), string(s).
lang:constructor(`lb:web:measure:Comparison:Kind_enum).
lb:web:measure:Comparison:Kind_enum[s]=_ -> s = "EQUALS"; s = "NOT_EQUALS"; s = "LESS_THAN"; s = "LESS_OR_EQUALS"; s = "GREATER_THAN"; s = "GREATER_OR_EQUALS"; s = "MATCH".
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["EQUALS"]=x <- .
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["NOT_EQUALS"]=x <- .
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["LESS_THAN"]=x <- .
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["LESS_OR_EQUALS"]=x <- .
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["GREATER_THAN"]=x <- .
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["GREATER_OR_EQUALS"]=x <- .
lb:web:measure:Comparison:Kind(x), lb:web:measure:Comparison:Kind_enum["MATCH"]=x <- .
lb:web:measure:Comparison:Kind_value[x]=s <- lb:web:measure:Comparison:Kind_enum[s]=x.
lb:web:measure:Comparison:Kind_value[x]=s -> lb:web:measure:Comparison:Kind_enum[s]=x.

/*
 * lb:web:measure:MeasureExpr
 */

/**
 * enum lb:web:measure:MeasureExpr:Kind
 */
lb:web:measure:MeasureExpr:Kind(x) -> .
lb:web:measure:MeasureExpr:Kind_enum[s]=x -> string(s), lb:web:measure:MeasureExpr:Kind(x).
lb:web:measure:MeasureExpr:Kind_value[x]=s -> lb:web:measure:MeasureExpr:Kind(x), string(s).
lang:constructor(`lb:web:measure:MeasureExpr:Kind_enum).
lb:web:measure:MeasureExpr:Kind_enum[s]=_ -> s = "METRIC"; s = "AGGREGATION"; s = "FILTER"; s = "COMPOSITE"; s = "ATTRIBUTE"; s = "OP"; s = "WIDEN"; s = "DICE"; s = "DROP"; s = "DIFFERENCE"; s = "DEMOTE"; s = "PREV"; s = "OVERRIDE"; s = "DELTA"; s = "PARAM"; s = "SPLIT"; s = "RELABEL"; s = "VARIABLE"; s = "ABSTRACTION"; s = "APPLICATION"; s = "LITERAL"; s = "CAST"; s = "PROMOTE".
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["METRIC"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["AGGREGATION"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["FILTER"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["COMPOSITE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["ATTRIBUTE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["OP"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["WIDEN"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["DICE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["DROP"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["DIFFERENCE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["DEMOTE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["PREV"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["OVERRIDE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["DELTA"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["PARAM"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["SPLIT"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["RELABEL"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["VARIABLE"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["ABSTRACTION"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["APPLICATION"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["LITERAL"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["CAST"]=x <- .
lb:web:measure:MeasureExpr:Kind(x), lb:web:measure:MeasureExpr:Kind_enum["PROMOTE"]=x <- .
lb:web:measure:MeasureExpr:Kind_value[x]=s <- lb:web:measure:MeasureExpr:Kind_enum[s]=x.
lb:web:measure:MeasureExpr:Kind_value[x]=s -> lb:web:measure:MeasureExpr:Kind_enum[s]=x.

/*
 * lb:web:measure:common
 */
/*
* message lb:web:measure:common:Location
*/
lb:web:measure:common:Location(_) -> .lb:web:measure:common:LocationConstructor[i]=x ->int(i), lb:web:measure:common:Location(x).
lb:web:measure:common:Location_row[x] = y -> lb:web:measure:common:Location(x), int(y).
lb:web:measure:common:Location_column[x] = y -> lb:web:measure:common:Location(x), int(y).
/*
* message lb:web:measure:common:Region
*/
lb:web:measure:common:Region(_) -> .lb:web:measure:common:RegionConstructor[i]=x ->int(i), lb:web:measure:common:Region(x).
lb:web:measure:common:Region_start[x] = y -> lb:web:measure:common:Region(x), lb:web:measure:common:Location(y).
lb:web:measure:common:Region_end[x] = y -> lb:web:measure:common:Region(x), lb:web:measure:common:Location(y).
lang:constructor(`lb:web:measure:common:LocationConstructor).
lang:constructor(`lb:web:measure:common:RegionConstructor).

/*
 * lb:web:measure:ValueType
 */

/**
 * enum lb:web:measure:ValueType:Kind
 */
lb:web:measure:ValueType:Kind(x) -> .
lb:web:measure:ValueType:Kind_enum[s]=x -> string(s), lb:web:measure:ValueType:Kind(x).
lb:web:measure:ValueType:Kind_value[x]=s -> lb:web:measure:ValueType:Kind(x), string(s).
lang:constructor(`lb:web:measure:ValueType:Kind_enum).
lb:web:measure:ValueType:Kind_enum[s]=_ -> s = "SINGLETON"; s = "SET".
lb:web:measure:ValueType:Kind(x), lb:web:measure:ValueType:Kind_enum["SINGLETON"]=x <- .
lb:web:measure:ValueType:Kind(x), lb:web:measure:ValueType:Kind_enum["SET"]=x <- .
lb:web:measure:ValueType:Kind_value[x]=s <- lb:web:measure:ValueType:Kind_enum[s]=x.
lb:web:measure:ValueType:Kind_value[x]=s -> lb:web:measure:ValueType:Kind_enum[s]=x.

/*
 * lb:web:measure:Dimension
 */
/*
* message lb:web:measure:Dimension:Hierarchy
*/
lb:web:measure:Dimension:Hierarchy(_) -> .lb:web:measure:Dimension:HierarchyConstructor[i]=x ->int(i), lb:web:measure:Dimension:Hierarchy(x).
lb:web:measure:Dimension:Hierarchy_name[x] = y -> lb:web:measure:Dimension:Hierarchy(x), string(y).
lb:web:measure:Dimension:Hierarchy_path[x, i] = y -> lb:web:measure:Dimension:Hierarchy(x), int(i), lb:web:measure:Dimension:Hierarchy:Path(y).
/*
* message lb:web:measure:Dimension:Edge
*/
lb:web:measure:Dimension:Edge(_) -> .lb:web:measure:Dimension:EdgeConstructor[i]=x ->int(i), lb:web:measure:Dimension:Edge(x).
lb:web:measure:Dimension:Edge_source_level[x] = y -> lb:web:measure:Dimension:Edge(x), string(y).
lb:web:measure:Dimension:Edge_target_level[x] = y -> lb:web:measure:Dimension:Edge(x), string(y).
lb:web:measure:Dimension:Edge_pred[x] = y -> lb:web:measure:Dimension:Edge(x), lb:web:measure:Predicate(y).
/*
* message lb:web:measure:Dimension:Level
*/
lb:web:measure:Dimension:Level(_) -> .lb:web:measure:Dimension:LevelConstructor[i]=x ->int(i), lb:web:measure:Dimension:Level(x).
lb:web:measure:Dimension:Level_name[x] = y -> lb:web:measure:Dimension:Level(x), string(y).
lb:web:measure:Dimension:Level_type[x] = y -> lb:web:measure:Dimension:Level(x), lb:web:measure:Type(y).
lb:web:measure:Dimension:Level_attribute(x, y) -> lb:web:measure:Dimension:Level(x), lb:web:measure:Attribute(y).
lb:web:measure:Dimension:Level_caption[x] = y -> lb:web:measure:Dimension:Level(x), string(y).
lang:constructor(`lb:web:measure:Dimension:HierarchyConstructor).
lang:constructor(`lb:web:measure:Dimension:EdgeConstructor).
lang:constructor(`lb:web:measure:Dimension:LevelConstructor).

/*
 * lb:web:measure:UpdateExpr
 */
/*
* message lb:web:measure:UpdateExpr:Target
*/
lb:web:measure:UpdateExpr:Target(_) -> .lb:web:measure:UpdateExpr:TargetConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Target(x).
lb:web:measure:UpdateExpr:Target_metric[x] = y -> lb:web:measure:UpdateExpr:Target(x), string(y).
lb:web:measure:UpdateExpr:Target_attribute[x] = y -> lb:web:measure:UpdateExpr:Target(x), lb:web:measure:AttributeExpr(y).
lb:web:measure:UpdateExpr:Target_level[x] = y -> lb:web:measure:UpdateExpr:Target(x), lb:web:measure:QualifiedLevel(y).
lb:web:measure:UpdateExpr:Target_level_map[x] = y -> lb:web:measure:UpdateExpr:Target(x), lb:web:measure:UpdateExpr:Target:LevelMap(y).
/*
* message lb:web:measure:UpdateExpr:Transform
*/
lb:web:measure:UpdateExpr:Transform(_) -> .lb:web:measure:UpdateExpr:TransformConstructor[i]=x ->int(i), lb:web:measure:UpdateExpr:Transform(x).
lb:web:measure:UpdateExpr:Transform_spread_kind[x] = y -> lb:web:measure:UpdateExpr:Transform(x), lb:web:measure:UpdateExpr:Transform:SpreadKind(y).
lb:web:measure:UpdateExpr:Transform_distribution(x, y) -> lb:web:measure:UpdateExpr:Transform(x), lb:web:measure:QualifiedLevel(y).

/**
 * enum lb:web:measure:UpdateExpr:Kind
 */
lb:web:measure:UpdateExpr:Kind(x) -> .
lb:web:measure:UpdateExpr:Kind_enum[s]=x -> string(s), lb:web:measure:UpdateExpr:Kind(x).
lb:web:measure:UpdateExpr:Kind_value[x]=s -> lb:web:measure:UpdateExpr:Kind(x), string(s).
lang:constructor(`lb:web:measure:UpdateExpr:TargetConstructor).
lang:constructor(`lb:web:measure:UpdateExpr:TransformConstructor).
lang:constructor(`lb:web:measure:UpdateExpr:Kind_enum).
lb:web:measure:UpdateExpr:Kind_enum[s]=_ -> s = "SPREAD"; s = "REMOVE".
lb:web:measure:UpdateExpr:Kind(x), lb:web:measure:UpdateExpr:Kind_enum["SPREAD"]=x <- .
lb:web:measure:UpdateExpr:Kind(x), lb:web:measure:UpdateExpr:Kind_enum["REMOVE"]=x <- .
lb:web:measure:UpdateExpr:Kind_value[x]=s <- lb:web:measure:UpdateExpr:Kind_enum[s]=x.
lb:web:measure:UpdateExpr:Kind_value[x]=s -> lb:web:measure:UpdateExpr:Kind_enum[s]=x.

/*
 * lb:web:measure:Signature
 */

/**
 * enum lb:web:measure:Signature:Kind
 */
lb:web:measure:Signature:Kind(x) -> .
lb:web:measure:Signature:Kind_enum[s]=x -> string(s), lb:web:measure:Signature:Kind(x).
lb:web:measure:Signature:Kind_value[x]=s -> lb:web:measure:Signature:Kind(x), string(s).
lang:constructor(`lb:web:measure:Signature:Kind_enum).
lb:web:measure:Signature:Kind_enum[s]=_ -> s = "BASE".
lb:web:measure:Signature:Kind(x), lb:web:measure:Signature:Kind_enum["BASE"]=x <- .
lb:web:measure:Signature:Kind_value[x]=s <- lb:web:measure:Signature:Kind_enum[s]=x.
lb:web:measure:Signature:Kind_value[x]=s -> lb:web:measure:Signature:Kind_enum[s]=x.

/*
 * lb:web:measure:AppExpr
 */
/*
* message lb:web:measure:AppExpr:ExprArgument
*/
lb:web:measure:AppExpr:ExprArgument(_) -> .lb:web:measure:AppExpr:ExprArgumentConstructor[i]=x ->int(i), lb:web:measure:AppExpr:ExprArgument(x).
lb:web:measure:AppExpr:ExprArgument_name[x] = y -> lb:web:measure:AppExpr:ExprArgument(x), string(y).
lb:web:measure:AppExpr:ExprArgument_expr[x] = y -> lb:web:measure:AppExpr:ExprArgument(x), lb:web:measure:MeasureExpr(y).
/*
* message lb:web:measure:AppExpr:InterArgument
*/
lb:web:measure:AppExpr:InterArgument(_) -> .lb:web:measure:AppExpr:InterArgumentConstructor[i]=x ->int(i), lb:web:measure:AppExpr:InterArgument(x).
lb:web:measure:AppExpr:InterArgument_name[x] = y -> lb:web:measure:AppExpr:InterArgument(x), string(y).
lb:web:measure:AppExpr:InterArgument_inter[x] = y -> lb:web:measure:AppExpr:InterArgument(x), lb:web:measure:Intersection(y).
lang:constructor(`lb:web:measure:AppExpr:ExprArgumentConstructor).
lang:constructor(`lb:web:measure:AppExpr:InterArgumentConstructor).

/*
 * lb:web:measure:CompositeExpr
 */

/**
 * enum lb:web:measure:CompositeExpr:Kind
 */
lb:web:measure:CompositeExpr:Kind(x) -> .
lb:web:measure:CompositeExpr:Kind_enum[s]=x -> string(s), lb:web:measure:CompositeExpr:Kind(x).
lb:web:measure:CompositeExpr:Kind_value[x]=s -> lb:web:measure:CompositeExpr:Kind(x), string(s).
lang:constructor(`lb:web:measure:CompositeExpr:Kind_enum).
lb:web:measure:CompositeExpr:Kind_enum[s]=_ -> s = "INTERSECTION"; s = "UNION".
lb:web:measure:CompositeExpr:Kind(x), lb:web:measure:CompositeExpr:Kind_enum["INTERSECTION"]=x <- .
lb:web:measure:CompositeExpr:Kind(x), lb:web:measure:CompositeExpr:Kind_enum["UNION"]=x <- .
lb:web:measure:CompositeExpr:Kind_value[x]=s <- lb:web:measure:CompositeExpr:Kind_enum[s]=x.
lb:web:measure:CompositeExpr:Kind_value[x]=s -> lb:web:measure:CompositeExpr:Kind_enum[s]=x.

/*
 * lb:web:measure:Dimension:Hierarchy
 */
/*
* message lb:web:measure:Dimension:Hierarchy:Path
*/
lb:web:measure:Dimension:Hierarchy:Path(_) -> .lb:web:measure:Dimension:Hierarchy:PathConstructor[i]=x ->int(i), lb:web:measure:Dimension:Hierarchy:Path(x).
lb:web:measure:Dimension:Hierarchy:Path_level[x] = y -> lb:web:measure:Dimension:Hierarchy:Path(x), string(y).
lb:web:measure:Dimension:Hierarchy:Path_pred[x] = y -> lb:web:measure:Dimension:Hierarchy:Path(x), lb:web:measure:Predicate(y).
lang:constructor(`lb:web:measure:Dimension:Hierarchy:PathConstructor).
