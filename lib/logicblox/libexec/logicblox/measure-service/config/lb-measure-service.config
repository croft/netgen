# Controls how much information is reported in the logs.
#
# Currently can only none, info, perf, and debug, debug2
log_level = info

# Controls how generated code is presented in the logs,
# as LogiQL source or ProtoBuf bytecode.
#
# Either logiql or bytecode
code_format = logiql

# Controls how generated code is sent to the runtime,
# as LogiQL source or ProtoBuf bytecode.
#
# Either logiql or bytecode
compile_format = bytecode

# Emit comments containing additional information about the
# generated logic.  It is best to keep this disabled as constructing the 
# strings for the comments can be expensive.
emit_comments = false

# Should generated predicates use long or short names?
short_names = false

# should predicates be queried and logged after the transaction
query_after_fixpoint = false

# Whether warnings cause failure the same way errors do.
# The default is false
fatal_warnings = false

# The maximum number of CubiQL expressions for which we will cache 
# generated LogiQL.  Caching can be completely disabled by setting to 0.
max_compile_cache = 10000

# The maximum number of CubiQL expressions for which we will cache 
# the result of optimization.  Caching can be completely disabled by
# setting to 0.
max_optimize_cache = 10000

# Which optimizer implementation to use.
# This is a temporary config parameter, while optimizer is in transition from 
# Java code operating on a protobuf AST to Scala code operating on a Scala AST.
# Possible values:
## legacy         the original Java optimizer, mostly in its original form
## prefer-java    transitional optimizer, using legacy (Java) rules whenever available
## prefer-scala   [default] transitional optimizer, using new (Scala) rules whenever available
## compare-steps  testing optimizer, compares old vs new rules at each step
## compare-whole  testing optimizer, compares whole-rewrite result for legacy vs prefer-scala
optimizer = prefer-scala

# Use default values in reports.
use_default_values = false

# Use binary decimal column format.
binary_decimal_columns = false
